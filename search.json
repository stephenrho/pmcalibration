[{"path":"https://stephenrho.github.io/pmcalibration/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephen Rhodes. Author, maintainer, copyright holder.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rhodes S (2025). pmcalibration: Calibration curves clinical prediction models. R package version 0.2.0, https://github.com/stephenrho/pmcalibration.","code":"@Manual{,   title = {pmcalibration: Calibration curves for clinical prediction models},   author = {Stephen Rhodes},   year = {2025},   note = {R package version 0.2.0},   url = {https://github.com/stephenrho/pmcalibration}, }"},{"path":"https://stephenrho.github.io/pmcalibration/index.html","id":"pmcalibration-calibration-curves-for-clinical-prediction-models","dir":"","previous_headings":"","what":"Calibration Curves for Clinical Prediction Models","title":"Calibration Curves for Clinical Prediction Models","text":"clinical prediction model produce well calibrated risk predictions, meaning predicted probabilities align observed outcome rates. different levels calibration can assessed (see https://pubmed.ncbi.nlm.nih.gov/26772608/); package focuses assessing “moderate” calibration via non-linear calibration curves. pmcalibration implements calibration curves binary (right censored) time--event outcomes calculates metrics used assess correspondence predicted observed outcome probabilities (‘integrated calibration index’ ICIICI, aka EavgE_{avg}, well E50E_{50}, E90E_{90}, EmaxE_{max} - see ). goal pmcalibration implement range methods estimating smooth relationship predicted observed probabilities provide confidence intervals calibration metrics (via bootstrapping simulation based inference). Users able transform predicted risks creating calibration curve (example, logit transforming appears improve performance using regression spline - https://doi.org/10.31219/osf.io/4n86q). examples demonstrate usage package.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/index.html","id":"binary-outcome","dir":"","previous_headings":"","what":"Binary outcome","title":"Calibration Curves for Clinical Prediction Models","text":"data binary outcome, y, two ‘predictor’ variables, x1 x2. Suppose existing model predicting y x1 x2 follows externally validate model new data need calculate predicted probabilities. ’ll also extract observed outcomes. First can check weak calibration: top part printed summary gives estimates calibration intercept slope 95% CIs. bottom part printed summary gives likelihood ratio tests (see Miller et al. 1993) assessing (1) weak calibration whole (null hypothesis intercept = 0 slope = 1), (2) calibration large (H0: intercept = 0 given slope = 1), (3) calibration slope (H0: slope = 1). output suggests model model reasonably weakly calibrated: calibration intercept slope don’t clearly differ 0 1, respectively. can use calibration curve assess ‘moderate’ calibration. use pmcalibration fit flexible calibration curve, allowing non-linear relationship predicted actual probabilities. example , fit calibration curve using restricted cubic spline 5 knots (see ?rms::rcs). transf=\"logit\" signals predicted risks logit transformed fitting calibration curve (default binary y). pmcalibration calculates various metrics absolute difference predicted probability actual probability (estimated calibration curve). case 95% confidence intervals metrics calculated via simulation based inference (ci = \"sim\") 1000 replicates. Alternatively chosen bootstrap confidence intervals (ci = \"boot\").  printed metrics can interpreted follows: Eavg suggests average difference prediction actual probability outcome 0.054 (5%) 95% CI [0.035, 0.076]. E50 median difference prediction observed probability (inferred calibration curve). 50% differences 0.059 smaller. E90 90th percentile difference. 90% differences 0.083 smaller. Emax largest observed difference predicted observed probability. model can 0.14, broad confidence interval. ECI average squared difference predicted observed probabilities (multiplied 100). See Van Hoorde et al. (2015). pmcalibration produces plot default, shown . custom plot can obtained via plot.  one use get_curve extract data plotting method choice. model current form slightly overestimates risk low levels predicted risk underestimates risk predicted probabilities around 0.6. results can compared rms::val.prob. Note uses lowess(p, y, iter=0) fit calibration curve. case lowess results curve extending beyond possible range risks, Emax, E90, Eavg point estimates consistent .  Note also calibration intercept reported rms::val.prob comes logistic regression used estimate calibration slope. logistic_cal calibration intercept estimated via glm logit transformed predicted probabilities included offset term (.e., slope fixed 1 - see, e.g., Van Calster et al., 2016). calibration slope estimated via separate glm. can confirm accessing corresponding estimates logistic_cal object.","code":"# to install install.packages(\"pmcalibration\") # cran # or  devtools::install_github(\"stephenrho/pmcalibration\") # development library(pmcalibration)  # simulate some data for vignette set.seed(2345) dat <- sim_dat(1000, a1 = -1, a3 = 1)  # show the first 3 columns (col 4 is the true linear predictor/LP) head(dat[-4]) #>            x1         x2 y #> 1 -1.19142464 -0.9245914 0 #> 2  0.54930055 -1.0019698 0 #> 3 -0.06240514  1.5438665 1 #> 4  0.26544150  0.1632147 1 #> 5 -0.23459751 -1.2009388 0 #> 6 -0.99727160 -1.1899600 0 p(y = 1) = plogis( -1 + 1*x1 + 1*x2 ) p <- plogis(with(dat, -1 + x1 + x2)) y <- dat$y (lcal <- logistic_cal(y = y, p = p)) #> Logistic calibration intercept and slope: #>  #>                       Estimate Std. Error z value Pr(>|z|) lower upper #> Calibration Intercept    -0.11      0.080   -1.38     0.17 -0.27 0.046 #> Calibration Slope         1.06      0.078    0.80     0.42  0.91 1.220 #>  #> z-value for calibration slope is relative to slope = 1. #> lower and upper are the bounds of 95% profile confidence intervals. #>  #> Likelihood ratio tests (a = intercept, b = slope): #>  #>                                              statistic df Pr(>Chi) #> Weak calibration - H0: a = 0, b = 1               2.57  2     0.28 #> Calibration in the large - H0: a = 0 | b = 1      1.91  1     0.17 #> Calibration slope - H0: b = 1 | a                 0.65  1     0.42 (cc <- pmcalibration(y = y, p = p,                       smooth = \"rcs\", nk = 5,                      transf=\"logit\",                      ci = \"sim\",                       n=1000)) #> Calibration metrics based on a calibration curve estimated for a binary outcome via a restricted cubic spline (see ?rms::rcs) using logit transformed predicted probabilities. #>  #>      Estimate lower upper #> Eavg    0.054 0.035 0.076 #> E50     0.059 0.031 0.079 #> E90     0.083 0.060 0.134 #> Emax    0.138 0.081 0.448 #> ECI     0.368 0.177 0.751 #>  #> 95% confidence intervals calculated via simulation based inference with 1000 replicates. plot(cc, xlab=\"Predicted Risk of Outcome\", ylab=\"Expected Proportion with Outcome\", fillcol = \"blue\", ideallty = 0) pcc <- get_curve(cc) head(pcc)  #>             p        p_c      lower     upper #> 1 0.005804309 0.14402182 0.03580601 0.4538340 #> 2 0.015274021 0.11541021 0.04965833 0.2590454 #> 3 0.024743733 0.10296340 0.05610697 0.1868902 #> 4 0.034213445 0.09521032 0.05846271 0.1543373 #> 5 0.043683157 0.08985188 0.05926845 0.1357910 #> 6 0.053152869 0.08642764 0.05780335 0.1307891 # p = predicted risk (x-axis; this is not p provided to pmcalibration but is determined by eval) # p_c = risk implied by calibration curve (y-axis) library(rms) #> Loading required package: Hmisc #>  #> Attaching package: 'Hmisc' #> The following objects are masked from 'package:base': #>  #>     format.pval, units val.prob(p = p, y = y) |>    round(3) #>       Dxy   C (ROC)        R2         D  D:Chi-sq       D:p         U  U:Chi-sq  #>     0.627     0.813     0.348     0.280   281.217     0.000     0.001     2.566  #>       U:p         Q     Brier Intercept     Slope      Emax       E90      Eavg  #>     0.277     0.280     0.148    -0.076     1.062     0.145     0.073     0.044  #>       S:z       S:p  #>    -2.238     0.025 # access the model used to get calibration slope # and compare to estimates from val.prob coef(lcal$calibration_slope) |>    round(3) #> (Intercept)          LP  #>      -0.076       1.062"},{"path":"https://stephenrho.github.io/pmcalibration/index.html","id":"time-to-event-outcome","dir":"","previous_headings":"","what":"Time to event outcome","title":"Calibration Curves for Clinical Prediction Models","text":"code produces calibration curve, associated metrics, time--event outcome. curve constructed predictions given time point, extra argument time specified. use restricted cubic spline 5 knots assess predictions time = 15. case use ci=\"boot\" get bootstrap confidence intervals metrics curve (ci=\"sim\" currently unsupported time--event outcomes). default predicted risks transformed via complementary log-log transformation (function(x) log(-log(1 - x))) estimating calibration curve.  Compare rms::val.surv, arguments specified uses polspline::hare fit calibration curve. Note val.surv uses probability surviving time = u probability event occurring time = u.  can make plot easier compare.","code":"library(simsurv) library(survival)  # simulate some data n <- 2000 X <- data.frame(id = seq(n), x1 = rnorm(n), x2 = rnorm(n)) X$x3 <- X$x1*X$x2 # interaction  b <- c(\"x1\" = -.2, \"x2\" = -.2, \"x3\" = .1)  d <- simsurv(dist = \"weibull\", lambdas = .01, gammas = 1.5, x = X, betas = b, seed = 246)  mean(d$eventtime) #> [1] 19.60637 median(d$eventtime) #> [1] 16.52855 mean(d$status) # no censoring #> [1] 1  d <- cbind(d, X[,-1])  head(d) #>   id eventtime status         x1         x2          x3 #> 1  1 12.749281      1  0.7534077  0.8486379  0.63937033 #> 2  2 24.840161      1  0.4614734 -2.1876625 -1.00954805 #> 3  3  9.087482      1 -0.6338945 -1.8948297  1.20112211 #> 4  4 24.811402      1 -1.0248165  0.6541197 -0.67035271 #> 5  5 19.072266      1 -0.1673414 -0.4625003  0.07739544 #> 6  6 13.595427      1  0.2376988  0.6452848  0.15338343  # split into development and validation ddev <- d[1:1000, ] dval <- d[1001:2000, ]  # fit a cox model cph <- coxph(Surv(eventtime, status) ~ x1 + x2, data = ddev)  # predicted probability of event at time = 15 p = 1 - exp(-predict(cph, type=\"expected\", newdata = data.frame(eventtime=15, status=1, x1=dval$x1, x2=dval$x2)))  y <- with(dval, Surv(eventtime, status))  # calibration curve at time = 15 (cc <- pmcalibration(y = y, p = p, smooth = \"rcs\", nk = 5,                       ci = \"boot\", time = 15)) #> Calibration metrics based on a calibration curve estimated for a time-to-event outcome (time = 15) via a restricted cubic spline (see ?rms::rcs) using complementary log-log transformed predicted probabilities. #>  #>      Estimate lower upper #> Eavg    0.051 0.028 0.080 #> E50     0.046 0.020 0.077 #> E90     0.077 0.052 0.126 #> Emax    0.245 0.115 0.407 #> ECI     0.349 0.146 0.813 #>  #> 95% confidence intervals calculated via bootstrap resampling with 1000 replicates. mtext(\"time = 15\") (vs <- val.surv(S = y, est.surv = 1-p, u=15,                  fun = function(x) log(-log(x)))) #>  #> Validation of Predicted Survival at Time= 15     n= 1000 , events= 1000  #>  #> hare fit: #>  #> dim A/D   loglik       AIC        penalty  #>                                 min    max  #>   1 Add  -3949.05   7905.02  148.71     Inf #>   2 Add  -3874.70   7763.22   60.48  148.71 #>   3 Add  -3844.46   7709.64   32.04   60.48 #>   4 Del  -3828.44   7684.51    7.10   32.04 #>   5 Add  -3824.89   7684.32    0.00    7.10 #>  #> the present optimal number of dimensions is 5. #> penalty(AIC) was 6.91, the default (BIC), would have been 6.91. #>  #>   dim1           dim2           beta        SE         Wald #> Constant                            -2.6       0.25  -10.69 #> Time        26                    -0.031      0.005   -6.27 #> Co-1  linear                       0.063       0.26    0.24 #> Time       7.2                     -0.15      0.028   -5.42 #> Co-1     -0.81                      0.92       0.34    2.74 #>  #> Function used to transform predictions: #> function (x)  log(-log(x)) #>  #> Mean absolute error in predicted probabilities: 0.0352  #> 0.9 Quantile of absolute errors               : 0.0760 plot(vs, lim=0:1) x <- get_curve(cc)  with(x, plot(1-p, 1-p_c, type=\"l\", xlim=0:1, ylim=0:1,               xlab=\"Predicted Probability of Surviving 15\",               ylab=\"Actual Probability of Surviving 15\")) matplot(1-x$p, y = 1-x[, 3:4], type = \"l\", lty=2,          col=\"black\", add = TRUE) abline(0,1, col=\"red\", lty=2)"},{"path":"https://stephenrho.github.io/pmcalibration/index.html","id":"internal-validation","dir":"","previous_headings":"","what":"Internal validation","title":"Calibration Curves for Clinical Prediction Models","text":"pmcalibration can used assess apparent calibration development sample externally validate existing prediction model. conducting internal validation (via bootstrap optimism cross-validation) users encouraged look https://stephenrho.github.io/pminternal/.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap resample a calibration curve object — boot","title":"Bootstrap resample a calibration curve object — boot","text":"Bootstrap resample calibration curve object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap resample a calibration curve object — boot","text":"","code":"boot(cal)  # S3 method for class 'glm_cal' boot(cal)  # S3 method for class 'gam_cal' boot(cal)  # S3 method for class 'lowess_cal' boot(cal)  # S3 method for class 'loess_cal' boot(cal)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap resample a calibration curve object — boot","text":"cal object created using one cal functions","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap resample a calibration curve object — boot","text":"bootstrap resamples calibration metrics values plotting","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/cal_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate calibration metrics from calibration curve — cal_metrics","title":"Calculate calibration metrics from calibration curve — cal_metrics","text":"Calculates metrics used summarizing calibration curves. See Austin Steyerberg (2019)","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/cal_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate calibration metrics from calibration curve — cal_metrics","text":"","code":"cal_metrics(p, p_c)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/cal_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate calibration metrics from calibration curve — cal_metrics","text":"p predicted probabilities p_c probabilities calibration curve","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/cal_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate calibration metrics from calibration curve — cal_metrics","text":"named vector metrics based absolute difference predicted calibration curve implied probabilities d = abs(p - p_c) Eavg - average absolute difference (aka integrated calibration index ICI) E50 - median absolute difference E90 - 90th percentile absolute difference Emax - maximum absolute difference ECI - average squared difference. Estimated calibration index (Van Hoorde et al. 2015)","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/cal_metrics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate calibration metrics from calibration curve — cal_metrics","text":"Austin PC, Steyerberg EW. (2019) Integrated Calibration Index (ICI) related metrics quantifying calibration logistic regression models. Statistics Medicine. 38, pp. 1–15. https://doi.org/10.1002/sim.8281 Van Hoorde, K., Van Huffel, S., Timmerman, D., Bourne, T., Van Calster, B. (2015). spline-based tool assess visualize calibration multiclass risk predictions. Journal Biomedical Informatics, 54, pp. 283-93 Van Calster, B., Nieboer, D., Vergouwe, Y., De Cock, B., Pencina M., Steyerberg E.W. (2016). calibration hierarchy risk models defined: utopia empirical data. Journal Clinical Epidemiology, 74, pp. 167-176","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/cal_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate calibration metrics from calibration curve — cal_metrics","text":"","code":"library(pmcalibration)  LP <- rnorm(100) # linear predictor p_c <- invlogit(LP) # actual probabilities p <- invlogit(LP*1.3) # predicted probabilities that are miscalibrated  cal_metrics(p = p, p_c = p_c) #>       Eavg        E50        E90       Emax        ECI  #> 0.03451487 0.03645677 0.05689162 0.05844960 0.15446207"},{"path":"https://stephenrho.github.io/pmcalibration/reference/gam_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"fits a calibration curve via gam — gam_cal","title":"fits a calibration curve via gam — gam_cal","text":"fits calibration curve via gam","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/gam_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fits a calibration curve via gam — gam_cal","text":"","code":"gam_cal(   y,   p,   x,   xp,   time = NULL,   save_data = TRUE,   save_mod = TRUE,   pw = FALSE,   ... )"},{"path":"https://stephenrho.github.io/pmcalibration/reference/gam_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fits a calibration curve via gam — gam_cal","text":"y binary time--event (Surv) outcome. former family = binomial(link=\"logit\") latter family = mgcv::cox.ph(). p predicted probabilities x predictor (transformation p) xp values plotting (scale x) time time calculate survival probabilities (relevant y Surv object) save_data whether save data elements returned object save_mod whether save model returned object pw save pointwise standard errors plotting ... additional arguments mgcv::gam mgcv::s","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/gam_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fits a calibration curve via gam — gam_cal","text":"list class gam_cal","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/gam_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fits a calibration curve via gam — gam_cal","text":"","code":"library(pmcalibration) # simulate some data n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2) head(dat) #>           x1         x2 y         LP #> 1 -0.3872136  0.2360958 1  0.3305984 #> 2 -0.7854327  0.6289534 0  0.2447206 #> 3 -1.0567369  0.4179257 0 -0.2271387 #> 4 -0.7955414  1.9767585 0  1.3666984 #> 5 -1.7562754 -0.5062863 0 -1.5847261 #> 6 -0.6905379 -1.1099689 0 -1.1472116 # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  gam_cal(y = dat$y, p = p, x = p, xp = NULL, k = 20, method=\"REML\") #> $y #>   [1] 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 0 1 0 0 #>  [38] 0 1 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 0 #>  [75] 1 1 1 1 0 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 #> [112] 1 0 0 1 1 0 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 1 1 0 0 0 1 1 1 0 0 1 1 #> [149] 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 #> [186] 1 0 0 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 #> [223] 1 0 1 0 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 #> [260] 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 1 #> [297] 0 1 0 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 1 1 0 1 #> [334] 1 1 0 0 0 1 0 0 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 #> [371] 0 0 0 0 1 1 0 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 #> [408] 0 1 1 0 1 0 1 1 0 0 1 0 1 0 0 0 0 1 1 1 0 0 1 1 0 0 0 0 0 1 0 0 0 1 1 1 0 #> [445] 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 1 1 0 0 1 0 1 #> [482] 1 0 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 0 0 #>  #> $p #>   [1] 0.58412744 0.57300465 0.45438346 0.82112054 0.15793896 0.22725802 #>   [7] 0.27802921 0.60218796 0.47847940 0.85014129 0.28786029 0.04698994 #>  [13] 0.31664646 0.41220561 0.51810514 0.92269705 0.91036382 0.13013909 #>  [19] 0.80730037 0.49969896 0.98107273 0.37322733 0.95878480 0.83947494 #>  [25] 0.43387343 0.36086563 0.74351582 0.73616437 0.37724923 0.84002275 #>  [31] 0.30992423 0.53652003 0.40805882 0.36499320 0.58640914 0.43862068 #>  [37] 0.19852698 0.23452973 0.70194860 0.80435914 0.75324255 0.38173511 #>  [43] 0.95706588 0.60734760 0.92097492 0.86256295 0.39661179 0.56146829 #>  [49] 0.11434560 0.92427487 0.53641184 0.61254136 0.41919924 0.41801106 #>  [55] 0.84133794 0.87508375 0.48128399 0.28417471 0.86524031 0.89087302 #>  [61] 0.08391693 0.92776019 0.65514615 0.82840059 0.19820811 0.24136442 #>  [67] 0.27757263 0.73558002 0.64918422 0.97409107 0.14673627 0.47646961 #>  [73] 0.79701054 0.67958137 0.77113393 0.88038342 0.35973901 0.55678633 #>  [79] 0.49152582 0.66934955 0.13142153 0.07856512 0.14156644 0.86661180 #>  [85] 0.89242051 0.99389329 0.93293294 0.85598147 0.83424242 0.68624083 #>  [91] 0.67925627 0.35554383 0.57504879 0.42667684 0.61934036 0.51037385 #>  [97] 0.22748241 0.88974703 0.91369033 0.75808036 0.71614807 0.80731807 #> [103] 0.73705822 0.55554585 0.08785957 0.48058060 0.23784160 0.49166576 #> [109] 0.34759792 0.97621979 0.79533585 0.57218847 0.29528062 0.24276334 #> [115] 0.65548078 0.85876249 0.36156348 0.64387110 0.27498264 0.23613970 #> [121] 0.73512232 0.25976673 0.72864265 0.88195794 0.37366289 0.83350878 #> [127] 0.75289194 0.57854000 0.73348309 0.36473361 0.63330977 0.17968944 #> [133] 0.37376248 0.34661321 0.91196406 0.60228124 0.64235159 0.78668830 #> [139] 0.61086909 0.10553269 0.29221685 0.74012026 0.79826233 0.97316999 #> [145] 0.13978425 0.84623401 0.61223360 0.37189681 0.79835811 0.67796220 #> [151] 0.43251382 0.29387698 0.52500587 0.27101391 0.93827448 0.45357155 #> [157] 0.71548845 0.19161913 0.52131007 0.75727603 0.73434646 0.56590454 #> [163] 0.70308077 0.22362733 0.38856470 0.23216291 0.95466910 0.57826997 #> [169] 0.74549640 0.63954179 0.22542405 0.07664175 0.76896983 0.77319873 #> [175] 0.59522388 0.97028927 0.81607282 0.81501017 0.66368299 0.74903543 #> [181] 0.71503007 0.30366677 0.64550537 0.54646244 0.78992983 0.89724285 #> [187] 0.51239834 0.16481234 0.90633562 0.81251976 0.84277969 0.78837157 #> [193] 0.51470189 0.89262206 0.97536150 0.33014958 0.72033747 0.82172910 #> [199] 0.92997855 0.88257246 0.83536382 0.28163618 0.73115768 0.93293432 #> [205] 0.73875831 0.33257773 0.70764698 0.65113893 0.93473749 0.25683453 #> [211] 0.57410525 0.67940535 0.92883330 0.10956901 0.87533774 0.64107378 #> [217] 0.43282439 0.33135306 0.31839220 0.42667108 0.98232991 0.90755946 #> [223] 0.97176534 0.55081839 0.82817282 0.19655351 0.89771984 0.92212712 #> [229] 0.21245835 0.76689487 0.92376270 0.29246272 0.91156256 0.28972351 #> [235] 0.64130266 0.90413164 0.25265290 0.23623907 0.95470387 0.76384525 #> [241] 0.45898648 0.96149069 0.18124077 0.06918064 0.45496567 0.95750618 #> [247] 0.40475538 0.71781354 0.78888679 0.45819640 0.56333933 0.70622622 #> [253] 0.66799076 0.87512968 0.83403465 0.67235190 0.27612414 0.99147630 #> [259] 0.28682573 0.51323223 0.52775966 0.69201249 0.42633463 0.86297015 #> [265] 0.20810813 0.80845261 0.13309348 0.23654176 0.84314569 0.82387565 #> [271] 0.80377047 0.57526347 0.19469968 0.27619476 0.37061810 0.81043039 #> [277] 0.74587930 0.33982473 0.45911116 0.74143830 0.88639032 0.58311087 #> [283] 0.65654723 0.82991828 0.38865787 0.71027669 0.48756403 0.85338765 #> [289] 0.50557398 0.46077350 0.53438320 0.91821884 0.86677518 0.66420194 #> [295] 0.47995959 0.68075421 0.11561696 0.53925561 0.39535013 0.41815097 #> [301] 0.97929402 0.76641597 0.64615196 0.79469186 0.24098739 0.50578668 #> [307] 0.66557399 0.98318485 0.74087047 0.36330556 0.61367540 0.53313890 #> [313] 0.51589505 0.21923480 0.92399599 0.75873580 0.75207508 0.14266162 #> [319] 0.70448831 0.67725653 0.54273487 0.83966541 0.92730837 0.69241847 #> [325] 0.07588341 0.63576801 0.40106475 0.07806240 0.14137296 0.46056287 #> [331] 0.77202303 0.48000647 0.75513821 0.82313436 0.82464229 0.69979525 #> [337] 0.13939657 0.52656042 0.82173032 0.30666285 0.16042946 0.76263542 #> [343] 0.23237250 0.32156455 0.75386617 0.64641235 0.58968974 0.42338914 #> [349] 0.95683153 0.62078533 0.87589911 0.78332023 0.70998023 0.59263175 #> [355] 0.70444052 0.26403772 0.92877969 0.54172501 0.87219461 0.63294064 #> [361] 0.60460029 0.55216697 0.99142299 0.46739129 0.22921426 0.28543457 #> [367] 0.14821657 0.60715334 0.95174016 0.81762048 0.24643520 0.57435977 #> [373] 0.24730356 0.20965470 0.36477862 0.17383685 0.13086633 0.66978993 #> [379] 0.91897914 0.47061754 0.45830211 0.90012462 0.81893839 0.59255618 #> [385] 0.97632617 0.23958209 0.76999310 0.82152671 0.65156031 0.39259321 #> [391] 0.75596474 0.70263650 0.31044501 0.26682361 0.28890867 0.78850965 #> [397] 0.45858592 0.85244903 0.52405497 0.76260205 0.37185174 0.71749022 #> [403] 0.80695515 0.35172010 0.13620389 0.52121567 0.78547434 0.61113480 #> [409] 0.95840600 0.78697235 0.12508157 0.98624553 0.73183789 0.77806785 #> [415] 0.87151679 0.36323280 0.47509295 0.86297363 0.08325828 0.75381646 #> [421] 0.09934967 0.65499763 0.34774098 0.69911548 0.88236756 0.70013767 #> [427] 0.88273273 0.02939633 0.05106828 0.49032778 0.68835165 0.60487957 #> [433] 0.40758513 0.62745314 0.76823688 0.40991295 0.86795675 0.08718630 #> [439] 0.65788247 0.75124111 0.87890141 0.72833517 0.83670310 0.52316058 #> [445] 0.59666844 0.51792752 0.82637915 0.84666658 0.74285293 0.41711791 #> [451] 0.49041909 0.50622868 0.83334165 0.86105218 0.50860923 0.18564461 #> [457] 0.79358510 0.44033843 0.86348525 0.38004232 0.91456105 0.47774778 #> [463] 0.43365355 0.89555851 0.04108475 0.15491817 0.10034725 0.42799756 #> [469] 0.85442672 0.43145664 0.78167792 0.71021540 0.51876363 0.33963036 #> [475] 0.60206515 0.77084947 0.63785976 0.31992544 0.58017118 0.13279589 #> [481] 0.27484691 0.69444482 0.11480833 0.64231360 0.69361561 0.75243468 #> [487] 0.51595141 0.68915089 0.19947678 0.39634744 0.42068873 0.94437616 #> [493] 0.87565085 0.49213788 0.60868204 0.29608882 0.44640165 0.51638668 #> [499] 0.93050564 0.22895989 #>  #> $x #>   [1] 0.58412744 0.57300465 0.45438346 0.82112054 0.15793896 0.22725802 #>   [7] 0.27802921 0.60218796 0.47847940 0.85014129 0.28786029 0.04698994 #>  [13] 0.31664646 0.41220561 0.51810514 0.92269705 0.91036382 0.13013909 #>  [19] 0.80730037 0.49969896 0.98107273 0.37322733 0.95878480 0.83947494 #>  [25] 0.43387343 0.36086563 0.74351582 0.73616437 0.37724923 0.84002275 #>  [31] 0.30992423 0.53652003 0.40805882 0.36499320 0.58640914 0.43862068 #>  [37] 0.19852698 0.23452973 0.70194860 0.80435914 0.75324255 0.38173511 #>  [43] 0.95706588 0.60734760 0.92097492 0.86256295 0.39661179 0.56146829 #>  [49] 0.11434560 0.92427487 0.53641184 0.61254136 0.41919924 0.41801106 #>  [55] 0.84133794 0.87508375 0.48128399 0.28417471 0.86524031 0.89087302 #>  [61] 0.08391693 0.92776019 0.65514615 0.82840059 0.19820811 0.24136442 #>  [67] 0.27757263 0.73558002 0.64918422 0.97409107 0.14673627 0.47646961 #>  [73] 0.79701054 0.67958137 0.77113393 0.88038342 0.35973901 0.55678633 #>  [79] 0.49152582 0.66934955 0.13142153 0.07856512 0.14156644 0.86661180 #>  [85] 0.89242051 0.99389329 0.93293294 0.85598147 0.83424242 0.68624083 #>  [91] 0.67925627 0.35554383 0.57504879 0.42667684 0.61934036 0.51037385 #>  [97] 0.22748241 0.88974703 0.91369033 0.75808036 0.71614807 0.80731807 #> [103] 0.73705822 0.55554585 0.08785957 0.48058060 0.23784160 0.49166576 #> [109] 0.34759792 0.97621979 0.79533585 0.57218847 0.29528062 0.24276334 #> [115] 0.65548078 0.85876249 0.36156348 0.64387110 0.27498264 0.23613970 #> [121] 0.73512232 0.25976673 0.72864265 0.88195794 0.37366289 0.83350878 #> [127] 0.75289194 0.57854000 0.73348309 0.36473361 0.63330977 0.17968944 #> [133] 0.37376248 0.34661321 0.91196406 0.60228124 0.64235159 0.78668830 #> [139] 0.61086909 0.10553269 0.29221685 0.74012026 0.79826233 0.97316999 #> [145] 0.13978425 0.84623401 0.61223360 0.37189681 0.79835811 0.67796220 #> [151] 0.43251382 0.29387698 0.52500587 0.27101391 0.93827448 0.45357155 #> [157] 0.71548845 0.19161913 0.52131007 0.75727603 0.73434646 0.56590454 #> [163] 0.70308077 0.22362733 0.38856470 0.23216291 0.95466910 0.57826997 #> [169] 0.74549640 0.63954179 0.22542405 0.07664175 0.76896983 0.77319873 #> [175] 0.59522388 0.97028927 0.81607282 0.81501017 0.66368299 0.74903543 #> [181] 0.71503007 0.30366677 0.64550537 0.54646244 0.78992983 0.89724285 #> [187] 0.51239834 0.16481234 0.90633562 0.81251976 0.84277969 0.78837157 #> [193] 0.51470189 0.89262206 0.97536150 0.33014958 0.72033747 0.82172910 #> [199] 0.92997855 0.88257246 0.83536382 0.28163618 0.73115768 0.93293432 #> [205] 0.73875831 0.33257773 0.70764698 0.65113893 0.93473749 0.25683453 #> [211] 0.57410525 0.67940535 0.92883330 0.10956901 0.87533774 0.64107378 #> [217] 0.43282439 0.33135306 0.31839220 0.42667108 0.98232991 0.90755946 #> [223] 0.97176534 0.55081839 0.82817282 0.19655351 0.89771984 0.92212712 #> [229] 0.21245835 0.76689487 0.92376270 0.29246272 0.91156256 0.28972351 #> [235] 0.64130266 0.90413164 0.25265290 0.23623907 0.95470387 0.76384525 #> [241] 0.45898648 0.96149069 0.18124077 0.06918064 0.45496567 0.95750618 #> [247] 0.40475538 0.71781354 0.78888679 0.45819640 0.56333933 0.70622622 #> [253] 0.66799076 0.87512968 0.83403465 0.67235190 0.27612414 0.99147630 #> [259] 0.28682573 0.51323223 0.52775966 0.69201249 0.42633463 0.86297015 #> [265] 0.20810813 0.80845261 0.13309348 0.23654176 0.84314569 0.82387565 #> [271] 0.80377047 0.57526347 0.19469968 0.27619476 0.37061810 0.81043039 #> [277] 0.74587930 0.33982473 0.45911116 0.74143830 0.88639032 0.58311087 #> [283] 0.65654723 0.82991828 0.38865787 0.71027669 0.48756403 0.85338765 #> [289] 0.50557398 0.46077350 0.53438320 0.91821884 0.86677518 0.66420194 #> [295] 0.47995959 0.68075421 0.11561696 0.53925561 0.39535013 0.41815097 #> [301] 0.97929402 0.76641597 0.64615196 0.79469186 0.24098739 0.50578668 #> [307] 0.66557399 0.98318485 0.74087047 0.36330556 0.61367540 0.53313890 #> [313] 0.51589505 0.21923480 0.92399599 0.75873580 0.75207508 0.14266162 #> [319] 0.70448831 0.67725653 0.54273487 0.83966541 0.92730837 0.69241847 #> [325] 0.07588341 0.63576801 0.40106475 0.07806240 0.14137296 0.46056287 #> [331] 0.77202303 0.48000647 0.75513821 0.82313436 0.82464229 0.69979525 #> [337] 0.13939657 0.52656042 0.82173032 0.30666285 0.16042946 0.76263542 #> [343] 0.23237250 0.32156455 0.75386617 0.64641235 0.58968974 0.42338914 #> [349] 0.95683153 0.62078533 0.87589911 0.78332023 0.70998023 0.59263175 #> [355] 0.70444052 0.26403772 0.92877969 0.54172501 0.87219461 0.63294064 #> [361] 0.60460029 0.55216697 0.99142299 0.46739129 0.22921426 0.28543457 #> [367] 0.14821657 0.60715334 0.95174016 0.81762048 0.24643520 0.57435977 #> [373] 0.24730356 0.20965470 0.36477862 0.17383685 0.13086633 0.66978993 #> [379] 0.91897914 0.47061754 0.45830211 0.90012462 0.81893839 0.59255618 #> [385] 0.97632617 0.23958209 0.76999310 0.82152671 0.65156031 0.39259321 #> [391] 0.75596474 0.70263650 0.31044501 0.26682361 0.28890867 0.78850965 #> [397] 0.45858592 0.85244903 0.52405497 0.76260205 0.37185174 0.71749022 #> [403] 0.80695515 0.35172010 0.13620389 0.52121567 0.78547434 0.61113480 #> [409] 0.95840600 0.78697235 0.12508157 0.98624553 0.73183789 0.77806785 #> [415] 0.87151679 0.36323280 0.47509295 0.86297363 0.08325828 0.75381646 #> [421] 0.09934967 0.65499763 0.34774098 0.69911548 0.88236756 0.70013767 #> [427] 0.88273273 0.02939633 0.05106828 0.49032778 0.68835165 0.60487957 #> [433] 0.40758513 0.62745314 0.76823688 0.40991295 0.86795675 0.08718630 #> [439] 0.65788247 0.75124111 0.87890141 0.72833517 0.83670310 0.52316058 #> [445] 0.59666844 0.51792752 0.82637915 0.84666658 0.74285293 0.41711791 #> [451] 0.49041909 0.50622868 0.83334165 0.86105218 0.50860923 0.18564461 #> [457] 0.79358510 0.44033843 0.86348525 0.38004232 0.91456105 0.47774778 #> [463] 0.43365355 0.89555851 0.04108475 0.15491817 0.10034725 0.42799756 #> [469] 0.85442672 0.43145664 0.78167792 0.71021540 0.51876363 0.33963036 #> [475] 0.60206515 0.77084947 0.63785976 0.31992544 0.58017118 0.13279589 #> [481] 0.27484691 0.69444482 0.11480833 0.64231360 0.69361561 0.75243468 #> [487] 0.51595141 0.68915089 0.19947678 0.39634744 0.42068873 0.94437616 #> [493] 0.87565085 0.49213788 0.60868204 0.29608882 0.44640165 0.51638668 #> [499] 0.93050564 0.22895989 #>  #> $xp #> NULL #>  #> $p_c #>   [1] 0.58015562 0.56471946 0.39837389 0.84126312 0.10983871 0.15452353 #>   [7] 0.19594617 0.60487759 0.43152419 0.86203512 0.20487307 0.06173726 #>  [13] 0.23272817 0.34268601 0.48726212 0.90412576 0.89788659 0.09535528 #>  [19] 0.83051104 0.46124647 0.92924321 0.29477868 0.92046432 0.85467941 #>  [25] 0.37086259 0.28042547 0.77336541 0.76597308 0.29953972 0.85506498 #>  [31] 0.22599461 0.51336021 0.33741094 0.28517034 0.58330391 0.37716329 #>  [37] 0.13442645 0.15998436 0.72940914 0.82814934 0.78289017 0.30490161 #>  [43] 0.91974743 0.61184891 0.90327549 0.87020453 0.32306102 0.54857642 #>  [49] 0.08790922 0.90489890 0.51320696 0.61882045 0.35167082 0.35013671 #>  [55] 0.85598721 0.87801899 0.43542904 0.20149153 0.87191053 0.88729272 #>  [61] 0.07502986 0.90658699 0.67396417 0.84670099 0.13421633 0.16525846 #>  [67] 0.19553882 0.76537837 0.66649091 0.92659414 0.10378343 0.42873116 #>  [73] 0.82213488 0.70365410 0.79964592 0.88120277 0.27913876 0.54199369 #>  [79] 0.44975368 0.69141151 0.09598405 0.07295196 0.10108985 0.87277701 #>  [85] 0.88816772 0.93387890 0.90904284 0.86592857 0.85095348 0.71146945 #>  [91] 0.70326945 0.27437946 0.56756663 0.36139502 0.62787292 0.47631786 #>  [97] 0.15468974 0.88665229 0.89960400 0.78751862 0.74500931 0.83052517 #> [103] 0.76688077 0.54024706 0.07659528 0.43444894 0.16252281 0.44995004 #> [109] 0.26550479 0.92741138 0.82074137 0.56358144 0.21180858 0.16635499 #> [115] 0.67438107 0.86774973 0.28122429 0.65975961 0.19324023 0.16121432 #> [121] 0.76491181 0.18015125 0.75823807 0.88213472 0.29529214 0.85042483 #> [127] 0.78255192 0.57241898 0.76323561 0.28487051 0.64618827 0.12248252 #> [133] 0.29540962 0.26441784 0.89871599 0.60500402 0.65782246 0.81340994 #> [139] 0.61658095 0.08398628 0.20892436 0.76997162 0.82317094 0.92623791 #> [145] 0.10017577 0.85937757 0.61840866 0.29321337 0.82325001 0.70173549 #> [151] 0.36906604 0.21048360 0.49704143 0.18975800 0.91151769 0.39727121 #> [157] 0.74429787 0.12993627 0.49180318 0.78675412 0.76411948 0.55479812 #> [163] 0.73067477 0.15185449 0.31316734 0.15819001 0.91873798 0.57204416 #> [169] 0.77532854 0.65422654 0.15317056 0.07221823 0.79767183 0.80151596 #> [175] 0.59540082 0.92511348 0.83740157 0.83657906 0.68451241 0.77880627 #> [181] 0.74380272 0.21985167 0.66183712 0.52743005 0.81618485 0.89085645 #> [187] 0.47918190 0.11370547 0.89577209 0.83463832 0.85699258 0.81485490 #> [193] 0.48244240 0.88828125 0.92708289 0.24667199 0.74949738 0.84172362 #> [199] 0.90764740 0.88249672 0.85175857 0.19918679 0.76084365 0.90904348 #> [205] 0.76860041 0.24923816 0.73574113 0.66895058 0.90988582 0.17770997 #> [211] 0.56625297 0.70344587 0.90710131 0.08576286 0.87817324 0.65618937 #> [217] 0.36947611 0.24794165 0.23449955 0.36138748 0.92971074 0.89641857 #> [223] 0.92569159 0.53358198 0.84653319 0.13313047 0.89111929 0.90384511 #> [229] 0.14388073 0.79576545 0.90464855 0.20915476 0.89850845 0.20659855 #> [235] 0.65648215 0.89459887 0.17427342 0.16129049 0.91875271 0.79293944 #> [241] 0.40464458 0.92158098 0.12343057 0.06943592 0.39916523 0.91993162 #> [247] 0.33323740 0.74679982 0.81529545 0.40356597 0.55120245 0.73417131 #> [253] 0.68976478 0.87804689 0.85080392 0.69503289 0.19425076 0.93302710 #> [259] 0.20391962 0.48036202 0.50094503 0.71814290 0.36094743 0.87046523 #> [265] 0.14087058 0.83142918 0.09680936 0.16152267 0.85724686 0.84333924 #> [271] 0.82767355 0.56786541 0.13192269 0.19431341 0.29171361 0.83299589 #> [277] 0.77570667 0.25700257 0.40481488 0.77129319 0.88472425 0.57875084 #> [283] 0.67570784 0.84781524 0.31328094 0.73863105 0.44420129 0.86421095 #> [289] 0.46953411 0.40708760 0.51033282 0.90190071 0.87287990 0.68514769 #> [295] 0.43358403 0.70503938 0.08848863 0.51723445 0.32149903 0.35031718 #> [301] 0.92857682 0.79532357 0.66265737 0.82020324 0.16496392 0.46983451 #> [307] 0.68682398 0.93002705 0.77072449 0.28322448 0.62033629 0.50856957 #> [313] 0.48413184 0.14867614 0.90476265 0.78814012 0.78176238 0.10165523 #> [319] 0.73224299 0.70089709 0.52215891 0.85481356 0.90636968 0.71860876 #> [325] 0.07193081 0.64936916 0.32860550 0.07275952 0.10099026 0.40679940 #> [331] 0.80045277 0.43364931 0.78471242 0.84278282 0.84391300 0.72699168 #> [337] 0.09997791 0.49924504 0.84172454 0.22277785 0.11122629 0.79181034 #> [343] 0.15834824 0.23774237 0.78349087 0.66298742 0.58781859 0.35710498 #> [349] 0.91964923 0.62978558 0.87851355 0.81049263 0.73830628 0.59185481 #> [355] 0.73218984 0.18375388 0.90707568 0.52072998 0.87625258 0.64570950 #> [361] 0.60814244 0.53548462 0.93300820 0.41617403 0.15597745 0.20264275 #> [367] 0.10456630 0.61158724 0.91748871 0.83859353 0.16926086 0.56660742 #> [373] 0.16995396 0.14193465 0.28492249 0.11896212 0.09571139 0.69194417 #> [379] 0.90228169 0.42062498 0.40371024 0.89243599 0.83960297 0.59175128 #> [385] 0.92745200 0.16386980 0.79860706 0.84157059 0.66947961 0.31809974 #> [391] 0.78550347 0.73017857 0.22651130 0.18613375 0.20584263 0.81497306 #> [397] 0.40409762 0.86358484 0.49569356 0.79177914 0.29316042 0.74645288 #> [403] 0.83023519 0.27008582 0.09836159 0.49166941 0.81236246 0.61693712 #> [409] 0.92030684 0.81365438 0.09291141 0.93114868 0.76154504 0.80587370 #> [415] 0.87583499 0.28314076 0.42682061 0.87046746 0.07477122 0.78344303 #> [421] 0.08132960 0.67377905 0.26566294 0.72622575 0.88237613 0.72737700 #> [427] 0.88259098 0.05620802 0.06308969 0.44807326 0.71392094 0.60851981 #> [433] 0.33681090 0.63855812 0.79699995 0.33976464 0.87362185 0.07632585 #> [439] 0.67736507 0.78095417 0.88031976 0.75791820 0.85271538 0.49442585 #> [445] 0.59737269 0.48701050 0.84520654 0.85967387 0.77270565 0.34898554 #> [451] 0.44820129 0.47045881 0.85030418 0.86923337 0.47382274 0.12615626 #> [457] 0.81927547 0.37945355 0.87079439 0.30287191 0.90004928 0.43050694 #> [463] 0.37057180 0.88992384 0.05982697 0.10817607 0.08175299 0.36312470 #> [469] 0.86490123 0.36767164 0.80905750 0.73856393 0.48819498 0.25679227 #> [475] 0.60471114 0.79938727 0.65206543 0.23606301 0.57468143 0.09666200 #> [481] 0.19312034 0.72092703 0.08811971 0.65777397 0.71997978 0.78211021 #> [487] 0.48421164 0.71484591 0.13505399 0.32273341 0.35359831 0.91427022 #> [493] 0.87836315 0.45061263 0.61364460 0.21257425 0.38758014 0.48482806 #> [499] 0.90789776 0.15578777 #>  #> $metrics #>       Eavg        E50        E90       Emax        ECI  #> 0.03626367 0.02876786 0.07871263 0.08393371 0.19576061  #>  #> $p_c_plot #> NULL #>  #> $p_c_plot_se #> NULL #>  #> $model #>  #> Family: binomial  #> Link function: logit  #>  #> Formula: #> y ~ s(x, k = k, fx = fx, bs = bs) #>  #> Estimated degrees of freedom: #> 1  total = 2  #>  #> REML score: 255.9903      #>  #> $smooth_args #> $smooth_args$smooth #> [1] \"gam\" #>  #> $smooth_args$bs #> [1] \"tp\" #>  #> $smooth_args$k #> [1] 20 #>  #> $smooth_args$fx #> [1] FALSE #>  #> $smooth_args$method #> [1] \"REML\" #>  #>  #> $time #> NULL #>  #> $outcome #> [1] \"binary\" #>  #> attr(,\"class\") #> [1] \"gam_cal\""},{"path":"https://stephenrho.github.io/pmcalibration/reference/get_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract plot data from pmcalibration object — get_curve","title":"Extract plot data from pmcalibration object — get_curve","text":"Extract plot data pmcalibration object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/get_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract plot data from pmcalibration object — get_curve","text":"","code":"get_curve(x, conf_level = 0.95)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/get_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract plot data from pmcalibration object — get_curve","text":"x pmcalibration object conf_level width confidence interval (0.95 gives 95% CI). Ignored call pmcalibration request confidence intervals","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/get_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract plot data from pmcalibration object — get_curve","text":"data frame plotting 4 columns p - values x-axis (predicted probabilities - note ** data used plotting) p_c - probability implied calibration curve given p lower upper - bounds confidence interval","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/get_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract plot data from pmcalibration object — get_curve","text":"","code":"library(pmcalibration) # simulate some data with a binary outcome n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2) head(dat) #>           x1         x2 y         LP #> 1 -0.8168944 -0.4201007 1 -0.6683596 #> 2  0.3836505  1.0472054 1  2.0112081 #> 3 -0.4586323 -1.5465763 0 -1.3633466 #> 4 -0.7157040 -1.0460057 1 -1.1119836 #> 5  0.4295485 -2.2726698 0 -1.5383656 #> 6 -1.1698527 -0.3166519 1 -0.9124175 # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  # fit calibration curve cal <- pmcalibration(y = dat$y, p = p, smooth = \"gam\", k = 20, ci = \"pw\")   cplot <- get_curve(cal, conf_level = .95) head(cplot) #>            p        p_c       lower      upper #> 1 0.02123300 0.03373625 0.006595718 0.06087678 #> 2 0.03106377 0.04700997 0.013016223 0.08100371 #> 3 0.04089454 0.05969715 0.020108363 0.09928593 #> 4 0.05072532 0.07194617 0.027667787 0.11622456 #> 5 0.06055609 0.08384568 0.035577422 0.13211394 #> 6 0.07038687 0.09545483 0.043761841 0.14714781  if (requireNamespace(\"ggplot2\", quietly = TRUE)){ library(ggplot2) ggplot(cplot, aes(x = p, y = p_c, ymin=lower, ymax=upper)) +   geom_abline(intercept = 0, slope = 1, lty=2) +   geom_line() +   geom_ribbon(alpha = 1/4) +   lims(x=c(0,1), y=c(0,1)) }"},{"path":"https://stephenrho.github.io/pmcalibration/reference/glm_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"fits a calibration curve via glm or Cox proportional hazards model — glm_cal","title":"fits a calibration curve via glm or Cox proportional hazards model — glm_cal","text":"fits calibration curve via glm Cox proportional hazards model","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/glm_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fits a calibration curve via glm or Cox proportional hazards model — glm_cal","text":"","code":"glm_cal(   y,   p,   x,   xp,   smooth,   time = NULL,   save_data = TRUE,   save_mod = TRUE,   pw = FALSE,   ... )"},{"path":"https://stephenrho.github.io/pmcalibration/reference/glm_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fits a calibration curve via glm or Cox proportional hazards model — glm_cal","text":"y binary time--event (Surv) outcome. Former fit via glm latter fit via survival::coxph. p predicted probabilities x predictor (transformation p) xp values plotting (scale x) smooth 'rcs', 'ns', 'bs', 'none' time time calculate survival probabilities (relevant y Surv object) save_data whether save data elements returned object save_mod whether save model returned object pw save pointwise standard errors plotting","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/glm_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fits a calibration curve via glm or Cox proportional hazards model — glm_cal","text":"list class glm_cal","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/glm_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fits a calibration curve via glm or Cox proportional hazards model — glm_cal","text":"","code":"library(pmcalibration) # simulate some data n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2)  # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  glm_cal(y = dat$y, p = p, x = p, xp = NULL, smooth=\"ns\", df=5) #> $y #>   [1] 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 0 1 #>  [38] 1 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 0 1 1 1 #>  [75] 0 0 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 #> [112] 0 0 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 #> [149] 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 0 1 1 1 1 0 0 1 1 #> [186] 0 1 0 1 1 0 0 0 1 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 1 0 #> [223] 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 1 0 1 1 1 1 1 0 0 1 1 #> [260] 0 1 1 0 1 0 1 0 0 1 1 1 0 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 #> [297] 1 1 1 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 0 0 1 1 0 1 1 0 0 0 1 1 1 #> [334] 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 0 0 1 1 0 1 0 1 1 1 1 1 0 0 0 #> [371] 1 1 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 #> [408] 0 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0 #> [445] 0 1 1 1 0 1 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 0 1 1 0 1 #> [482] 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 #>  #> $p #>   [1] 0.13678575 0.57000695 0.32951671 0.70097759 0.10428967 0.69807737 #>   [7] 0.52684740 0.71713720 0.92868706 0.37482765 0.42446191 0.25643986 #>  [13] 0.52419042 0.19527298 0.42386652 0.36694249 0.94671614 0.76187811 #>  [19] 0.96943248 0.35881572 0.67632672 0.57105773 0.65302601 0.50649649 #>  [25] 0.85528854 0.88009366 0.37895572 0.52804311 0.50602418 0.34720331 #>  [31] 0.64698685 0.57769560 0.77039369 0.95680004 0.19191961 0.37334771 #>  [37] 0.63342560 0.98836961 0.80109182 0.52602265 0.71065534 0.21863471 #>  [43] 0.56742101 0.65294435 0.97186722 0.60869929 0.31273755 0.89853923 #>  [49] 0.67424091 0.23658328 0.78381639 0.81053468 0.30426225 0.62770785 #>  [55] 0.32681076 0.41043810 0.60582201 0.87205318 0.41425294 0.85362903 #>  [61] 0.58472929 0.95379182 0.62578655 0.43009876 0.81044595 0.23260668 #>  [67] 0.88220319 0.18715868 0.29694104 0.87302811 0.53561903 0.77669759 #>  [73] 0.93265707 0.61798481 0.27875588 0.13572462 0.82597966 0.68012044 #>  [79] 0.88648663 0.89200271 0.89898449 0.66196042 0.34258154 0.90189141 #>  [85] 0.29325074 0.75512992 0.84887632 0.90695328 0.16281399 0.47377120 #>  [91] 0.85536978 0.41484672 0.92980715 0.89396246 0.67866024 0.92340342 #>  [97] 0.76434115 0.56956314 0.29433137 0.84693869 0.93805518 0.37016540 #> [103] 0.61320107 0.66116778 0.87969401 0.62416172 0.45441772 0.83791924 #> [109] 0.92452030 0.32096784 0.87724344 0.68239244 0.67591894 0.88016367 #> [115] 0.78542821 0.08415534 0.13397793 0.75530934 0.53284210 0.84139662 #> [121] 0.51038694 0.74517705 0.90656478 0.94516934 0.42920573 0.62051926 #> [127] 0.21843542 0.21942158 0.21515319 0.38656530 0.93962546 0.14362759 #> [133] 0.47503612 0.34643287 0.65394387 0.53132838 0.14024058 0.75149295 #> [139] 0.40010308 0.24852625 0.80030304 0.40214559 0.24667206 0.46101877 #> [145] 0.88823356 0.90688331 0.67493608 0.87101193 0.83433563 0.87186872 #> [151] 0.69901986 0.51330537 0.54961384 0.21091386 0.96010713 0.39476989 #> [157] 0.66747532 0.83651505 0.18634392 0.63306444 0.35237841 0.56347185 #> [163] 0.35481091 0.53491422 0.22337408 0.95323771 0.33094119 0.73859491 #> [169] 0.29687529 0.48469444 0.72223197 0.49199514 0.23864266 0.48316820 #> [175] 0.17526018 0.51210151 0.21061317 0.39502111 0.90538564 0.68846596 #> [181] 0.70663725 0.70037041 0.55615919 0.92505622 0.65379225 0.27768003 #> [187] 0.65448729 0.16365575 0.24538339 0.68571149 0.65568050 0.65557534 #> [193] 0.28587233 0.71126913 0.23943136 0.37793016 0.93190248 0.58888199 #> [199] 0.89605930 0.36324263 0.59188178 0.77224548 0.28072636 0.61212012 #> [205] 0.78841666 0.92434637 0.46592079 0.87235145 0.88581585 0.47405717 #> [211] 0.35207697 0.78267497 0.83625330 0.86707530 0.90805511 0.14059506 #> [217] 0.70572266 0.63320371 0.39765439 0.84388480 0.73058129 0.32828927 #> [223] 0.54409612 0.48397845 0.60890176 0.96980057 0.91164598 0.97506109 #> [229] 0.95072301 0.42725567 0.91254651 0.27974816 0.93771949 0.67997726 #> [235] 0.54594831 0.30188689 0.51017047 0.35924293 0.74616526 0.96748698 #> [241] 0.15037206 0.64564257 0.52411225 0.38834592 0.81898608 0.91230767 #> [247] 0.31174058 0.65511448 0.87464953 0.86541785 0.69325142 0.69183230 #> [253] 0.61496232 0.87537181 0.33134385 0.17275231 0.47843824 0.49956119 #> [259] 0.83891832 0.70356012 0.62573910 0.92497447 0.46527968 0.81916859 #> [265] 0.54194188 0.23694282 0.18871805 0.13015343 0.83696836 0.79871816 #> [271] 0.55197391 0.56289737 0.44887662 0.58129955 0.11673158 0.81456798 #> [277] 0.90635715 0.40669732 0.42695478 0.40157109 0.87556832 0.67249061 #> [283] 0.35641938 0.64332498 0.76283664 0.95461711 0.43182157 0.51092104 #> [289] 0.43666344 0.76851681 0.57350349 0.54852497 0.46146561 0.96141690 #> [295] 0.54091915 0.34460096 0.48360937 0.23926135 0.94218912 0.83964009 #> [301] 0.88163886 0.85383675 0.43278150 0.63578507 0.43024663 0.55313090 #> [307] 0.57274920 0.90869429 0.66998701 0.07082760 0.97307845 0.48374028 #> [313] 0.83596605 0.70666671 0.81018978 0.62686526 0.27608854 0.70056717 #> [319] 0.90408912 0.33977867 0.84930555 0.11498521 0.84189915 0.91085571 #> [325] 0.68787984 0.39605623 0.65702992 0.19159682 0.07468053 0.51174054 #> [331] 0.85494273 0.84182264 0.82104365 0.25309135 0.39868914 0.67594295 #> [337] 0.08337380 0.37295500 0.95397776 0.56307326 0.24216616 0.42906312 #> [343] 0.70279697 0.21369932 0.15254426 0.75189588 0.56929517 0.80393202 #> [349] 0.30587175 0.73308007 0.87704611 0.13161926 0.41764439 0.84947749 #> [355] 0.94001237 0.87792516 0.86021548 0.89086477 0.71966174 0.37195854 #> [361] 0.77909719 0.32716415 0.52170952 0.75572067 0.54215976 0.23876650 #> [367] 0.10871240 0.30138915 0.46839478 0.81301047 0.93331862 0.76373344 #> [373] 0.60773828 0.88371789 0.67567528 0.37181604 0.24432877 0.81728304 #> [379] 0.27667744 0.67545239 0.35253390 0.86679895 0.24203602 0.53340800 #> [385] 0.20333125 0.53866663 0.22595430 0.93976036 0.74271873 0.90210281 #> [391] 0.88130478 0.14907232 0.35864737 0.76978845 0.73574416 0.92082084 #> [397] 0.49639817 0.72755790 0.30408476 0.70604268 0.16671965 0.77736691 #> [403] 0.55100071 0.34563094 0.78756160 0.98932434 0.55361122 0.39825139 #> [409] 0.90169687 0.46600060 0.25394816 0.56219015 0.83016700 0.86549116 #> [415] 0.47672313 0.86902796 0.28924885 0.60501733 0.70392742 0.96726100 #> [421] 0.65536719 0.27689745 0.54346801 0.70132085 0.80026813 0.58540312 #> [427] 0.15279039 0.26465488 0.88377171 0.23539959 0.28456052 0.20592362 #> [433] 0.22807221 0.38508846 0.35589465 0.59938441 0.77649691 0.34063491 #> [439] 0.95152575 0.20224145 0.40924538 0.23629572 0.59932210 0.20367381 #> [445] 0.37414985 0.76081941 0.98209265 0.83428054 0.33031989 0.66014905 #> [451] 0.83109580 0.16976917 0.59641132 0.34394782 0.59842088 0.07910487 #> [457] 0.82988013 0.42068745 0.85140931 0.47244728 0.27613509 0.64657791 #> [463] 0.70942936 0.26887363 0.16410113 0.83296970 0.43624339 0.78048007 #> [469] 0.28379406 0.54798878 0.63401915 0.07178600 0.57336019 0.57546037 #> [475] 0.77320600 0.09981572 0.42674459 0.64401077 0.81367207 0.46022045 #> [481] 0.93785396 0.93497776 0.79248628 0.83508466 0.41197138 0.79863012 #> [487] 0.93504205 0.50723130 0.81208129 0.09746621 0.81095579 0.29150138 #> [493] 0.43470885 0.93544446 0.45971567 0.68837774 0.40661124 0.76856902 #> [499] 0.52488484 0.57589994 #>  #> $x #>   [1] 0.13678575 0.57000695 0.32951671 0.70097759 0.10428967 0.69807737 #>   [7] 0.52684740 0.71713720 0.92868706 0.37482765 0.42446191 0.25643986 #>  [13] 0.52419042 0.19527298 0.42386652 0.36694249 0.94671614 0.76187811 #>  [19] 0.96943248 0.35881572 0.67632672 0.57105773 0.65302601 0.50649649 #>  [25] 0.85528854 0.88009366 0.37895572 0.52804311 0.50602418 0.34720331 #>  [31] 0.64698685 0.57769560 0.77039369 0.95680004 0.19191961 0.37334771 #>  [37] 0.63342560 0.98836961 0.80109182 0.52602265 0.71065534 0.21863471 #>  [43] 0.56742101 0.65294435 0.97186722 0.60869929 0.31273755 0.89853923 #>  [49] 0.67424091 0.23658328 0.78381639 0.81053468 0.30426225 0.62770785 #>  [55] 0.32681076 0.41043810 0.60582201 0.87205318 0.41425294 0.85362903 #>  [61] 0.58472929 0.95379182 0.62578655 0.43009876 0.81044595 0.23260668 #>  [67] 0.88220319 0.18715868 0.29694104 0.87302811 0.53561903 0.77669759 #>  [73] 0.93265707 0.61798481 0.27875588 0.13572462 0.82597966 0.68012044 #>  [79] 0.88648663 0.89200271 0.89898449 0.66196042 0.34258154 0.90189141 #>  [85] 0.29325074 0.75512992 0.84887632 0.90695328 0.16281399 0.47377120 #>  [91] 0.85536978 0.41484672 0.92980715 0.89396246 0.67866024 0.92340342 #>  [97] 0.76434115 0.56956314 0.29433137 0.84693869 0.93805518 0.37016540 #> [103] 0.61320107 0.66116778 0.87969401 0.62416172 0.45441772 0.83791924 #> [109] 0.92452030 0.32096784 0.87724344 0.68239244 0.67591894 0.88016367 #> [115] 0.78542821 0.08415534 0.13397793 0.75530934 0.53284210 0.84139662 #> [121] 0.51038694 0.74517705 0.90656478 0.94516934 0.42920573 0.62051926 #> [127] 0.21843542 0.21942158 0.21515319 0.38656530 0.93962546 0.14362759 #> [133] 0.47503612 0.34643287 0.65394387 0.53132838 0.14024058 0.75149295 #> [139] 0.40010308 0.24852625 0.80030304 0.40214559 0.24667206 0.46101877 #> [145] 0.88823356 0.90688331 0.67493608 0.87101193 0.83433563 0.87186872 #> [151] 0.69901986 0.51330537 0.54961384 0.21091386 0.96010713 0.39476989 #> [157] 0.66747532 0.83651505 0.18634392 0.63306444 0.35237841 0.56347185 #> [163] 0.35481091 0.53491422 0.22337408 0.95323771 0.33094119 0.73859491 #> [169] 0.29687529 0.48469444 0.72223197 0.49199514 0.23864266 0.48316820 #> [175] 0.17526018 0.51210151 0.21061317 0.39502111 0.90538564 0.68846596 #> [181] 0.70663725 0.70037041 0.55615919 0.92505622 0.65379225 0.27768003 #> [187] 0.65448729 0.16365575 0.24538339 0.68571149 0.65568050 0.65557534 #> [193] 0.28587233 0.71126913 0.23943136 0.37793016 0.93190248 0.58888199 #> [199] 0.89605930 0.36324263 0.59188178 0.77224548 0.28072636 0.61212012 #> [205] 0.78841666 0.92434637 0.46592079 0.87235145 0.88581585 0.47405717 #> [211] 0.35207697 0.78267497 0.83625330 0.86707530 0.90805511 0.14059506 #> [217] 0.70572266 0.63320371 0.39765439 0.84388480 0.73058129 0.32828927 #> [223] 0.54409612 0.48397845 0.60890176 0.96980057 0.91164598 0.97506109 #> [229] 0.95072301 0.42725567 0.91254651 0.27974816 0.93771949 0.67997726 #> [235] 0.54594831 0.30188689 0.51017047 0.35924293 0.74616526 0.96748698 #> [241] 0.15037206 0.64564257 0.52411225 0.38834592 0.81898608 0.91230767 #> [247] 0.31174058 0.65511448 0.87464953 0.86541785 0.69325142 0.69183230 #> [253] 0.61496232 0.87537181 0.33134385 0.17275231 0.47843824 0.49956119 #> [259] 0.83891832 0.70356012 0.62573910 0.92497447 0.46527968 0.81916859 #> [265] 0.54194188 0.23694282 0.18871805 0.13015343 0.83696836 0.79871816 #> [271] 0.55197391 0.56289737 0.44887662 0.58129955 0.11673158 0.81456798 #> [277] 0.90635715 0.40669732 0.42695478 0.40157109 0.87556832 0.67249061 #> [283] 0.35641938 0.64332498 0.76283664 0.95461711 0.43182157 0.51092104 #> [289] 0.43666344 0.76851681 0.57350349 0.54852497 0.46146561 0.96141690 #> [295] 0.54091915 0.34460096 0.48360937 0.23926135 0.94218912 0.83964009 #> [301] 0.88163886 0.85383675 0.43278150 0.63578507 0.43024663 0.55313090 #> [307] 0.57274920 0.90869429 0.66998701 0.07082760 0.97307845 0.48374028 #> [313] 0.83596605 0.70666671 0.81018978 0.62686526 0.27608854 0.70056717 #> [319] 0.90408912 0.33977867 0.84930555 0.11498521 0.84189915 0.91085571 #> [325] 0.68787984 0.39605623 0.65702992 0.19159682 0.07468053 0.51174054 #> [331] 0.85494273 0.84182264 0.82104365 0.25309135 0.39868914 0.67594295 #> [337] 0.08337380 0.37295500 0.95397776 0.56307326 0.24216616 0.42906312 #> [343] 0.70279697 0.21369932 0.15254426 0.75189588 0.56929517 0.80393202 #> [349] 0.30587175 0.73308007 0.87704611 0.13161926 0.41764439 0.84947749 #> [355] 0.94001237 0.87792516 0.86021548 0.89086477 0.71966174 0.37195854 #> [361] 0.77909719 0.32716415 0.52170952 0.75572067 0.54215976 0.23876650 #> [367] 0.10871240 0.30138915 0.46839478 0.81301047 0.93331862 0.76373344 #> [373] 0.60773828 0.88371789 0.67567528 0.37181604 0.24432877 0.81728304 #> [379] 0.27667744 0.67545239 0.35253390 0.86679895 0.24203602 0.53340800 #> [385] 0.20333125 0.53866663 0.22595430 0.93976036 0.74271873 0.90210281 #> [391] 0.88130478 0.14907232 0.35864737 0.76978845 0.73574416 0.92082084 #> [397] 0.49639817 0.72755790 0.30408476 0.70604268 0.16671965 0.77736691 #> [403] 0.55100071 0.34563094 0.78756160 0.98932434 0.55361122 0.39825139 #> [409] 0.90169687 0.46600060 0.25394816 0.56219015 0.83016700 0.86549116 #> [415] 0.47672313 0.86902796 0.28924885 0.60501733 0.70392742 0.96726100 #> [421] 0.65536719 0.27689745 0.54346801 0.70132085 0.80026813 0.58540312 #> [427] 0.15279039 0.26465488 0.88377171 0.23539959 0.28456052 0.20592362 #> [433] 0.22807221 0.38508846 0.35589465 0.59938441 0.77649691 0.34063491 #> [439] 0.95152575 0.20224145 0.40924538 0.23629572 0.59932210 0.20367381 #> [445] 0.37414985 0.76081941 0.98209265 0.83428054 0.33031989 0.66014905 #> [451] 0.83109580 0.16976917 0.59641132 0.34394782 0.59842088 0.07910487 #> [457] 0.82988013 0.42068745 0.85140931 0.47244728 0.27613509 0.64657791 #> [463] 0.70942936 0.26887363 0.16410113 0.83296970 0.43624339 0.78048007 #> [469] 0.28379406 0.54798878 0.63401915 0.07178600 0.57336019 0.57546037 #> [475] 0.77320600 0.09981572 0.42674459 0.64401077 0.81367207 0.46022045 #> [481] 0.93785396 0.93497776 0.79248628 0.83508466 0.41197138 0.79863012 #> [487] 0.93504205 0.50723130 0.81208129 0.09746621 0.81095579 0.29150138 #> [493] 0.43470885 0.93544446 0.45971567 0.68837774 0.40661124 0.76856902 #> [499] 0.52488484 0.57589994 #>  #> $xp #> NULL #>  #> $X #>               V1           V2            V3          V4           V5 #> 1   4.015464e-03 0.000000e+00 -0.0638708848 0.202989725 -0.139118840 #> 2   5.755322e-01 3.802952e-01 -0.0053371433 0.030751884 -0.021075778 #> 3   2.422506e-01 0.000000e+00 -0.1512729787 0.480764600 -0.329491621 #> 4   1.117587e-01 6.521891e-01  0.2207317386 0.047440205 -0.032119713 #> 5   5.243109e-04 0.000000e+00 -0.0330659209 0.105087666 -0.072021745 #> 6   1.185354e-01 6.564209e-01  0.2105702935 0.045198583 -0.030725263 #> 7   6.746072e-01 2.178898e-01 -0.0253723266 0.080643222 -0.055268766 #> 8   7.867529e-02 6.197183e-01  0.2802212487 0.061012958 -0.039627813 #> 9   0.000000e+00 1.088989e-02  0.2733116289 0.342106926  0.373691552 #> 10  3.855018e-01 2.552219e-03 -0.1320446526 0.419654555 -0.287609903 #> 11  5.469543e-01 2.401534e-02 -0.0976156153 0.310234734 -0.212619118 #> 12  8.948504e-02 0.000000e+00 -0.1454858138 0.462372261 -0.316886447 #> 13  6.776226e-01 2.091852e-01 -0.0267176395 0.084912178 -0.058194491 #> 14  2.696912e-02 0.000000e+00 -0.1120112463 0.355985864 -0.243974618 #> 15  5.451871e-01 2.356333e-02 -0.0980729200 0.311688106 -0.213615186 #> 16  3.590710e-01 1.425170e-03 -0.1364650722 0.433703206 -0.297238134 #> 17  0.000000e+00 3.778190e-03  0.1591046676 0.370119122  0.466998020 #> 18  2.224450e-02 4.714389e-01  0.4491380616 0.107104771 -0.049926217 #> 19  0.000000e+00 3.844416e-04  0.0038122527 0.405656295  0.590147011 #> 20  3.322189e-01 6.738835e-04 -0.1406005440 0.446846257 -0.306245713 #> 21  1.782718e-01 6.701388e-01  0.1420204751 0.030406578 -0.020839123 #> 22  5.721678e-01 3.844915e-01 -0.0047906580 0.029963787 -0.020535657 #> 23  2.588034e-01 6.482075e-01  0.0864292256 0.018975503 -0.013004845 #> 24  6.870303e-01 1.570178e-01 -0.0367930867 0.116933069 -0.080139982 #> 25  0.000000e+00 1.176161e-01  0.5790838806 0.231450916  0.071849060 #> 26  0.000000e+00 6.365586e-02  0.5123669613 0.268068544  0.155908637 #> 27  3.994155e-01 3.327224e-03 -0.1295842005 0.411834928 -0.282250728 #> 28  6.731136e-01 2.218784e-01 -0.0247801419 0.078770109 -0.053985029 #> 29  6.870385e-01 1.557595e-01 -0.0370866137 0.117865935 -0.080779321 #> 30  2.949888e-01 1.417868e-04 -0.1456807234 0.462991708 -0.317310984 #> 31  2.816811e-01 6.371393e-01  0.0747901256 0.016876160 -0.011566062 #> 32  5.501362e-01 4.109662e-01 -0.0011531032 0.025417695 -0.017419996 #> 33  1.623474e-02 4.371730e-01  0.4781508583 0.117101441 -0.048660045 #> 34  0.000000e+00 1.680460e-03  0.0913796260 0.385868523  0.521071392 #> 35  2.484717e-02 0.000000e+00 -0.1096041808 0.348335907 -0.238731726 #> 36  3.805227e-01 2.306853e-03 -0.1329030055 0.422382509 -0.289479504 #> 37  3.348859e-01 6.055247e-01  0.0522770346 0.013616542 -0.009332086 #> 38  0.000000e+00 4.250542e-08 -0.1306484981 0.435387716  0.695260740 #> 39  3.523797e-03 3.093953e-01  0.5620918109 0.155768203 -0.030779128 #> 40  6.755884e-01 2.151641e-01 -0.0257854394 0.081952551 -0.056166113 #> 41  9.102135e-02 6.344617e-01  0.2558704937 0.055353038 -0.036706580 #> 42  4.518731e-02 0.000000e+00 -0.1272754358 0.404497383 -0.277221947 #> 43  5.836584e-01 3.699734e-01 -0.0066523678 0.032772382 -0.022460525 #> 44  2.591084e-01 6.480713e-01  0.0862647731 0.018944587 -0.012983657 #> 45  0.000000e+00 2.598497e-04 -0.0133214406 0.409475575  0.603586016 #> 46  4.340899e-01 5.286469e-01  0.0221785243 0.013440311 -0.009211306 #> 47  1.981033e-01 0.000000e+00 -0.1539181131 0.489171171 -0.335253058 #> 48  0.000000e+00 3.654671e-02  0.4361138342 0.295864645  0.231474806 #> 49  1.848555e-01 6.696593e-01  0.1362963743 0.029184533 -0.020001596 #> 50  6.372879e-02 0.000000e+00 -0.1370117457 0.435440603 -0.298428858 #> 51  9.133516e-03 3.815279e-01  0.5194514956 0.133533096 -0.043645995 #> 52  1.775657e-03 2.709035e-01  0.5791622728 0.168377140 -0.020218522 #> 53  1.780026e-01 0.000000e+00 -0.1542910080 0.490356278 -0.336065270 #> 54  3.577901e-01 5.897137e-01  0.0441575168 0.012884429 -0.008830333 #> 55  2.347278e-01 0.000000e+00 -0.1518761877 0.482681675 -0.330805487 #> 56  5.037562e-01 1.481564e-02 -0.1081949223 0.343857105 -0.235662183 #> 57  4.454807e-01 5.184647e-01  0.0194424521 0.013949309 -0.009560147 #> 58  0.000000e+00 7.877313e-02  0.5388512319 0.256095782  0.126279858 #> 59  5.158060e-01 1.702970e-02 -0.1053620345 0.334853831 -0.229491796 #> 60  0.000000e+00 1.220391e-01  0.5818835917 0.229036507  0.067040796 #> 61  5.254702e-01 4.387933e-01  0.0031165413 0.021395425 -0.014663337 #> 62  0.000000e+00 2.191201e-03  0.1118187644 0.381165170  0.504824864 #> 63  3.655172e-01 5.841063e-01  0.0415974283 0.012728278 -0.008723315 #> 64  5.633413e-01 2.858436e-02 -0.0932598978 0.296391714 -0.203131817 #> 65  1.788535e-03 2.712595e-01  0.5790250818 0.168257298 -0.020330400 #> 66  5.925125e-02 0.000000e+00 -0.1350165251 0.429099541 -0.294083016 #> 67  0.000000e+00 6.003854e-02  0.5047043397 0.271224949  0.164032170 #> 68  2.203016e-02 0.000000e+00 -0.1061010551 0.337202531 -0.231101476 #> 69  1.617743e-01 0.000000e+00 -0.1541157929 0.489799422 -0.335683629 #> 70  0.000000e+00 7.682479e-02  0.5358760013 0.257542490  0.129756723 #> 71  6.617572e-01 2.480898e-01 -0.0211836964 0.067584261 -0.046318817 #> 72  1.256197e-02 4.112109e-01  0.4983037810 0.124719776 -0.046796468 #> 73  0.000000e+00 8.887945e-03  0.2490554831 0.348256243  0.393800328 #> 74  3.969321e-01 5.599500e-01  0.0320168415 0.012574988 -0.008618258 #> 75  1.257972e-01 0.000000e+00 -0.1517825478 0.482384075 -0.330601527 #> 76  3.824764e-03 0.000000e+00 -0.0628985775 0.199899610 -0.137001033 #> 77  3.468155e-04 2.112625e-01  0.5956048020 0.189594653  0.003191234 #> 78  1.666745e-01 6.701931e-01  0.1528366997 0.032721018 -0.022425322 #> 79  0.000000e+00 5.312044e-02  0.4882714727 0.277652670  0.180955421 #> 80  0.000000e+00 4.502281e-02  0.4654493244 0.285965388  0.203562474 #> 81  0.000000e+00 3.601161e-02  0.4340289810 0.296540818  0.233418594 #> 82  2.262736e-01 6.607388e-01  0.1056495502 0.022760035 -0.015598571 #> 83  2.806750e-01 5.489366e-05 -0.1474057325 0.468474004 -0.321068272 #> 84  0.000000e+00 3.264597e-02  0.4201563977 0.300960781  0.246236852 #> 85  1.539821e-01 0.000000e+00 -0.1538575816 0.488978794 -0.335121213 #> 86  2.794189e-02 4.976768e-01  0.4249571838 0.099436897 -0.050012801 #> 87  0.000000e+00 1.353167e-01  0.5886521272 0.222148405  0.053882792 #> 88  0.000000e+00 2.729785e-02  0.3949507939 0.308679659  0.269071697 #> 89  1.089184e-02 0.000000e+00 -0.0867571350 0.275725114 -0.188967979 #> 90  6.615453e-01 8.481810e-02 -0.0594104846 0.188814011 -0.129403526 #> 91  0.000000e+00 1.174024e-01  0.5789411041 0.231569242  0.072087262 #> 92  5.176633e-01 1.739299e-02 -0.1049177198 0.333441742 -0.228524023 #> 93  0.000000e+00 1.029750e-02  0.2665244502 0.343840688  0.379337366 #> 94  0.000000e+00 4.235736e-02  0.4569082519 0.288927935  0.211806451 #> 95  1.710790e-01 6.702989e-01  0.1486109734 0.031816388 -0.021805335 #> 96  0.000000e+00 1.399182e-02  0.3046983098 0.333941916  0.347367955 #> 97  2.037582e-02 4.616444e-01  0.4577186082 0.109960276 -0.049699137 #> 98  5.769425e-01 3.785231e-01 -0.0055657988 0.031090439 -0.021307807 #> 99  1.562374e-01 0.000000e+00 -0.1539448121 0.489256024 -0.335311212 #> 100 2.075004e-09 1.409948e-01  0.5908692322 0.219351727  0.048784234 #> 101 0.000000e+00 6.582231e-03  0.2152216521 0.356635732  0.421560385 #> 102 3.698415e-01 1.833569e-03 -0.1347044673 0.428107782 -0.293403315 #> 103 4.161346e-01 5.441383e-01  0.0267486055 0.012874788 -0.008823725 #> 104 2.290867e-01 6.598230e-01  0.1038435807 0.022392820 -0.015346901 #> 105 0.000000e+00 6.435712e-02  0.5137859642 0.267471258  0.154385654 #> 106 3.720584e-01 5.792548e-01  0.0394959498 0.012632245 -0.008657499 #> 107 6.253229e-01 5.494078e-02 -0.0742362921 0.235932297 -0.161696005 #> 108 2.968014e-05 1.693842e-01  0.5970842203 0.206428067  0.027073825 #> 109 0.000000e+00 1.329263e-02  0.2981527070 0.335665972  0.352888696 #> 110 2.190187e-01 0.000000e+00 -0.1529444843 0.486076856 -0.333132371 #> 111 0.000000e+00 6.877004e-02  0.5222559075 0.263813750  0.145160307 #> 112 1.599720e-01 6.697105e-01  0.1595676713 0.034162322 -0.023412558 #> 113 1.795476e-01 6.700698e-01  0.1408891068 0.030164810 -0.020673428 #> 114 0.000000e+00 6.353354e-02  0.5121173047 0.268173198  0.156175959 #> 115 8.455616e-03 3.747781e-01  0.5239767376 0.135558232 -0.042768682 #> 116 3.312835e-05 0.000000e+00 -0.0132469276 0.042100406 -0.028853479 #> 117 3.524175e-03 0.000000e+00 -0.0612922727 0.194794571 -0.133502298 #> 118 2.777908e-02 4.969918e-01  0.4256115288 0.099637749 -0.050020153 #> 119 6.662912e-01 2.383027e-01 -0.0224744807 0.071548735 -0.049035866 #> 120 7.433461e-06 1.580733e-01  0.5954718322 0.211391377  0.035056105 #> 121 6.864986e-01 1.676414e-01 -0.0344206582 0.109393192 -0.074972534 #> 122 3.800317e-02 5.344077e-01  0.3878841118 0.088563186 -0.048858117 #> 123 0.000000e+00 2.768592e-02  0.3969311472 0.308086265  0.267296670 #> 124 0.000000e+00 4.204787e-03  0.1692787047 0.367707832  0.458808676 #> 125 5.607882e-01 2.782492e-02 -0.0939528018 0.298593851 -0.204641049 #> 126 3.867299e-01 5.680303e-01  0.0349901918 0.012538834 -0.008593479 #> 127 4.500477e-02 0.000000e+00 -0.1271571012 0.404121301 -0.276964200 #> 128 4.591283e-02 0.000000e+00 -0.1277405343 0.405975525 -0.278234990 #> 129 4.206883e-02 0.000000e+00 -0.1251774249 0.397829640 -0.272652215 #> 130 4.250754e-01 5.139181e-03 -0.1248097434 0.396661102 -0.271851358 #> 131 0.000000e+00 5.995761e-03  0.2052071449 0.359076946  0.429720148 #> 132 5.399138e-03 0.000000e+00 -0.0700725124 0.222699280 -0.152626767 #> 133 6.634244e-01 8.707912e-02 -0.0584675363 0.185817202 -0.127349666 #> 134 2.925801e-01 1.234153e-04 -0.1459805361 0.463944550 -0.317964014 #> 135 2.553839e-01 6.497122e-01  0.0882913171 0.019327681 -0.013246210 #> 136 6.685839e-01 2.330527e-01 -0.0231904908 0.073775601 -0.050562047 #> 137 4.680072e-03 0.000000e+00 -0.0670173703 0.212989653 -0.145972283 #> 138 3.138081e-02 5.113987e-01  0.4115755921 0.095401781 -0.049756855 #> 139 4.702448e-01 9.798623e-03 -0.1156510956 0.367553764 -0.251902669 #> 140 7.852046e-02 0.000000e+00 -0.1424151200 0.452613208 -0.310198088 #> 141 3.707244e-03 3.126561e-01  0.5604501526 0.154728697 -0.031542180 #> 142 4.769533e-01 1.068236e-02 -0.1142057113 0.362960151 -0.248754439 #> 143 7.608805e-02 0.000000e+00 -0.1416357783 0.450136362 -0.308500584 #> 144 6.391694e-01 6.417012e-02 -0.0691119223 0.219646403 -0.150534481 #> 145 0.000000e+00 5.045906e-02  0.4812420487 0.280281069  0.188017825 #> 146 0.000000e+00 2.736747e-02  0.3953080238 0.308572772  0.268751730 #> 147 1.826454e-01 6.698540e-01  0.1381868237 0.029587779 -0.020277960 #> 148 0.000000e+00 8.089011e-02  0.5419550328 0.254552219  0.122602643 #> 149 7.816305e-05 1.814835e-01  0.5977556800 0.201340452  0.019342160 #> 150 0.000000e+00 7.914543e-02  0.5394066623 0.255822214  0.125625689 #> 151 1.163040e-01 6.551029e-01  0.2138511992 0.045920356 -0.031178415 #> 152 6.855465e-01 1.759179e-01 -0.0326960833 0.103912275 -0.071216192 #> 153 6.328896e-01 2.999874e-01 -0.0149268203 0.049923414 -0.034214971 #> 154 3.846954e-02 0.000000e+00 -0.1225360196 0.389434921 -0.266898901 #> 155 0.000000e+00 1.218206e-03  0.0687067497 0.391043476  0.539031569 #> 156 4.525735e-01 7.723764e-03 -0.1193510490 0.379312683 -0.259961634 #> 157 2.071462e-01 6.659963e-01  0.1187817298 0.025477578 -0.017461037 #> 158 4.505400e-05 1.740734e-01  0.5974652573 0.204431156  0.023985175 #> 159 2.157051e-02 0.000000e+00 -0.1054917189 0.335265984 -0.229774265 #> 160 3.363271e-01 6.045664e-01  0.0517413233 0.013558650 -0.009292409 #> 161 3.113802e-01 3.141231e-04 -0.1435439958 0.456200918 -0.312656922 #> 162 5.956273e-01 3.542465e-01 -0.0085886817 0.036083125 -0.024729540 #> 163 3.192014e-01 4.289983e-04 -0.1424679170 0.452781004 -0.310313087 #> 164 6.629476e-01 2.455872e-01 -0.0215087657 0.068575756 -0.046998338 #> 165 4.967490e-02 0.000000e+00 -0.1300252218 0.413236550 -0.283211328 #> 166 0.000000e+00 2.295321e-03  0.1155631243 0.380299245  0.501842310 #> 167 2.462745e-01 1.369095e-08 -0.1509274970 0.479666616 -0.328739119 #> 168 4.583309e-02 5.571151e-01  0.3627530476 0.081672809 -0.047374007 #> 169 1.616332e-01 0.000000e+00 -0.1541121779 0.489787933 -0.335675755 #> 170 6.755667e-01 1.056815e-01 -0.0514177172 0.163411988 -0.111994271 #> 171 6.979547e-02 6.066601e-01  0.2996676634 0.065656797 -0.041779989 #> 172 6.819955e-01 1.213784e-01 -0.0462963922 0.147135772 -0.100839380 #> 173 6.613377e-02 0.000000e+00 -0.1380072732 0.438604515 -0.300597242 #> 174 6.739157e-01 1.025811e-01 -0.0525124727 0.166891260 -0.114378787 #> 175 1.593817e-02 0.000000e+00 -0.0969306288 0.308057760 -0.211127131 #> 176 6.859975e-01 1.724716e-01 -0.0334015911 0.106154468 -0.072752877 #> 177 3.822235e-02 0.000000e+00 -0.1223451165 0.388828207 -0.266483090 #> 178 4.534103e-01 7.814210e-03 -0.1191792937 0.378766823 -0.259587529 #> 179 0.000000e+00 2.888625e-02  0.4028958130 0.306286199  0.261931736 #> 180 1.429424e-01 6.665716e-01  0.1784363872 0.038213660 -0.026164031 #> 181 9.928770e-02 6.424729e-01  0.2410750399 0.051988066 -0.034823701 #> 182 1.131555e-01 6.531180e-01  0.2185885492 0.046965870 -0.031827860 #> 183 6.162645e-01 3.253726e-01 -0.0119966682 0.042947804 -0.029434242 #> 184 0.000000e+00 1.296556e-02  0.2949945602 0.336493620  0.355546263 #> 185 2.559476e-01 6.494669e-01  0.0879819943 0.019268914 -0.013205935 #> 186 1.238546e-01 0.000000e+00 -0.1515630938 0.481686623 -0.330123529 #> 187 2.533671e-01 6.505802e-01  0.0894056420 0.019540225 -0.013391877 #> 188 1.119360e-02 0.000000e+00 -0.0874625130 0.277966894 -0.190504381 #> 189 7.442747e-02 0.000000e+00 -0.1410810240 0.448373283 -0.307292259 #> 190 1.505075e-01 6.683227e-01  0.1697273431 0.036340812 -0.024898310 #> 191 2.489597e-01 6.524263e-01  0.0918836167 0.020017368 -0.013718886 #> 192 2.493469e-01 6.522669e-01  0.0916634909 0.019974741 -0.013689672 #> 193 1.391608e-01 0.000000e+00 -0.1530090701 0.486282118 -0.333273048 #> 194 8.980049e-02 6.331599e-01  0.2581528514 0.055876847 -0.036990139 #> 195 6.707060e-02 0.000000e+00 -0.1383816194 0.439794235 -0.301412615 #> 196 3.959564e-01 3.121817e-03 -0.1302043591 0.413805871 -0.283601512 #> 197 0.000000e+00 9.247755e-03  0.2537083027 0.347086523  0.389957420 #> 198 5.103548e-01 4.550176e-01  0.0058764731 0.019393107 -0.013291050 #> 199 0.000000e+00 3.962425e-02  0.4475265621 0.292102891  0.220746292 #> 200 3.467836e-01 1.036922e-03 -0.1384033898 0.439863424 -0.301460034 #> 201 4.992120e-01 4.666077e-01  0.0079947964 0.018114454 -0.012414726 #> 202 1.509040e-02 4.295892e-01  0.4841981600 0.119320635 -0.048198375 #> 203 1.294077e-01 0.000000e+00 -0.1521615036 0.483588445 -0.331426941 #> 204 4.204584e-01 5.404702e-01  0.0256179720 0.012985207 -0.008899401 #> 205 7.289079e-03 3.622538e-01  0.5320903850 0.139340987 -0.040974285 #> 206 0.000000e+00 1.339994e-02  0.2991752402 0.335397422  0.352027397 #> 207 6.484844e-01 7.165510e-02 -0.0653456079 0.207676581 -0.142330973 #> 208 0.000000e+00 7.817360e-02  0.5379480669 0.256538235  0.127340099 #> 209 0.000000e+00 5.416670e-02  0.4909207828 0.276644480  0.178268035 #> 210 6.619758e-01 8.532580e-02 -0.0591969475 0.188135363 -0.128938416 #> 211 3.104158e-01 3.015109e-04 -0.1436742070 0.456614746 -0.312940539 #> 212 9.634871e-03 3.863035e-01  0.5161859064 0.132105491 -0.044229762 #> 213 4.840624e-05 1.749549e-01  0.5975193781 0.204059403  0.023417899 #> 214 0.000000e+00 8.923616e-02  0.5529884573 0.248731445  0.109043933 #> 215 0.000000e+00 2.621699e-02  0.3892937513 0.310363478  0.274125780 #> 216 4.752139e-03 0.000000e+00 -0.0673385132 0.214010285 -0.146671772 #> 217 1.012366e-01 6.441697e-01  0.2377456590 0.051237814 -0.034389848 #> 218 3.357713e-01 6.049366e-01  0.0519475328 0.013580790 -0.009307583 #> 219 4.621567e-01 8.805102e-03 -0.1173636402 0.372996447 -0.255632807 #> 220 1.453204e-06 1.502562e-01  0.5937199862 0.214957940  0.041064405 #> 221 5.673216e-02 5.827237e-01  0.3318472414 0.073624731 -0.044927869 #> 222 2.388186e-01 0.000000e+00 -0.1515551889 0.481661500 -0.330106311 #> 223 6.454161e-01 2.790735e-01 -0.0173687613 0.056431816 -0.038675498 #> 224 6.748051e-01 1.042194e-01 -0.0519303201 0.165041105 -0.113110785 #> 225 4.332856e-01 5.293554e-01  0.0223763581 0.013408865 -0.009189754 #> 226 0.000000e+00 3.634925e-04  0.0012262797 0.406233607  0.592176620 #> 227 0.000000e+00 2.289310e-02  0.3704510171 0.315859664  0.290796215 #> 228 0.000000e+00 1.417294e-04 -0.0358900663 0.414487656  0.621260681 #> 229 0.000000e+00 2.809384e-03  0.1324707394 0.376371313  0.488348564 #> 230 5.551557e-01 2.621359e-02 -0.0954623559 0.303391404 -0.207929048 #> 231 0.000000e+00 2.210609e-02  0.3656302104 0.317240058  0.295023644 #> 232 1.276068e-01 0.000000e+00 -0.1519771093 0.483002416 -0.331025307 #> 233 0.000000e+00 6.712373e-03  0.2173527656 0.356114064  0.419820798 #> 234 1.671030e-01 6.702106e-01  0.1524188394 0.032631557 -0.022364011 #> 235 6.413702e-01 2.860364e-01 -0.0165486934 0.054182048 -0.037133622 #> 236 1.726238e-01 0.000000e+00 -0.1542838993 0.490333685 -0.336049786 #> 237 6.865501e-01 1.670381e-01 -0.0345504906 0.109805816 -0.075255325 #> 238 3.336170e-01 7.044739e-04 -0.1403944922 0.446191398 -0.305796906 #> 239 3.691085e-02 5.308818e-01  0.3916231739 0.089618757 -0.049034564 #> 240 0.000000e+00 5.086333e-04  0.0174526991 0.402605529  0.579433139 #> 241 7.043041e-03 0.000000e+00 -0.0760632393 0.241738565 -0.165675326 #> 242 2.868544e-01 6.344092e-01  0.0723402734 0.016461479 -0.011281861 #> 243 6.777049e-01 2.089326e-01 -0.0267578730 0.085040013 -0.058282103 #> 244 4.310658e-01 5.641405e-03 -0.1236509691 0.392978371 -0.269327402 #> 245 8.115609e-04 2.376348e-01  0.5900534143 0.179902376 -0.008402168 #> 246 0.000000e+00 2.231303e-02  0.3669124412 0.316873873  0.293900653 #> 247 1.956640e-01 0.000000e+00 -0.1539947161 0.489414625 -0.335419909 #> 248 2.510468e-01 6.515609e-01  0.0907027851 0.019789243 -0.013562541 #> 249 0.000000e+00 7.365606e-02  0.5307812831 0.259951655  0.135610998 #> 250 0.000000e+00 9.291516e-02  0.5572960472 0.246287906  0.103500883 #> 251 1.304097e-01 6.622824e-01  0.1941178938 0.041605073 -0.028415126 #> 252 1.340465e-01 6.637160e-01  0.1893981895 0.040581310 -0.027742043 #> 253 4.090759e-01 5.500415e-01  0.0286373182 0.012728785 -0.008723663 #> 254 0.000000e+00 7.227305e-02  0.5284534353 0.261026076  0.138247435 #> 255 2.474199e-01 4.760271e-08 -0.1508263447 0.479345141 -0.328518796 #> 256 1.481729e-02 0.000000e+00 -0.0949262864 0.301687707 -0.206761421 #> 257 6.681534e-01 9.335889e-02 -0.0559526016 0.177824423 -0.121871821 #> 258 6.859621e-01 1.392105e-01 -0.0412160974 0.130989955 -0.089773857 #> 259 2.119227e-05 1.660898e-01  0.5967192413 0.207851468  0.029318290 #> 260 1.059460e-01 6.479896e-01  0.2299355440 0.049487236 -0.033358430 #> 261 3.657081e-01 5.839660e-01  0.0415352439 0.012725004 -0.008721071 #> 262 0.000000e+00 1.301510e-02  0.2954770649 0.336367344  0.355140490 #> 263 6.473152e-01 7.064475e-02 -0.0658358765 0.209234717 -0.143398840 #> 264 7.959820e-04 2.369320e-01  0.5902394318 0.180153600 -0.008121007 #> 265 6.499130e-01 2.710561e-01 -0.0183260957 0.059132044 -0.040526098 #> 266 6.414439e-02 0.000000e+00 -0.1371874211 0.435998922 -0.298811501 #> 267 2.292801e-02 0.000000e+00 -0.1072593284 0.340883670 -0.233624342 #> 268 2.921877e-03 0.000000e+00 -0.0577506586 0.183538875 -0.125788216 #> 269 3.962100e-05 1.725521e-01  0.5973589977 0.205075341  0.024973896 #> 270 4.094870e-03 3.192239e-01  0.5570564553 0.152646713 -0.033021943 #> 271 6.271079e-01 3.090775e-01 -0.0138780940 0.047316100 -0.032428050 #> 272 5.973220e-01 3.519645e-01 -0.0088639365 0.036587654 -0.025075318 #> 273 6.126276e-01 4.791370e-02 -0.0785684381 0.249700403 -0.171131965 #> 274 5.376545e-01 4.252681e-01  0.0009753269 0.023256343 -0.015938716 #> 275 1.353572e-03 0.000000e+00 -0.0450826407 0.143278317 -0.098195676 #> 276 1.253362e-03 2.548592e-01  0.5849060992 0.173850558 -0.014869252 #> 277 0.000000e+00 2.789482e-02  0.3979864882 0.307769188  0.266349502 #> 278 4.917595e-01 1.283954e-02 -0.1109331774 0.352559625 -0.241626448 #> 279 5.542797e-01 2.597065e-02 -0.0956948224 0.304130212 -0.208435389 #> 280 4.750701e-01 1.042863e-02 -0.1146137690 0.364257009 -0.249643240 #> 281 0.000000e+00 7.189979e-02  0.5278139136 0.261318527  0.138967765 #> 282 1.904886e-01 6.690168e-01  0.1316125587 0.028187393 -0.019318206 #> 283 3.244097e-01 5.185702e-04 -0.1417320132 0.450442209 -0.308710196 #> 284 2.958341e-01 6.294840e-01  0.0682333060 0.015792698 -0.010823512 #> 285 2.150427e-02 4.676398e-01  0.4524942704 0.108212496 -0.049850793 #> 286 0.000000e+00 2.042041e-03  0.1062299438 0.382455107  0.509272909 #> 287 5.682186e-01 3.008824e-02 -0.0919206074 0.292135281 -0.200214673 #> 288 6.863602e-01 1.691363e-01 -0.0341014318 0.108378650 -0.074277218 #> 289 5.815693e-01 3.459529e-02 -0.0881418588 0.280125941 -0.191984082 #> 290 1.745217e-02 4.448168e-01  0.4719205027 0.114868409 -0.049057864 #> 291 5.642028e-01 3.942571e-01 -0.0034892867 0.028202391 -0.019328485 #> 292 6.354732e-01 2.958209e-01 -0.0154090384 0.051161768 -0.035063675 #> 293 6.400537e-01 6.482971e-02 -0.0687670355 0.218550310 -0.149783274 #> 294 0.000000e+00 1.061608e-03  0.0596729588 0.393094170  0.546171263 #> 295 6.519676e-01 2.672820e-01 -0.0187826872 0.060445687 -0.041426401 #> 296 2.868886e-01 8.625273e-05 -0.1466738531 0.466147999 -0.319474146 #> 297 6.744036e-01 1.034710e-01 -0.0521952266 0.165883011 -0.113687785 #> 298 6.686791e-02 0.000000e+00 -0.1383012514 0.439538815 -0.301237564 #> 299 0.000000e+00 5.114946e-03  0.1887004184 0.363065842  0.443118794 #> 300 1.618966e-05 1.637320e-01  0.5964065363 0.208881099  0.030964201 #> 301 0.000000e+00 6.099243e-02  0.5067824635 0.270379958  0.161845147 #> 302 0.000000e+00 1.214795e-01  0.5815453604 0.229338465  0.067636672 #> 303 5.709080e-01 3.094863e-02 -0.0911730302 0.289759386 -0.198586356 #> 304 3.254939e-01 6.116448e-01  0.0558549540 0.014032668 -0.009617277 #> 305 5.637624e-01 2.871143e-02 -0.0931450729 0.296026786 -0.202881713 #> 306 6.241845e-01 3.135612e-01 -0.0133613302 0.046076018 -0.031578161 #> 307 5.666789e-01 3.912460e-01 -0.0038951860 0.028734782 -0.019693359 #> 308 0.000000e+00 2.560326e-02  0.3859848933 0.311340849  0.277071003 #> 309 1.987110e-01 6.677244e-01  0.1250993753 0.026806984 -0.018372144 #> 310 0.000000e+00 0.000000e+00  0.0000000000 0.000000000  0.000000000 #> 311 0.000000e+00 2.094281e-04 -0.0218687517 0.411376089  0.610283234 #> 312 6.745467e-01 1.037360e-01 -0.0521012119 0.165584221 -0.113483009 #> 313 5.227205e-05 1.759250e-01  0.5975726961 0.203651600  0.022798390 #> 314 9.922533e-02 6.424174e-01  0.2411825497 0.052012333 -0.034837651 #> 315 1.826064e-03 2.722881e-01  0.5786264368 0.167911448 -0.020652011 #> 316 3.611775e-01 5.872721e-01  0.0430246386 0.012810301 -0.008779529 #> 317 1.210178e-01 0.000000e+00 -0.1512223213 0.480603604 -0.329381283 #> 318 1.127015e-01 6.528194e-01  0.2192821844 0.047119294 -0.031922453 #> 319 0.000000e+00 3.024556e-02  0.4093733622 0.304308674  0.256072399 #> 320 2.721626e-01 2.548962e-05 -0.1483639783 0.471519430 -0.323155452 #> 321 0.000000e+00 1.340798e-01  0.5881180498 0.222768842  0.055033279 #> 322 1.204890e-03 0.000000e+00 -0.0434101007 0.137962774 -0.094552673 #> 323 5.699160e-06 1.564754e-01  0.5951587104 0.212110711  0.036249450 #> 324 0.000000e+00 2.359895e-02  0.3746504198 0.314648957  0.287101670 #> 325 1.445304e-01 6.669889e-01  0.1765629779 0.037810252 -0.025892546 #> 326 4.568539e-01 8.194328e-03 -0.1184688841 0.376509051 -0.258040167 #> 327 2.440107e-01 6.544133e-01  0.0947381628 0.020574134 -0.014100466 #> 328 2.464900e-02 0.000000e+00 -0.1093698178 0.347591071 -0.238221253 #> 329 8.003957e-07 0.000000e+00 -0.0038334164 0.012183081 -0.008349664 #> 330 6.861168e-01 1.714471e-01 -0.0336147497 0.106831913 -0.073217163 #> 331 0.000000e+00 1.185288e-01  0.5796856362 0.230947411  0.070838120 #> 332 5.943618e-06 1.567181e-01  0.5952077053 0.212001157  0.036067105 #> 333 6.473193e-04 2.297546e-01  0.5920251215 0.182739999 -0.005166994 #> 334 8.472886e-02 0.000000e+00 -0.1442376290 0.458405372 -0.314167743 #> 335 4.655802e-01 9.216309e-03 -0.1166427289 0.370705300 -0.254062571 #> 336 1.794723e-01 6.700742e-01  0.1409555526 0.030179007 -0.020683157 #> 337 2.763552e-05 0.000000e+00 -0.0124716887 0.039636599 -0.027164911 #> 338 3.792026e-01 2.244496e-03 -0.1331286074 0.423099500 -0.289970893 #> 339 0.000000e+00 2.156982e-03  0.1105608296 0.381455773  0.505826416 #> 340 5.968044e-01 3.526630e-01 -0.0087798194 0.036432557 -0.024969023 #> 341 7.038754e-02 0.000000e+00 -0.1396496767 0.443824281 -0.304174604 #> 342 5.603789e-01 2.770491e-02 -0.0940633647 0.298945234 -0.204881869 #> 343 1.076422e-01 6.492721e-01  0.2272013285 0.048877372 -0.032992983 #> 344 4.081025e-02 0.000000e+00 -0.1242821663 0.394984395 -0.270702229 #> 345 7.635936e-03 0.000000e+00 -0.0779648931 0.247782261 -0.169817368 #> 346 3.098665e-02 5.098944e-01  0.4130685677 0.095845377 -0.049795039 #> 347 5.777909e-01 3.774532e-01 -0.0057032542 0.031296498 -0.021449029 #> 348 2.913467e-03 2.977042e-01  0.5677358043 0.159529179 -0.027882665 #> 349 1.817100e-01 0.000000e+00 -0.1542683194 0.490284171 -0.336015851 #> 350 5.316673e-02 5.749980e-01  0.3415003115 0.076093084 -0.045758093 #> 351 0.000000e+00 6.913391e-02  0.5229205127 0.263519596  0.144425978 #> 352 3.143854e-03 0.000000e+00 -0.0591119457 0.187865217 -0.128753271 #> 353 5.263429e-01 1.917431e-02 -0.1028130141 0.326752723 -0.223939708 #> 354 0.000000e+00 1.335865e-01  0.5878997654 0.223017470  0.055496271 #> 355 0.000000e+00 5.856813e-03  0.2027281967 0.359678703  0.431736288 #> 356 0.000000e+00 6.752280e-02  0.5199398391 0.264830365  0.147706992 #> 357 0.000000e+00 1.051169e-01  0.5694779458 0.238646593  0.086758531 #> 358 0.000000e+00 4.662064e-02  0.4703061327 0.284247357  0.198825867 #> 359 7.418660e-02 6.134026e-01  0.2898306551 0.063292948 -0.040712833 #> 360 3.758552e-01 2.091335e-03 -0.1336969256 0.424905687 -0.291208762 #> 361 1.132460e-02 4.012371e-01  0.5056351155 0.127666266 -0.045863104 #> 362 2.357013e-01 0.000000e+00 -0.1518013407 0.482443801 -0.330642461 #> 363 6.800523e-01 2.012636e-01 -0.0280140073 0.089032048 -0.061018040 #> 364 2.740820e-02 4.954185e-01  0.4271095340 0.100098862 -0.050035088 #> 365 6.494686e-01 2.718628e-01 -0.0182290246 0.058854838 -0.040336115 #> 366 6.628028e-02 0.000000e+00 -0.1380663032 0.438792120 -0.300725817 #> 367 7.608964e-04 0.000000e+00 -0.0373630034 0.118744336 -0.081381333 #> 368 1.715106e-01 0.000000e+00 -0.1542763160 0.490309585 -0.336033269 #> 369 6.528542e-01 7.564425e-02 -0.0634610116 0.201687097 -0.138226085 #> 370 1.440773e-03 2.610214e-01  0.5828034310 0.171730980 -0.016996594 #> 371 0.000000e+00 8.580284e-03  0.2449604290 0.349282075  0.397177212 #> 372 2.082675e-02 4.640707e-01  0.4556149151 0.109252979 -0.049765335 #> 373 4.379028e-01 5.252693e-01  0.0212491163 0.013597377 -0.009318951 #> 374 0.000000e+00 5.752754e-02  0.4990256960 0.273495088  0.169951675 #> 375 1.803126e-01 6.700228e-01  0.1402159618 0.030021010 -0.020574875 #> 376 3.753768e-01 2.070018e-03 -0.1337777129 0.425162440 -0.291384727 #> 377 7.308658e-02 0.000000e+00 -0.1406190849 0.446905182 -0.306286097 #> 378 9.668357e-04 2.442272e-01  0.5882148177 0.177562820 -0.010971718 #> 379 1.220624e-01 0.000000e+00 -0.1513506537 0.481011461 -0.329660807 #> 380 1.810141e-01 6.699761e-01  0.1396020457 0.029889896 -0.020485016 #> 381 3.118780e-01 3.207641e-04 -0.1434765560 0.455986586 -0.312510030 #> 382 0.000000e+00 8.984269e-02  0.5537207234 0.248323737  0.108112852 #> 383 7.022728e-02 0.000000e+00 -0.1395903982 0.443635886 -0.304045488 #> 384 6.654014e-01 2.402811e-01 -0.0222091670 0.070728180 -0.048473499 #> 385 3.255472e-02 0.000000e+00 -0.1175823975 0.373691685 -0.256109288 #> 386 6.563061e-01 2.590479e-01 -0.0197949221 0.063411441 -0.043458979 #> 387 5.223842e-02 0.000000e+00 -0.1314695333 0.417826754 -0.286357220 #> 388 0.000000e+00 5.947070e-03  0.2043433675 0.359286737  0.430422825 #> 389 4.081348e-02 5.430507e-01  0.3785398844 0.085960961 -0.048365020 #> 390 0.000000e+00 3.240974e-02  0.4191300594 0.301282591  0.247177611 #> 391 0.000000e+00 6.156186e-02  0.5080030094 0.269879937  0.160555195 #> 392 6.703408e-03 0.000000e+00 -0.0749187641 0.238101279 -0.163182515 #> 393 3.316685e-01 6.620768e-04 -0.1406813825 0.447103172 -0.306421790 #> 394 1.662092e-02 4.396428e-01  0.4761526350 0.116379555 -0.048795952 #> 395 4.953343e-02 5.664976e-01  0.3517806709 0.078766067 -0.046577735 #> 396 0.000000e+00 1.570156e-02  0.3196436121 0.329959379  0.334695453 #> 397 6.846493e-01 1.315573e-01 -0.0433095376 0.137643171 -0.094333634 #> 398 6.125493e-02 5.917356e-01  0.3201705060 0.070689176 -0.043850259 #> 399 1.775969e-01 0.000000e+00 -0.1542921455 0.490359893 -0.336067748 #> 400 1.005518e-01 6.435815e-01  0.2389088900 0.051499662 -0.034541835 #> 401 1.233895e-02 0.000000e+00 -0.0900093876 0.286061183 -0.196051795 #> 402 1.220821e-02 4.084331e-01  0.5003685437 0.125539108 -0.046548926 #> 403 6.295218e-01 3.053197e-01 -0.0143112865 0.048378563 -0.033156208 #> 404 2.900823e-01 1.060547e-04 -0.1462874466 0.464919951 -0.318632504 #> 405 7.611103e-03 3.658377e-01  0.5298064419 0.138254998 -0.041510281 #> 406 0.000000e+00 0.000000e+00 -0.1374670091 0.436887488  0.700579521 #> 407 6.229541e-01 3.154276e-01 -0.0131461395 0.045568523 -0.031230350 #> 408 4.641328e-01 9.040819e-03 -0.1169482131 0.371676167 -0.254727954 #> 409 0.000000e+00 3.286437e-02  0.4210988108 0.300664680  0.245372137 #> 410 6.486289e-01 7.178154e-02 -0.0652846313 0.207482790 -0.142198159 #> 411 8.592939e-02 0.000000e+00 -0.1445642221 0.459443326 -0.314879104 #> 412 5.993918e-01 3.491579e-01 -0.0092007770 0.037216825 -0.025506520 #> 413 1.801390e-04 1.960814e-01  0.5973164065 0.195459380  0.010962702 #> 414 0.000000e+00 9.275035e-02  0.5571098222 0.246395890  0.103743941 #> 415 6.658292e-01 9.015664e-02 -0.0572164736 0.181841167 -0.124624694 #> 416 0.000000e+00 8.502805e-02  0.5476553761 0.251615710  0.115700867 #> 417 1.458193e-01 0.000000e+00 -0.1534517010 0.487688854 -0.334237153 #> 418 4.486519e-01 5.155807e-01  0.0187019302 0.014112588 -0.009672050 #> 419 1.051361e-01 6.473601e-01  0.2312556766 0.049782236 -0.033534080 #> 420 0.000000e+00 5.245877e-04  0.0190339783 0.402251233  0.578190201 #> 421 2.501141e-01 6.519496e-01  0.0912287958 0.019890697 -0.013632073 #> 422 1.224542e-01 0.000000e+00 -0.1513979265 0.481161700 -0.329763774 #> 423 6.467507e-01 2.767267e-01 -0.0176473850 0.057209797 -0.039208687 #> 424 1.109741e-01 6.516540e-01  0.2219469353 0.047709537 -0.032284637 #> 425 3.715507e-03 3.128005e-01  0.5603767567 0.154682737 -0.031575544 #> 426 5.230436e-01 4.414383e-01  0.0035514633 0.021051985 -0.014427961 #> 427 7.705143e-03 0.000000e+00 -0.0781794819 0.248464251 -0.170284769 #> 428 1.019002e-01 0.000000e+00 -0.1482209077 0.471064734 -0.322843826 #> 429 0.000000e+00 5.743963e-02  0.4988212388 0.273575806  0.170163321 #> 430 6.237323e-02 0.000000e+00 -0.1364278155 0.433584800 -0.297156984 #> 431 1.366296e-01 0.000000e+00 -0.1528127028 0.485658037 -0.332845335 #> 432 3.450310e-02 0.000000e+00 -0.1193082954 0.379176806 -0.259868511 #> 433 5.440737e-02 0.000000e+00 -0.1326267027 0.421504384 -0.288877681 #> 434 4.201009e-01 4.745990e-03 -0.1257592824 0.399678856 -0.273919574 #> 435 3.227075e-01 4.881010e-04 -0.1419741904 0.451211879 -0.309237688 #> 436 4.706403e-01 4.949854e-01  0.0138043027 0.015516446 -0.010634183 #> 437 1.266935e-02 4.120431e-01  0.4976817942 0.124474510 -0.046868778 #> 438 2.747488e-01 3.292004e-05 -0.1480784412 0.470611957 -0.322533516 #> 439 0.000000e+00 2.637735e-03  0.1270889859 0.377624849  0.492648430 #> 440 3.175805e-02 0.000000e+00 -0.1168470350 0.371354610 -0.254507575 #> 441 4.999495e-01 1.416504e-02 -0.1090724705 0.346646064 -0.237573594 #> 442 6.339769e-02 0.000000e+00 -0.1368706729 0.434992256 -0.298121584 #> 443 4.708812e-01 4.947539e-01  0.0137528242 0.015534559 -0.010646597 #> 444 3.280786e-02 0.000000e+00 -0.1178123516 0.374422508 -0.256610157 #> 445 3.832207e-01 2.437791e-03 -0.1324393603 0.420908986 -0.288469626 #> 446 2.308161e-02 4.756156e-01  0.4454069409 0.105886576 -0.049990702 #> 447 0.000000e+00 1.847235e-05 -0.0858567109 0.425528114  0.660310125 #> 448 7.916167e-05 1.816729e-01  0.5977583319 0.201262467  0.019227154 #> 449 2.445140e-01 1.186974e-10 -0.1510805583 0.480153064 -0.329072506 #> 450 2.327243e-01 6.585885e-01  0.1015518940 0.021929670 -0.015029481 #> 451 1.524418e-04 1.927825e-01  0.5975254114 0.196766150  0.012773467 #> 452 1.355398e-02 0.000000e+00 -0.0925114385 0.294013016 -0.201501578 #> 453 4.820722e-01 4.838560e-01  0.0114100143 0.016444845 -0.011270461 #> 454 2.848718e-01 7.507138e-05 -0.1469143150 0.466912217 -0.319997902 #> 455 4.743596e-01 4.913967e-01  0.0130145195 0.015802961 -0.010830546 #> 456 7.935836e-06 0.000000e+00 -0.0082326248 0.026164320 -0.017931695 #> 457 1.893256e-04 1.971054e-01  0.5972391642 0.195056200  0.010409881 #> 458 5.356424e-01 2.124558e-02 -0.1005041741 0.319414938 -0.218910764 #> 459 0.000000e+00 1.281266e-01  0.5852775186 0.225814515  0.060781368 #> 460 6.595100e-01 8.249393e-02 -0.0604016901 0.191964187 -0.131562497 #> 461 1.211002e-01 0.000000e+00 -0.1512325624 0.480636152 -0.329403590 #> 462 2.832520e-01 6.363188e-01  0.0740395350 0.016747947 -0.011478191 #> 463 9.349284e-02 6.370006e-01  0.2513286895 0.054314528 -0.036136691 #> 464 1.086998e-01 0.000000e+00 -0.1494397857 0.474938482 -0.325498696 #> 465 1.135548e-02 0.000000e+00 -0.0878347458 0.279149897 -0.191315151 #> 466 1.055024e-04 1.862070e-01  0.5977540009 0.199408902  0.016524587 #> 467 5.804327e-01 3.418757e-02 -0.0884703793 0.281170021 -0.192699641 #> 468 1.064987e-02 3.954726e-01  0.5097685357 0.129375641 -0.045266634 #> 469 1.351649e-01 0.000000e+00 -0.1526917011 0.485273479 -0.332581778 #> 470 6.367256e-01 2.937759e-01 -0.0156462785 0.051779832 -0.035487265 #> 471 3.325193e-01 6.070872e-01  0.0531642801 0.013715044 -0.009399594 #> 472 1.231910e-08 0.000000e+00 -0.0009536331 0.003030766 -0.002077133 #> 473 5.646746e-01 3.936851e-01 -0.0035667222 0.028302795 -0.019397297 #> 474 5.576997e-01 4.020638e-01 -0.0024162494 0.026865917 -0.018412534 #> 475 1.451862e-02 4.256404e-01  0.4872943202 0.120477917 -0.047931251 #> 476 3.408713e-04 0.000000e+00 -0.0286945853 0.091195010 -0.062500425 #> 477 5.536667e-01 2.580183e-02 -0.0958571354 0.304646063 -0.208788928 #> 478 2.931694e-01 6.309698e-01  0.0694333396 0.015984461 -0.010954937 #> 479 1.359036e-03 2.583985e-01  0.5837145653 0.172630431 -0.016102506 #> 480 6.375724e-01 6.300285e-02 -0.0697288113 0.221606954 -0.151878143 #> 481 0.000000e+00 6.660036e-03  0.2164994933 0.356323027  0.420517444 #> 482 0.000000e+00 7.840092e-03  0.2346259122 0.351856188  0.405677808 #> 483 5.880389e-03 3.452075e-01  0.5425313113 0.144549230 -0.038168420 #> 484 6.540721e-05 1.789190e-01  0.5976967848 0.202401464  0.020917333 #> 485 5.086230e-01 1.568086e-02 -0.1070609669 0.340253252 -0.233192285 #> 486 4.117160e-03 3.195893e-01  0.5568642571 0.152531323 -0.033102068 #> 487 0.000000e+00 7.812302e-03  0.2342236463 0.351955968  0.406008083 #> 488 6.869934e-01 1.589889e-01 -0.0363387571 0.115489152 -0.079150395 #> 489 1.561008e-03 2.647181e-01  0.5814794449 0.170470022 -0.018228614 #> 490 2.645240e-04 0.000000e+00 -0.0263902112 0.083871419 -0.057481207 #> 491 1.715380e-03 2.692154e-01  0.5798071157 0.168946249 -0.019684183 #> 492 1.503774e-01 0.000000e+00 -0.1536961383 0.488465707 -0.334769569 #> 493 5.762450e-01 3.272532e-02 -0.0896695370 0.284981095 -0.195311558 #> 494 0.000000e+00 7.639838e-03  0.2317025749 0.352580619  0.408076968 #> 495 6.365514e-01 6.227212e-02 -0.0701193271 0.222848063 -0.152728736 #> 496 1.431807e-01 6.666359e-01  0.1781537137 0.038152770 -0.026123098 #> 497 4.914815e-01 1.279627e-02 -0.1109956882 0.352758292 -0.241762604 #> 498 1.741751e-02 4.446048e-01  0.4720951614 0.114930308 -0.049047735 #> 499 6.768754e-01 2.114387e-01 -0.0263619182 0.083782198 -0.057420060 #> 500 5.562235e-01 4.038160e-01 -0.0021710898 0.026574543 -0.018212841 #>  #> $Xp #> NULL #>  #> $p_c #>          1          2          3          4          5          6          7  #> 0.13596382 0.56273919 0.32822017 0.67989494 0.11125809 0.67931155 0.50574298  #>          8          9         10         11         12         13         14  #> 0.68238423 0.96290313 0.36767255 0.40716567 0.25319220 0.50248932 0.18928097  #>         15         16         17         18         19         20         21  #> 0.40669047 0.36118035 0.97745429 0.69328865 0.98840290 0.35435264 0.67221962  #>         22         23         24         25         26         27         28  #> 0.56416207 0.65761180 0.48204977 0.82937063 0.88617700 0.37102744 0.50722234  #>         29         30         31         32         33         34         35  #> 0.48153208 0.34430733 0.65270659 0.57311571 0.69791371 0.98314839 0.18595946  #>         36         37         38         39         40         41         42  #> 0.36646289 0.64020901 0.99345053 0.72658357 0.50472797 0.68149127 0.21308993  #>         43         44         45         46         47         48         49  #> 0.55923380 0.65754836 0.98921816 0.61293111 0.31199156 0.92213701 0.67121171  #>         50         51         52         53         54         55         56  #> 0.23198407 0.70792687 0.73980783 0.30348539 0.63437564 0.32566476 0.39604731  #>         57         58         59         60         61         62         63  #> 0.60944707 0.86840815 0.39906014 0.82548705 0.58249873 0.98160535 0.63234631  #>         64         65         66         67         68         69         70  #> 0.41168541 0.73967333 0.22776605 0.89065981 0.18129144 0.29600081 0.87061292  #>         71         72         73         74         75         76         77  #> 0.51679244 0.70217005 0.96665919 0.62377180 0.27698967 0.13509799 0.76612755  #>         78         79         80         81         82         83         84  #> 0.67389156 0.89949261 0.91028256 0.92290605 0.66405603 0.34020159 0.92780329  #>         85         86         87         88         89         90         91  #> 0.29218655 0.69042662 0.81447035 0.93581493 0.15839541 0.44909275 0.82956108  #>         92         93         94         95         96         97         98  #> 0.39952962 0.96399717 0.91394609 0.67327293 0.95736424 0.69450284 0.56213792  #>         99        100        101        102        103        104        105  #> 0.29330614 0.81004407 0.97124370 0.36384832 0.61826726 0.66352507 0.88531850  #>        106        107        108        109        110        111        112  #> 0.63060402 0.43184596 0.79015531 0.95858818 0.32006268 0.87999373 0.67479238  #>        113        114        115        116        117        118        119  #> 0.67202747 0.88632709 0.70937923 0.09784593 0.13368132 0.69049449 0.51324728  #>        120        121        122        123        124        125        126  #> 0.79766970 0.48636701 0.68726954 0.93522338 0.97644131 0.41096662 0.62661412  #>        127        128        129        130        131        132        133  #> 0.21288256 0.21390931 0.20947647 0.37714754 0.97247033 0.14163998 0.45026945  #>        134        135        136        137        138        139        140  #> 0.34362742 0.65831940 0.51133237 0.13880988 0.68913953 0.38789380 0.24472180  #>        141        142        143        144        145        146        147  #> 0.72557801 0.38950615 0.24273927 0.43758127 0.90298386 0.93570868 0.67155454  #>        148        149        150        151        152        153        154  #> 0.86604050 0.78264029 0.86798966 0.67950780 0.48966906 0.53517158 0.20510437  #>        155        156        157        158        159        160        161  #> 0.98470605 0.38367570 0.66752226 0.78718180 0.18049838 0.63984993 0.34882962  #>        162        163        164        165        166        167        168  #> 0.55387573 0.35092944 0.51588884 0.21803913 0.98130734 0.32955503 0.68573159  #>        169        170        171        172        173        174        175  #> 0.29593308 0.45948794 0.68306500 0.46675410 0.23417392 0.45800248 0.16988763  #>        176        177        178        179        180        181        182  #> 0.48830025 0.20479549 0.38387474 0.93340415 0.67686261 0.68088169 0.67977771  #>        183        184        185        186        187        188        189  #> 0.54397148 0.95916524 0.65820322 0.27585067 0.65873352 0.15915777 0.24136222  #>        190        191        192        193        194        195        196  #> 0.67598126 0.65963016 0.65955183 0.28448890 0.68157957 0.23501345 0.37019649  #>        197        198        199        200        201        202        203  #> 0.96597109 0.58796566 0.91776300 0.35809060 0.59187318 0.69908635 0.27907247  #>        204        205        206        207        208        209        210  #> 0.61699928 0.71222365 0.95839948 0.44193430 0.86908395 0.89813448 0.44935818  #>        211        212        213        214        215        216        217  #> 0.34856829 0.70693237 0.78663158 0.85698536 0.93747155 0.13910423 0.68073373  #>        218        219        220        221        222        223        224  #> 0.63998855 0.38595885 0.80316897 0.68427889 0.32706418 0.52783810 0.45878968  #>        225        226        227        228        229        230        231  #> 0.61317417 0.98852982 0.94265437 0.99020454 0.97989871 0.40940078 0.94390254  #>        232        233        234        235        236        237        238  #> 0.27803907 0.97097539 0.67383229 0.53028917 0.30106989 0.48612428 0.35471542  #>        239        240        241        242        243        244        245  #> 0.68753429 0.98770950 0.14739150 0.65155721 0.50239432 0.37856958 0.75350293  #>        246        247        248        249        250        251        252  #> 0.94357350 0.31100066 0.65920700 0.87425185 0.85313274 0.67819236 0.67782280  #>        253        254        255        256        257        258        259  #> 0.62031450 0.87586091 0.32993105 0.16753474 0.45346843 0.47458349 0.79229277  #>        260        261        262        263        264        265        266  #> 0.68036733 0.63229577 0.95907763 0.44136012 0.75381779 0.52500276 0.23236614  #>        267        268        269        270        271        272        273  #> 0.18281407 0.13061674 0.78813775 0.72360326 0.53833423 0.55309636 0.42713156  #>        274        275        276        277        278        279        280  #> 0.57794029 0.12027183 0.74612614 0.93490563 0.39309646 0.40915961 0.38905276  #>        281        282        283        284        285        286        287  #> 0.87629736 0.67031825 0.35230926 0.64952789 0.69374979 0.98204112 0.41307535  #>        288        289        290        291        292        293        294  #> 0.48696720 0.41700710 0.69678836 0.56746908 0.53371719 0.43797460 0.98528503  #>        295        296        297        298        299        300        301  #> 0.52366294 0.34200359 0.45843071 0.23483244 0.97437462 0.79384790 0.88946878  #>        302        303        304        305        306        307        308  #> 0.82597240 0.41385176 0.64252265 0.41180454 0.53988929 0.56645000 0.93841826  #>        309        310        311        312        313        314        315  #> 0.66896577 0.08975434 0.98960299 0.45855796 0.78602922 0.68088639 0.73928612  #>        316        317        318        319        320        321        322  #> 0.63348984 0.27416356 0.67981597 0.93136256 0.33767915 0.81545680 0.11897312  #>        323        324        325        326        327        328        329  #> 0.79877249 0.94154203 0.67668261 0.38469445 0.66062303 0.18564118 0.09203022  #>        330        331        332        333        334        335        336  #> 0.48789167 0.82856030 0.79860432 0.75709846 0.24960705 0.38677682 0.67203885  #>        337        338        339        340        341        342        343  #> 0.09735433 0.36614125 0.98170437 0.55333497 0.23792790 0.41085194 0.68023194  #>        344        345        346        347        348        349        350  #> 0.20797349 0.14927632 0.68927405 0.56177480 0.73033031 0.30511462 0.68469251  #>        351        352        353        354        355        356        357  #> 0.87956059 0.13178524 0.40174424 0.81585250 0.97276546 0.88148520 0.84094582  #>        358        359        360        361        362        363        364  #> 0.90811355 0.68272025 0.36532387 0.70399362 0.32599993 0.49949525 0.69065171  #>        365        366        367        368        369        370        371  #> 0.52528872 0.23430570 0.11439851 0.30056211 0.44416431 0.74363887 0.96725269  #>        372        373        374        375        376        377        378  #> 0.69419431 0.61177359 0.89382590 0.67191152 0.36520682 0.24023583 0.75060348  #>        379        380        381        382        383        384        385  #> 0.27478814 0.67180470 0.34896433 0.85634443 0.23778911 0.51396643 0.19736885  #>        386        387        388        389        390        391        392  #> 0.52072746 0.22074694 0.97257354 0.68665136 0.92815104 0.88876084 0.14627123  #>        393        394        395        396        397        398        399  #> 0.35420956 0.69754396 0.68517039 0.95442192 0.47127167 0.68381489 0.30330536  #>        400        401        402        403        404        405        406  #> 0.68078595 0.16195119 0.70266705 0.53702847 0.34291783 0.71138945 0.99363759  #>        407        408        409        410        411        412        413  #> 0.54053567 0.38643084 0.92748226 0.44200588 0.25052435 0.55213704 0.77421731  #>        414        415        416        417        418        419        420  #> 0.85330354 0.45184942 0.86149578 0.28802248 0.60846301 0.68043131 0.98762645  #>        421        422        423        424        425        426        427  #> 0.65939641 0.27502140 0.52700963 0.67996012 0.72553385 0.58338996 0.14949087  #>        428        429        430        431        432        433        434  #> 0.26198246 0.89393756 0.23072700 0.28311152 0.20000062 0.22297601 0.37596548  #>        435        436        437        438        439        440        441  #> 0.35185986 0.60146360 0.70202277 0.33845239 0.98035854 0.19626668 0.39510623  #>        442        443        444        445        446        447        448  #> 0.23167858 0.60138515 0.19771582 0.36711901 0.69279577 0.99207789 0.78252669  #>        449        450        451        452        453        454        455  #> 0.32897370 0.66283078 0.77606298 0.16476004 0.59769691 0.34142215 0.60024805  #>        456        457        458        459        460        461        462  #> 0.09470694 0.77365095 0.40415915 0.82031825 0.44786832 0.27421295 0.65235911  #>        463        464        465        466        467        468        469  #> 0.68131147 0.26648721 0.15956201 0.77984131 0.41666440 0.70509782 0.28230563  #>        470        471        472        473        474        475        476  #> 0.53300222 0.64079629 0.09031569 0.56727554 0.57010888 0.69971960 0.10815275  #>        477        478        479        480        481        482        483  #> 0.40899120 0.65013461 0.74468815 0.43688022 0.97108313 0.96870166 0.71642232  #>        484        485        486        487        488        489        490  #> 0.78419080 0.39725762 0.72349535 0.96875668 0.48285793 0.74218337 0.10655070  #>        491        492        493        494        495        496        497  #> 0.74044881 0.29036967 0.41541513 0.96909920 0.43643803 0.67683576 0.39302858  #>        498        499        500  #> 0.69681882 0.50333508 0.57070095  #>  #> $metrics #>       Eavg        E50        E90       Emax        ECI  #> 0.02013950 0.01359176 0.05596146 0.07619301 0.08299318  #>  #> $p_c_plot #> NULL #>  #> $p_c_plot_se #> NULL #>  #> $model #>  #> Call:  glm(formula = y ~ ., family = binomial(link = \"logit\"), data = d) #>  #> Coefficients: #> (Intercept)           V1           V2           V3           V4           V5   #>      -2.317        2.120        3.338        2.319        7.363        6.380   #>  #> Degrees of Freedom: 499 Total (i.e. Null);  494 Residual #> Null Deviance:\t    682.7  #> Residual Deviance: 536.2 \tAIC: 548.2 #>  #> $smooth_args #> $smooth_args$smooth #> [1] \"ns\" #>  #> $smooth_args$df #> [1] 5 #>  #> $smooth_args$knots #> NULL #>  #> $smooth_args$Boundary.knots #> NULL #>  #> $smooth_args$knots_used #> [1] 0.3301593 0.5231512 0.6800345 0.8473262 #>  #> $smooth_args$Boundary.knots_used #> [1] 0.0708276 0.9893243 #>  #>  #> $time #> NULL #>  #> $outcome #> [1] \"binary\" #>  #> attr(,\"class\") #> [1] \"glm_cal\""},{"path":"https://stephenrho.github.io/pmcalibration/reference/invlogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse logit transformation — invlogit","title":"Inverse logit transformation — invlogit","text":"Inverse logit transformation","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/invlogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse logit transformation — invlogit","text":"","code":"invlogit(eta)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/invlogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse logit transformation — invlogit","text":"eta vector numeric values","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/invlogit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse logit transformation — invlogit","text":"inverse logit transformed eta (exp(eta)/(1 + exp(eta)))","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/loess_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"calibration curve via loess — loess_cal","title":"calibration curve via loess — loess_cal","text":"calibration curve via loess","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/loess_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibration curve via loess — loess_cal","text":"","code":"loess_cal(p, y, x, xp, save_data = TRUE, save_mod = TRUE, pw = FALSE)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/loess_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibration curve via loess — loess_cal","text":"p predicted probabilities y binary outcome x predictor (transformation p) xp values plotting (scale x) save_data whether save y, p, x, xp returned object save_mod whether save model returned object pw save pointwise standard errors plotting","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/loess_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibration curve via loess — loess_cal","text":"list class loess_cal","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/loess_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calibration curve via loess — loess_cal","text":"","code":"library(pmcalibration) # simulate some data n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2)  # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  loess_cal(y = dat$y, p = p, x = p, xp = NULL) #> $y #>   [1] 1 1 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 #>  [38] 1 1 1 1 1 0 0 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 1 1 1 0 #>  [75] 1 1 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 0 #> [112] 0 1 1 0 0 1 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 #> [149] 0 1 0 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 1 #> [186] 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 #> [223] 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 1 1 1 0 0 1 1 0 0 1 0 1 0 1 1 #> [260] 1 0 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 0 0 0 1 1 0 0 1 1 0 0 0 1 0 0 #> [297] 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 #> [334] 1 1 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 #> [371] 0 0 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 #> [408] 0 1 0 0 1 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 1 1 1 0 0 1 0 1 1 1 #> [445] 1 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 #> [482] 1 0 1 0 1 0 1 1 0 1 0 1 1 0 0 1 0 1 0 #>  #> $p #>   [1] 0.92132997 0.67026370 0.17615418 0.97084433 0.58930444 0.60091819 #>   [7] 0.70319499 0.85698203 0.03781479 0.31428851 0.70931610 0.90332727 #>  [13] 0.89789573 0.39019322 0.15664410 0.81698086 0.82900079 0.56894346 #>  [19] 0.92120416 0.61686378 0.25006612 0.77326192 0.51614712 0.07238250 #>  [25] 0.36224909 0.27561383 0.71504080 0.37784998 0.86400715 0.41963536 #>  [31] 0.11952199 0.57627060 0.70980402 0.47975114 0.35127677 0.63334362 #>  [37] 0.82676649 0.82333985 0.90453368 0.83585618 0.48081964 0.23342963 #>  [43] 0.45068374 0.44592544 0.27665660 0.96312764 0.90378447 0.15429159 #>  [49] 0.82497191 0.13850154 0.57465151 0.86311361 0.63283793 0.57287967 #>  [55] 0.61809713 0.29652106 0.07961815 0.17872988 0.21109669 0.85859283 #>  [61] 0.89137109 0.68542246 0.10463733 0.89608692 0.16636902 0.61469616 #>  [67] 0.18458082 0.41468880 0.09335044 0.51187344 0.75291451 0.19158835 #>  [73] 0.75890005 0.80550325 0.16182822 0.96748417 0.38789328 0.63900522 #>  [79] 0.74979861 0.86748997 0.98056875 0.71512575 0.07859048 0.67326397 #>  [85] 0.25793168 0.61379431 0.95613845 0.67392463 0.64055610 0.34220117 #>  [91] 0.15908740 0.54330533 0.71684012 0.38684755 0.69465222 0.77297388 #>  [97] 0.71725451 0.98183038 0.37913944 0.85154330 0.11785159 0.91874664 #> [103] 0.46569803 0.21389746 0.88406757 0.50188351 0.27582432 0.84993153 #> [109] 0.18516798 0.38672502 0.45726713 0.20055512 0.59191418 0.83012383 #> [115] 0.54469125 0.44215417 0.81324569 0.54542807 0.86049359 0.46718920 #> [121] 0.84895888 0.74162419 0.50125285 0.67458837 0.11373657 0.21441122 #> [127] 0.91123397 0.48948812 0.66828735 0.73720020 0.52493637 0.79954571 #> [133] 0.91780960 0.85981985 0.43127341 0.85297599 0.88715541 0.85522480 #> [139] 0.73143944 0.83147079 0.39299029 0.59075876 0.67821714 0.87889834 #> [145] 0.77766702 0.58991399 0.56422065 0.42903779 0.14128043 0.81275516 #> [151] 0.58888890 0.86511576 0.25115496 0.89463909 0.43471261 0.11850416 #> [157] 0.31573380 0.91042242 0.27385790 0.08214272 0.37908747 0.92998145 #> [163] 0.66823731 0.87251865 0.69693437 0.86180043 0.71476116 0.73903346 #> [169] 0.69168588 0.83911924 0.64366328 0.78469183 0.48349187 0.72187598 #> [175] 0.53136838 0.95805367 0.38379718 0.64555166 0.73111819 0.40201555 #> [181] 0.64911164 0.77734001 0.06376600 0.75651206 0.94168865 0.99189940 #> [187] 0.36593096 0.63663468 0.60924196 0.68461924 0.61468485 0.24204430 #> [193] 0.39726338 0.75136804 0.44077378 0.79870529 0.82763490 0.29196733 #> [199] 0.88937900 0.81740812 0.80089226 0.36272330 0.88194858 0.90163033 #> [205] 0.25755703 0.75785820 0.81530951 0.35841269 0.44496241 0.64347599 #> [211] 0.79833372 0.87875903 0.94163475 0.65130727 0.69927823 0.98216578 #> [217] 0.61455144 0.72889668 0.75091622 0.86487968 0.73141595 0.35090528 #> [223] 0.92591220 0.48911586 0.65249531 0.16066816 0.70916986 0.64041982 #> [229] 0.58544763 0.77464527 0.92503948 0.75077728 0.65460105 0.46852590 #> [235] 0.71088153 0.84867772 0.93966053 0.35405820 0.86862286 0.88001294 #> [241] 0.08680445 0.08477307 0.98882356 0.28145548 0.18591190 0.61361793 #> [247] 0.56824610 0.91373398 0.68407584 0.94893069 0.68779622 0.33129949 #> [253] 0.79700604 0.96634980 0.42794355 0.94225415 0.49196380 0.70818035 #> [259] 0.74116031 0.75984028 0.08132085 0.86711277 0.18334460 0.62294901 #> [265] 0.75542629 0.44170165 0.91200580 0.44338099 0.45558438 0.76241704 #> [271] 0.35572626 0.69113453 0.78123082 0.43033224 0.26012468 0.62823273 #> [277] 0.75393284 0.94606372 0.83983358 0.22328580 0.42286614 0.14062985 #> [283] 0.27386468 0.11779016 0.80337194 0.51933611 0.36881090 0.70062996 #> [289] 0.83493151 0.99117144 0.57094728 0.06313638 0.80875914 0.94266032 #> [295] 0.12777784 0.47610234 0.69435159 0.79350717 0.95351438 0.91006601 #> [301] 0.85883962 0.74275562 0.69529663 0.47869818 0.64596593 0.45345700 #> [307] 0.95911570 0.95857285 0.82846807 0.85933010 0.59455924 0.82524196 #> [313] 0.78014102 0.91033691 0.91614756 0.82746074 0.95060273 0.80178441 #> [319] 0.80081621 0.72688469 0.67735460 0.97926357 0.85653477 0.44309686 #> [325] 0.27285135 0.63952102 0.59202533 0.22608738 0.92527633 0.56673735 #> [331] 0.54385298 0.46701425 0.05658487 0.55319107 0.99398514 0.68533460 #> [337] 0.54818728 0.94580220 0.55442897 0.97937863 0.80742145 0.79778397 #> [343] 0.69342993 0.41146598 0.72938135 0.82027706 0.41691595 0.88067461 #> [349] 0.25387985 0.61320603 0.05975770 0.42837669 0.52954638 0.22052528 #> [355] 0.94430254 0.87140169 0.84646390 0.75366560 0.91019260 0.53849062 #> [361] 0.66177238 0.37188042 0.79655486 0.15240485 0.96098201 0.03043969 #> [367] 0.65894887 0.74991890 0.70186533 0.41997344 0.71707470 0.55319242 #> [373] 0.90914641 0.52958748 0.73244619 0.97952602 0.88028276 0.68948481 #> [379] 0.79675247 0.45409922 0.31100461 0.09950736 0.40785965 0.83481471 #> [385] 0.75575167 0.83569698 0.76119345 0.59297679 0.77808017 0.81224094 #> [391] 0.93492160 0.65006009 0.95019220 0.63095629 0.11437315 0.50124412 #> [397] 0.17239869 0.31892591 0.80297566 0.95303787 0.61207155 0.84116687 #> [403] 0.46378385 0.87754530 0.73913123 0.46400531 0.50400174 0.80512167 #> [409] 0.31942962 0.24148657 0.54091649 0.78927540 0.23579890 0.22094229 #> [415] 0.98386149 0.17793230 0.85513175 0.46168215 0.69203616 0.88267026 #> [421] 0.86249310 0.34858501 0.18322245 0.88573263 0.68678062 0.96264287 #> [427] 0.33283612 0.83223973 0.71502666 0.44163432 0.28463186 0.68630496 #> [433] 0.59111921 0.31298746 0.72543282 0.08229440 0.25502266 0.08714235 #> [439] 0.32776552 0.88611011 0.21870166 0.80809301 0.87967981 0.55905150 #> [445] 0.61946102 0.78288941 0.98590395 0.21125546 0.80109439 0.29850169 #> [451] 0.45309806 0.28606683 0.32447386 0.72600260 0.45888179 0.32011740 #> [457] 0.41121898 0.81174941 0.11835578 0.52730461 0.47808793 0.59628405 #> [463] 0.73611274 0.77681207 0.93182988 0.55143480 0.22996905 0.19511506 #> [469] 0.79212844 0.93556131 0.68355777 0.82048125 0.31584176 0.54034343 #> [475] 0.59515152 0.90072967 0.79809964 0.39481008 0.34263428 0.70375377 #> [481] 0.38956986 0.81345003 0.38659075 0.37725564 0.46840088 0.76399859 #> [487] 0.63903049 0.73201965 0.85418058 0.34200847 0.91188564 0.59075801 #> [493] 0.88428820 0.67649442 0.36124889 0.40914519 0.76348505 0.55640937 #> [499] 0.43425633 0.59004395 #>  #> $x #>   [1] 0.92132997 0.67026370 0.17615418 0.97084433 0.58930444 0.60091819 #>   [7] 0.70319499 0.85698203 0.03781479 0.31428851 0.70931610 0.90332727 #>  [13] 0.89789573 0.39019322 0.15664410 0.81698086 0.82900079 0.56894346 #>  [19] 0.92120416 0.61686378 0.25006612 0.77326192 0.51614712 0.07238250 #>  [25] 0.36224909 0.27561383 0.71504080 0.37784998 0.86400715 0.41963536 #>  [31] 0.11952199 0.57627060 0.70980402 0.47975114 0.35127677 0.63334362 #>  [37] 0.82676649 0.82333985 0.90453368 0.83585618 0.48081964 0.23342963 #>  [43] 0.45068374 0.44592544 0.27665660 0.96312764 0.90378447 0.15429159 #>  [49] 0.82497191 0.13850154 0.57465151 0.86311361 0.63283793 0.57287967 #>  [55] 0.61809713 0.29652106 0.07961815 0.17872988 0.21109669 0.85859283 #>  [61] 0.89137109 0.68542246 0.10463733 0.89608692 0.16636902 0.61469616 #>  [67] 0.18458082 0.41468880 0.09335044 0.51187344 0.75291451 0.19158835 #>  [73] 0.75890005 0.80550325 0.16182822 0.96748417 0.38789328 0.63900522 #>  [79] 0.74979861 0.86748997 0.98056875 0.71512575 0.07859048 0.67326397 #>  [85] 0.25793168 0.61379431 0.95613845 0.67392463 0.64055610 0.34220117 #>  [91] 0.15908740 0.54330533 0.71684012 0.38684755 0.69465222 0.77297388 #>  [97] 0.71725451 0.98183038 0.37913944 0.85154330 0.11785159 0.91874664 #> [103] 0.46569803 0.21389746 0.88406757 0.50188351 0.27582432 0.84993153 #> [109] 0.18516798 0.38672502 0.45726713 0.20055512 0.59191418 0.83012383 #> [115] 0.54469125 0.44215417 0.81324569 0.54542807 0.86049359 0.46718920 #> [121] 0.84895888 0.74162419 0.50125285 0.67458837 0.11373657 0.21441122 #> [127] 0.91123397 0.48948812 0.66828735 0.73720020 0.52493637 0.79954571 #> [133] 0.91780960 0.85981985 0.43127341 0.85297599 0.88715541 0.85522480 #> [139] 0.73143944 0.83147079 0.39299029 0.59075876 0.67821714 0.87889834 #> [145] 0.77766702 0.58991399 0.56422065 0.42903779 0.14128043 0.81275516 #> [151] 0.58888890 0.86511576 0.25115496 0.89463909 0.43471261 0.11850416 #> [157] 0.31573380 0.91042242 0.27385790 0.08214272 0.37908747 0.92998145 #> [163] 0.66823731 0.87251865 0.69693437 0.86180043 0.71476116 0.73903346 #> [169] 0.69168588 0.83911924 0.64366328 0.78469183 0.48349187 0.72187598 #> [175] 0.53136838 0.95805367 0.38379718 0.64555166 0.73111819 0.40201555 #> [181] 0.64911164 0.77734001 0.06376600 0.75651206 0.94168865 0.99189940 #> [187] 0.36593096 0.63663468 0.60924196 0.68461924 0.61468485 0.24204430 #> [193] 0.39726338 0.75136804 0.44077378 0.79870529 0.82763490 0.29196733 #> [199] 0.88937900 0.81740812 0.80089226 0.36272330 0.88194858 0.90163033 #> [205] 0.25755703 0.75785820 0.81530951 0.35841269 0.44496241 0.64347599 #> [211] 0.79833372 0.87875903 0.94163475 0.65130727 0.69927823 0.98216578 #> [217] 0.61455144 0.72889668 0.75091622 0.86487968 0.73141595 0.35090528 #> [223] 0.92591220 0.48911586 0.65249531 0.16066816 0.70916986 0.64041982 #> [229] 0.58544763 0.77464527 0.92503948 0.75077728 0.65460105 0.46852590 #> [235] 0.71088153 0.84867772 0.93966053 0.35405820 0.86862286 0.88001294 #> [241] 0.08680445 0.08477307 0.98882356 0.28145548 0.18591190 0.61361793 #> [247] 0.56824610 0.91373398 0.68407584 0.94893069 0.68779622 0.33129949 #> [253] 0.79700604 0.96634980 0.42794355 0.94225415 0.49196380 0.70818035 #> [259] 0.74116031 0.75984028 0.08132085 0.86711277 0.18334460 0.62294901 #> [265] 0.75542629 0.44170165 0.91200580 0.44338099 0.45558438 0.76241704 #> [271] 0.35572626 0.69113453 0.78123082 0.43033224 0.26012468 0.62823273 #> [277] 0.75393284 0.94606372 0.83983358 0.22328580 0.42286614 0.14062985 #> [283] 0.27386468 0.11779016 0.80337194 0.51933611 0.36881090 0.70062996 #> [289] 0.83493151 0.99117144 0.57094728 0.06313638 0.80875914 0.94266032 #> [295] 0.12777784 0.47610234 0.69435159 0.79350717 0.95351438 0.91006601 #> [301] 0.85883962 0.74275562 0.69529663 0.47869818 0.64596593 0.45345700 #> [307] 0.95911570 0.95857285 0.82846807 0.85933010 0.59455924 0.82524196 #> [313] 0.78014102 0.91033691 0.91614756 0.82746074 0.95060273 0.80178441 #> [319] 0.80081621 0.72688469 0.67735460 0.97926357 0.85653477 0.44309686 #> [325] 0.27285135 0.63952102 0.59202533 0.22608738 0.92527633 0.56673735 #> [331] 0.54385298 0.46701425 0.05658487 0.55319107 0.99398514 0.68533460 #> [337] 0.54818728 0.94580220 0.55442897 0.97937863 0.80742145 0.79778397 #> [343] 0.69342993 0.41146598 0.72938135 0.82027706 0.41691595 0.88067461 #> [349] 0.25387985 0.61320603 0.05975770 0.42837669 0.52954638 0.22052528 #> [355] 0.94430254 0.87140169 0.84646390 0.75366560 0.91019260 0.53849062 #> [361] 0.66177238 0.37188042 0.79655486 0.15240485 0.96098201 0.03043969 #> [367] 0.65894887 0.74991890 0.70186533 0.41997344 0.71707470 0.55319242 #> [373] 0.90914641 0.52958748 0.73244619 0.97952602 0.88028276 0.68948481 #> [379] 0.79675247 0.45409922 0.31100461 0.09950736 0.40785965 0.83481471 #> [385] 0.75575167 0.83569698 0.76119345 0.59297679 0.77808017 0.81224094 #> [391] 0.93492160 0.65006009 0.95019220 0.63095629 0.11437315 0.50124412 #> [397] 0.17239869 0.31892591 0.80297566 0.95303787 0.61207155 0.84116687 #> [403] 0.46378385 0.87754530 0.73913123 0.46400531 0.50400174 0.80512167 #> [409] 0.31942962 0.24148657 0.54091649 0.78927540 0.23579890 0.22094229 #> [415] 0.98386149 0.17793230 0.85513175 0.46168215 0.69203616 0.88267026 #> [421] 0.86249310 0.34858501 0.18322245 0.88573263 0.68678062 0.96264287 #> [427] 0.33283612 0.83223973 0.71502666 0.44163432 0.28463186 0.68630496 #> [433] 0.59111921 0.31298746 0.72543282 0.08229440 0.25502266 0.08714235 #> [439] 0.32776552 0.88611011 0.21870166 0.80809301 0.87967981 0.55905150 #> [445] 0.61946102 0.78288941 0.98590395 0.21125546 0.80109439 0.29850169 #> [451] 0.45309806 0.28606683 0.32447386 0.72600260 0.45888179 0.32011740 #> [457] 0.41121898 0.81174941 0.11835578 0.52730461 0.47808793 0.59628405 #> [463] 0.73611274 0.77681207 0.93182988 0.55143480 0.22996905 0.19511506 #> [469] 0.79212844 0.93556131 0.68355777 0.82048125 0.31584176 0.54034343 #> [475] 0.59515152 0.90072967 0.79809964 0.39481008 0.34263428 0.70375377 #> [481] 0.38956986 0.81345003 0.38659075 0.37725564 0.46840088 0.76399859 #> [487] 0.63903049 0.73201965 0.85418058 0.34200847 0.91188564 0.59075801 #> [493] 0.88428820 0.67649442 0.36124889 0.40914519 0.76348505 0.55640937 #> [499] 0.43425633 0.59004395 #>  #> $xp #> NULL #>  #> $p_c #>   [1] 0.9626989 0.6699426 0.1766650 1.0030631 0.5601595 0.5763390 0.7149617 #>   [8] 0.9005397 0.1273165 0.2596665 0.7232847 0.9464742 0.9414004 0.3194193 #>  [15] 0.1675775 0.8572764 0.8705272 0.5320250 0.9625886 0.5984808 0.2173228 #>  [22] 0.8048962 0.4621777 0.1363331 0.2959386 0.2334611 0.7310019 0.3088134 #>  [29] 0.9078501 0.3465424 0.1522036 0.5420901 0.7239453 0.4152211 0.2872186 #>  [36] 0.6210211 0.8680808 0.8643176 0.9475897 0.8779935 0.4165646 0.2073168 #>  [43] 0.3800494 0.3746004 0.2341378 0.9971489 0.9468975 0.1665285 0.8661116 #>  [50] 0.1597489 0.5398588 0.9069261 0.6203374 0.5374214 0.6001833 0.2473323 #>  [57] 0.1385020 0.1779164 0.1946630 0.9022251 0.9351902 0.6906014 0.1467491 #>  [64] 0.9396917 0.1720208 0.5954840 0.1808036 0.3417058 0.1428853 0.4565788 #>  [71] 0.7794329 0.1843430 0.7869215 0.8441191 0.1699247 1.0005037 0.3174139 #>  [78] 0.6286324 0.7755449 0.9114343 1.0103359 0.7311158 0.1381880 0.6740033 #>  [85] 0.2222055 0.5942356 0.9916788 0.6748999 0.6307027 0.2802039 0.1686777 #>  [92] 0.4977533 0.7334108 0.3165066 0.7032679 0.8045368 0.7339644 1.0112653 #>  [99] 0.3099036 0.8948110 0.1515712 0.9604252 0.3978535 0.1962009 0.9280883 #> [106] 0.4435482 0.2335976 0.8931025 0.1810967 0.3164005 0.3877482 0.1890013 #> [113] 0.5637927 0.8717545 0.4995574 0.3703553 0.8530580 0.5005189 0.9042069 #> [120] 0.3996671 0.8920691 0.7654024 0.4427293 0.6758014 0.1500351 0.1964845 #> [127] 0.9537103 0.4275648 0.6672784 0.7598901 0.4737128 0.8370827 0.9595960 #> [134] 0.9035053 0.3585025 0.8963256 0.9311097 0.8986951 0.7525677 0.8732245 #> [141] 0.3218764 0.5621838 0.6807426 0.9229714 0.8103811 0.5610078 0.5255883 #> [148] 0.3561447 0.1609090 0.8524993 0.5595813 0.9089939 0.2179944 0.9383169 #> [155] 0.3621827 0.1518176 0.2606939 0.9529756 0.2323249 0.1392816 0.3098596 #> [162] 0.9701852 0.6672110 0.9165594 0.7063975 0.9055651 0.7306268 0.7621867 #> [169] 0.6991968 0.8815243 0.6348299 0.8190701 0.4199372 0.7401028 0.4821526 #> [176] 0.9931887 0.3138758 0.6373240 0.7521549 0.3299447 0.6419953 0.8099748 #> [183] 0.1338771 0.7839315 0.9800110 1.0185691 0.2989256 0.6254554 0.5879214 #> [190] 0.6895002 0.5954683 0.2124364 0.3256695 0.7775021 0.3688184 0.8360803 #> [197] 0.8690324 0.2442547 0.9332684 0.8577547 0.8386840 0.2963216 0.9259995 #> [204] 0.9448982 0.2219713 0.7856167 0.8553969 0.2928592 0.3735100 0.6345819 #> [211] 0.8356363 0.9228325 0.9799665 0.6448551 0.7096082 1.0115118 0.5952837 #> [218] 0.7492885 0.7769384 0.9087506 0.7525375 0.2869280 0.9666884 0.4270891 #> [225] 0.6463956 0.1693952 0.7230867 0.6305210 0.5547970 0.8066210 0.9659328 #> [232] 0.7767651 0.6491304 0.4012992 0.7254023 0.8917701 0.9783333 0.2894039 #> [239] 0.9125941 0.9240808 0.1407523 0.1401065 1.0163590 0.2372718 0.1814691 #> [246] 0.5939913 0.5310718 0.9559619 0.6887554 0.9859204 0.6938578 0.2720028 #> [253] 0.8340465 0.9996342 0.3550009 0.9804770 0.4307360 0.7217453 0.7648293 #> [260] 0.7880992 0.1390265 0.9110474 0.1801884 0.6068596 0.7825729 0.3698504 #> [267] 0.9544073 0.3717289 0.3857635 0.7913277 0.2907225 0.6984400 0.8147995 #> [274] 0.3575065 0.2235799 0.6140852 0.7807054 0.9835961 0.8822951 0.2014586 #> [281] 0.3497830 0.1606362 0.2323293 0.1515480 0.8416164 0.4663612 0.3012839 #> [288] 0.7114577 0.8769901 1.0180477 0.5347689 0.1337031 0.8479084 0.9808112 #> [295] 0.1554045 0.4106559 0.7028554 0.8298314 0.9895964 0.9526524 0.9024828 #> [302] 0.7668001 0.7041519 0.4139000 0.6378697 0.3832707 0.9940224 0.9935966 #> [309] 0.8699445 0.9029947 0.5674775 0.8664082 0.8134505 0.9528981 0.9581195 #> [316] 0.8688416 0.9872671 0.8397415 0.8385937 0.7466750 0.6795663 1.0093711 #> [323] 0.9000708 0.3714101 0.2316756 0.6293217 0.5639475 0.2030581 0.9661381 #> [330] 0.5290128 0.4984659 0.3994540 0.1319359 0.5107549 1.0200576 0.6904809 #> [337] 0.5041354 0.9833831 0.5124040 1.0094563 0.8463566 0.8349787 0.7015907 #> [344] 0.3386390 0.7499156 0.8609432 0.3438643 0.9247378 0.2196813 0.5934207 #> [351] 0.1327817 0.3554528 0.4797631 0.1998962 0.9821585 0.9154263 0.8894107 #> [358] 0.7803714 0.9527672 0.4914752 0.6585666 0.3038189 0.8335050 0.1656945 #> [365] 0.9954813 0.1256820 0.6548301 0.7756949 0.7131463 0.3468785 0.7337242 #> [372] 0.5107567 0.9518168 0.4798170 0.7538584 1.0095654 0.9243489 0.6961754 #> [379] 0.8337422 0.3840213 0.2573461 0.1449638 0.3352857 0.8768633 0.7829800 #> [386] 0.8778208 0.7897946 0.5652728 0.8108943 0.8519124 0.9743734 0.6432327 #> [393] 0.9869370 0.6177884 0.1502707 0.4427180 0.1748620 0.2629762 0.8411492 #> [400] 0.9892165 0.5918484 0.8837317 0.3955365 0.9216202 0.7623087 0.3958039 #> [407] 0.4463025 0.8436722 0.2633381 0.2121010 0.4946414 0.8246885 0.2087117 #> [414] 0.2001313 1.0127547 0.1775276 0.8985973 0.3930075 0.6996777 0.9267123 #> [421] 0.9062835 0.2851198 0.1801278 0.9297209 0.6924642 0.9967731 0.2731444 #> [428] 0.8740626 0.7309829 0.3697754 0.2393645 0.6918117 0.5626857 0.2587449 #> [435] 0.7447793 0.1393288 0.2203913 0.1408604 0.2693950 0.9300899 0.1988716 #> [442] 0.8471366 0.9237496 0.5185986 0.6020636 0.8168488 1.0142441 0.1947498 #> [449] 0.8389238 0.2486812 0.3828520 0.2403147 0.2669876 0.7455242 0.3896630 #> [456] 0.2638329 0.3384067 0.8513503 0.1517615 0.4768215 0.4131357 0.5698811 #> [463] 0.7585198 0.8093184 0.9717596 0.5084230 0.2052976 0.1861579 0.8281609 #> [470] 0.9749112 0.6880456 0.8611685 0.2607708 0.4938940 0.5683029 0.9440583 #> [477] 0.8353564 0.3234859 0.2805347 0.7157239 0.3188744 0.8532905 0.3162842 #> [484] 0.3083123 0.4011463 0.7933092 0.6286662 0.7533121 0.8975961 0.2800568 #> [491] 0.9542989 0.5621828 0.9283051 0.6783943 0.2951326 0.3364731 0.7926658 #> [498] 0.5150510 0.3616908 0.5611887 #>  #> $metrics #>       Eavg        E50        E90       Emax        ECI  #> 0.03791931 0.03865253 0.06905480 0.09524226 0.18294715  #>  #> $p_c_plot #> NULL #>  #> $p_c_plot_se #> NULL #>  #> $model #> Call: #> loess(formula = y ~ x) #>  #> Number of Observations: 500  #> Equivalent Number of Parameters: 4.47  #> Residual Standard Error: 0.4009  #>  #> $smooth_args #> $smooth_args$smooth #> [1] \"loess\" #>  #>  #> attr(,\"class\") #> [1] \"loess_cal\""},{"path":"https://stephenrho.github.io/pmcalibration/reference/logistic_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Run logistic calibration — logistic_cal","title":"Run logistic calibration — logistic_cal","text":"Fit models required assess calibration large (calibration intercept), calibration slope, overall 'weak' calibration (see, e.g., Van Calster et al. 2019). Fits models required three likelihood ratio tests described Miller et al. (1993) (see summary.logistic_cal).","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/logistic_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run logistic calibration — logistic_cal","text":"","code":"logistic_cal(y, p)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/logistic_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run logistic calibration — logistic_cal","text":"y binary outcome p predicted probabilities (logit transformed)","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/logistic_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run logistic calibration — logistic_cal","text":"object class logistic_cal containing glm results calculating calibration intercept, calibration slope, LRTs.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/logistic_cal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run logistic calibration — logistic_cal","text":"Van Calster, B., McLernon, D. J., Van Smeden, M., Wynants, L., & Steyerberg, E. W. (2019). Calibration: Achilles heel predictive analytics. BMC medicine, 17(1), 1-7. Miller, M. E., Langefeld, C. D., Tierney, W. M., Hui, S. L., & McDonald, C. J. (1993). Validation probabilistic predictions. Medical Decision Making, 13(1), 49-57.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/logistic_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run logistic calibration — logistic_cal","text":"","code":"library(pmcalibration) # simulate some data n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2)  # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  logistic_cal(y = dat$y, p = p) #> Logistic calibration intercept and slope: #>  #>                       Estimate Std. Error z value Pr(>|z|) lower upper #> Calibration Intercept   -0.055      0.108   -0.51     0.61 -0.27  0.16 #> Calibration Slope        0.864      0.089   -1.54     0.12  0.70  1.04 #>  #> z-value for calibration slope is relative to slope = 1. #> lower and upper are the bounds of 95% profile confidence intervals. #>  #> Likelihood ratio tests (a = intercept, b = slope): #>  #>                                              statistic df Pr(>Chi) #> Weak calibration - H0: a = 0, b = 1               2.49  2     0.29 #> Calibration in the large - H0: a = 0 | b = 1      0.26  1     0.61 #> Calibration slope - H0: b = 1 | a                 2.23  1     0.14"},{"path":"https://stephenrho.github.io/pmcalibration/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Logit transformation — logit","title":"Logit transformation — logit","text":"Logit transformation","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logit transformation — logit","text":"","code":"logit(mu)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logit transformation — logit","text":"mu vector numeric values 0 1","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logit transformation — logit","text":"logit transformed mu (log(mu/(1-mu)))","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/lowess_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"calibration curve via lowess — lowess_cal","title":"calibration curve via lowess — lowess_cal","text":"uses lowess iter = 0; done rms package","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/lowess_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibration curve via lowess — lowess_cal","text":"","code":"lowess_cal(p, y, x, xp, save_data = TRUE)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/lowess_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibration curve via lowess — lowess_cal","text":"p predicted probabilities y binary outcome x predictor (transformation p) xp values plotting (scale x) save_data whether save y, p, x, xp returned object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/lowess_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibration curve via lowess — lowess_cal","text":"list class lowess_cal","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/lowess_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calibration curve via lowess — lowess_cal","text":"","code":"library(pmcalibration) # simulate some data n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2)  # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  lowess_cal(y = dat$y, p = p, x = p, xp = NULL) #> $y #>   [1] 1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 0 #>  [38] 1 0 0 0 1 0 0 0 1 1 0 1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 1 1 1 0 #>  [75] 0 0 1 0 1 0 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 1 1 1 0 0 0 #> [112] 0 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 1 0 #> [149] 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 #> [186] 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 1 1 1 1 0 1 0 #> [223] 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 1 0 0 1 0 0 1 0 0 0 0 0 #> [260] 1 1 1 0 1 1 0 1 1 0 1 0 0 1 1 1 0 0 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 0 1 #> [297] 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 #> [334] 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 1 1 1 0 #> [371] 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 1 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 0 0 #> [408] 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 1 1 1 1 0 1 0 1 0 1 1 1 0 1 1 1 0 #> [445] 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 1 0 1 0 1 1 1 0 0 0 1 1 0 1 0 0 0 #> [482] 0 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 1 #>  #> $p #>   [1] 0.97667912 0.80511595 0.29113392 0.50107113 0.26713140 0.17750483 #>   [7] 0.73512825 0.84753621 0.73250348 0.90420700 0.49351356 0.80725725 #>  [13] 0.24681961 0.51714873 0.41711504 0.76910703 0.57174444 0.93419415 #>  [19] 0.99048051 0.96924805 0.29840492 0.64954718 0.70024485 0.81120976 #>  [25] 0.48792776 0.11493283 0.78331627 0.61841539 0.94596050 0.24776641 #>  [31] 0.99596368 0.07534832 0.40697226 0.89671354 0.51936849 0.40380305 #>  [37] 0.43750675 0.56857334 0.22384643 0.50366141 0.44192049 0.93124398 #>  [43] 0.22307833 0.23148331 0.80020637 0.86846079 0.57701770 0.51117658 #>  [49] 0.91173738 0.39635048 0.37101776 0.19375049 0.76847780 0.76138237 #>  [55] 0.37769272 0.36486773 0.35540601 0.82989421 0.17154968 0.48874892 #>  [61] 0.37265311 0.74937470 0.62195935 0.20466489 0.05344437 0.55033908 #>  [67] 0.30032554 0.47524927 0.76993180 0.64118195 0.59876683 0.67070475 #>  [73] 0.94049035 0.56780074 0.16493270 0.78105070 0.87091014 0.18208784 #>  [79] 0.63846041 0.08158080 0.69020516 0.67355699 0.39675036 0.21824780 #>  [85] 0.77162773 0.93219091 0.95527370 0.24444421 0.36414272 0.30211744 #>  [91] 0.24654049 0.83028587 0.78744007 0.86641488 0.59168355 0.70645625 #>  [97] 0.25250557 0.40635551 0.76185316 0.29530400 0.78817318 0.76080103 #> [103] 0.59289982 0.42096875 0.14746036 0.35966759 0.69242610 0.90535884 #> [109] 0.39098083 0.62826996 0.62256024 0.60826633 0.49487913 0.87632431 #> [115] 0.49115194 0.47872290 0.44496458 0.51877158 0.30585552 0.77809153 #> [121] 0.46214957 0.18598616 0.97337464 0.15003392 0.70799844 0.91199640 #> [127] 0.54822977 0.25236056 0.71176273 0.29649211 0.48829245 0.64553578 #> [133] 0.43798520 0.13972257 0.32966524 0.27752062 0.60744681 0.88426334 #> [139] 0.81129926 0.76822406 0.87183652 0.81372429 0.46195881 0.70977009 #> [145] 0.29835701 0.73103320 0.94000663 0.42810588 0.40232181 0.29046589 #> [151] 0.68466123 0.62231873 0.89766811 0.25809560 0.91279148 0.27713151 #> [157] 0.57270788 0.91320167 0.17908621 0.86148043 0.11707502 0.83768557 #> [163] 0.99526944 0.48278106 0.34880748 0.70917642 0.78983507 0.43568729 #> [169] 0.94508138 0.21028010 0.37895342 0.13343064 0.74143258 0.38659925 #> [175] 0.37538041 0.61582793 0.82240500 0.17489738 0.13812794 0.84701315 #> [181] 0.67526164 0.71527223 0.45050262 0.39264589 0.96148889 0.30285011 #> [187] 0.84587165 0.52328503 0.23037218 0.24196944 0.70896493 0.96549861 #> [193] 0.72284184 0.90616566 0.61467027 0.23396623 0.31724859 0.70794925 #> [199] 0.86831382 0.71954325 0.18266255 0.60609543 0.19827313 0.85269729 #> [205] 0.92204129 0.54370061 0.54982042 0.52088731 0.05608301 0.87307593 #> [211] 0.11621223 0.79237148 0.76228391 0.59805809 0.08779185 0.62119766 #> [217] 0.63873234 0.52954033 0.91229412 0.71946106 0.93628147 0.08330362 #> [223] 0.92951214 0.31408307 0.77050444 0.90760758 0.56048061 0.56839937 #> [229] 0.96885200 0.77240742 0.65840803 0.97148583 0.51370774 0.56855353 #> [235] 0.65035796 0.41715362 0.45425896 0.25529772 0.60528323 0.34274380 #> [241] 0.30188657 0.47878343 0.35195996 0.26044798 0.53226030 0.88261296 #> [247] 0.60311911 0.64880365 0.70394322 0.41760050 0.83242080 0.19160349 #> [253] 0.24647482 0.66820860 0.20514755 0.29802272 0.23780680 0.53804971 #> [259] 0.53075920 0.67850519 0.48004797 0.99027568 0.39916303 0.52924342 #> [265] 0.61353462 0.08412812 0.79169494 0.69566091 0.40405233 0.48913085 #> [271] 0.30560684 0.64298718 0.78645179 0.85552829 0.77359008 0.17563699 #> [277] 0.79836187 0.82837314 0.52322634 0.21911985 0.89391785 0.97631895 #> [283] 0.11493403 0.52701337 0.57318093 0.72053978 0.20871161 0.77841645 #> [289] 0.68196766 0.35499030 0.79145261 0.72904043 0.40831517 0.46681715 #> [295] 0.73623214 0.70635492 0.76644076 0.38133517 0.95063180 0.68257169 #> [301] 0.36617302 0.58468938 0.62558164 0.80659945 0.76698998 0.62270776 #> [307] 0.89176827 0.97964105 0.12536907 0.63545753 0.11741207 0.88109984 #> [313] 0.90051159 0.86147751 0.79194677 0.58658181 0.38523108 0.19746086 #> [319] 0.77723246 0.67367897 0.45123934 0.32429672 0.97012391 0.85772173 #> [325] 0.33222702 0.84215589 0.11638363 0.03206928 0.58416325 0.43002803 #> [331] 0.77826188 0.59002613 0.57348245 0.69168419 0.88396225 0.63665953 #> [337] 0.62495220 0.95639067 0.67805046 0.87308237 0.36730246 0.76724070 #> [343] 0.76308446 0.67159885 0.50018220 0.69308108 0.96597033 0.82440072 #> [349] 0.44594054 0.44200188 0.28217155 0.74160052 0.67877341 0.82753141 #> [355] 0.34050098 0.20773398 0.52168498 0.76543479 0.66250758 0.11163857 #> [361] 0.78770536 0.40700473 0.50642877 0.22645171 0.54996770 0.58405763 #> [367] 0.73143461 0.67698476 0.89709486 0.07211512 0.16560265 0.59135236 #> [373] 0.84715622 0.39329816 0.59712999 0.84574301 0.52852884 0.10950680 #> [379] 0.68928523 0.83583065 0.96267568 0.26875937 0.82331425 0.80010259 #> [385] 0.42609950 0.99370347 0.12510830 0.17620726 0.90599961 0.35846821 #> [391] 0.87087392 0.38253208 0.15518221 0.83010437 0.24498906 0.20919032 #> [397] 0.54398704 0.17454325 0.90970325 0.50429138 0.57291326 0.03930246 #> [403] 0.27977453 0.57983715 0.99539251 0.44626910 0.81285410 0.52225037 #> [409] 0.56244302 0.78269866 0.51588277 0.88630710 0.34489736 0.28360833 #> [415] 0.70004500 0.49319065 0.63873747 0.91760964 0.49185949 0.06923182 #> [421] 0.39134499 0.62943905 0.86434319 0.57412436 0.57486288 0.30167221 #> [427] 0.51040669 0.58423942 0.62370342 0.82155541 0.96903105 0.37018160 #> [433] 0.98488393 0.43020028 0.97724171 0.35430485 0.78094389 0.58917127 #> [439] 0.87331731 0.05266966 0.94310514 0.83491833 0.45924452 0.15831434 #> [445] 0.81738435 0.67312257 0.70677118 0.47690363 0.68711132 0.78094588 #> [451] 0.66231511 0.37950727 0.57860525 0.88931788 0.56685570 0.53076408 #> [457] 0.84632388 0.80441322 0.09921472 0.86561636 0.56788839 0.70316259 #> [463] 0.19900512 0.11676741 0.97915487 0.51024281 0.42317122 0.18754187 #> [469] 0.95753091 0.08630787 0.52187200 0.50415047 0.05527398 0.41464870 #> [475] 0.79968457 0.32376191 0.67808067 0.75335315 0.39447345 0.37101977 #> [481] 0.35528411 0.35625559 0.43395737 0.24517720 0.94167569 0.88352631 #> [487] 0.79997372 0.45063681 0.61669849 0.18558934 0.50084821 0.19452418 #> [493] 0.55112162 0.37830067 0.39206786 0.69573838 0.79396146 0.79309236 #> [499] 0.66192523 0.71543715 #>  #> $x #>   [1] 0.97667912 0.80511595 0.29113392 0.50107113 0.26713140 0.17750483 #>   [7] 0.73512825 0.84753621 0.73250348 0.90420700 0.49351356 0.80725725 #>  [13] 0.24681961 0.51714873 0.41711504 0.76910703 0.57174444 0.93419415 #>  [19] 0.99048051 0.96924805 0.29840492 0.64954718 0.70024485 0.81120976 #>  [25] 0.48792776 0.11493283 0.78331627 0.61841539 0.94596050 0.24776641 #>  [31] 0.99596368 0.07534832 0.40697226 0.89671354 0.51936849 0.40380305 #>  [37] 0.43750675 0.56857334 0.22384643 0.50366141 0.44192049 0.93124398 #>  [43] 0.22307833 0.23148331 0.80020637 0.86846079 0.57701770 0.51117658 #>  [49] 0.91173738 0.39635048 0.37101776 0.19375049 0.76847780 0.76138237 #>  [55] 0.37769272 0.36486773 0.35540601 0.82989421 0.17154968 0.48874892 #>  [61] 0.37265311 0.74937470 0.62195935 0.20466489 0.05344437 0.55033908 #>  [67] 0.30032554 0.47524927 0.76993180 0.64118195 0.59876683 0.67070475 #>  [73] 0.94049035 0.56780074 0.16493270 0.78105070 0.87091014 0.18208784 #>  [79] 0.63846041 0.08158080 0.69020516 0.67355699 0.39675036 0.21824780 #>  [85] 0.77162773 0.93219091 0.95527370 0.24444421 0.36414272 0.30211744 #>  [91] 0.24654049 0.83028587 0.78744007 0.86641488 0.59168355 0.70645625 #>  [97] 0.25250557 0.40635551 0.76185316 0.29530400 0.78817318 0.76080103 #> [103] 0.59289982 0.42096875 0.14746036 0.35966759 0.69242610 0.90535884 #> [109] 0.39098083 0.62826996 0.62256024 0.60826633 0.49487913 0.87632431 #> [115] 0.49115194 0.47872290 0.44496458 0.51877158 0.30585552 0.77809153 #> [121] 0.46214957 0.18598616 0.97337464 0.15003392 0.70799844 0.91199640 #> [127] 0.54822977 0.25236056 0.71176273 0.29649211 0.48829245 0.64553578 #> [133] 0.43798520 0.13972257 0.32966524 0.27752062 0.60744681 0.88426334 #> [139] 0.81129926 0.76822406 0.87183652 0.81372429 0.46195881 0.70977009 #> [145] 0.29835701 0.73103320 0.94000663 0.42810588 0.40232181 0.29046589 #> [151] 0.68466123 0.62231873 0.89766811 0.25809560 0.91279148 0.27713151 #> [157] 0.57270788 0.91320167 0.17908621 0.86148043 0.11707502 0.83768557 #> [163] 0.99526944 0.48278106 0.34880748 0.70917642 0.78983507 0.43568729 #> [169] 0.94508138 0.21028010 0.37895342 0.13343064 0.74143258 0.38659925 #> [175] 0.37538041 0.61582793 0.82240500 0.17489738 0.13812794 0.84701315 #> [181] 0.67526164 0.71527223 0.45050262 0.39264589 0.96148889 0.30285011 #> [187] 0.84587165 0.52328503 0.23037218 0.24196944 0.70896493 0.96549861 #> [193] 0.72284184 0.90616566 0.61467027 0.23396623 0.31724859 0.70794925 #> [199] 0.86831382 0.71954325 0.18266255 0.60609543 0.19827313 0.85269729 #> [205] 0.92204129 0.54370061 0.54982042 0.52088731 0.05608301 0.87307593 #> [211] 0.11621223 0.79237148 0.76228391 0.59805809 0.08779185 0.62119766 #> [217] 0.63873234 0.52954033 0.91229412 0.71946106 0.93628147 0.08330362 #> [223] 0.92951214 0.31408307 0.77050444 0.90760758 0.56048061 0.56839937 #> [229] 0.96885200 0.77240742 0.65840803 0.97148583 0.51370774 0.56855353 #> [235] 0.65035796 0.41715362 0.45425896 0.25529772 0.60528323 0.34274380 #> [241] 0.30188657 0.47878343 0.35195996 0.26044798 0.53226030 0.88261296 #> [247] 0.60311911 0.64880365 0.70394322 0.41760050 0.83242080 0.19160349 #> [253] 0.24647482 0.66820860 0.20514755 0.29802272 0.23780680 0.53804971 #> [259] 0.53075920 0.67850519 0.48004797 0.99027568 0.39916303 0.52924342 #> [265] 0.61353462 0.08412812 0.79169494 0.69566091 0.40405233 0.48913085 #> [271] 0.30560684 0.64298718 0.78645179 0.85552829 0.77359008 0.17563699 #> [277] 0.79836187 0.82837314 0.52322634 0.21911985 0.89391785 0.97631895 #> [283] 0.11493403 0.52701337 0.57318093 0.72053978 0.20871161 0.77841645 #> [289] 0.68196766 0.35499030 0.79145261 0.72904043 0.40831517 0.46681715 #> [295] 0.73623214 0.70635492 0.76644076 0.38133517 0.95063180 0.68257169 #> [301] 0.36617302 0.58468938 0.62558164 0.80659945 0.76698998 0.62270776 #> [307] 0.89176827 0.97964105 0.12536907 0.63545753 0.11741207 0.88109984 #> [313] 0.90051159 0.86147751 0.79194677 0.58658181 0.38523108 0.19746086 #> [319] 0.77723246 0.67367897 0.45123934 0.32429672 0.97012391 0.85772173 #> [325] 0.33222702 0.84215589 0.11638363 0.03206928 0.58416325 0.43002803 #> [331] 0.77826188 0.59002613 0.57348245 0.69168419 0.88396225 0.63665953 #> [337] 0.62495220 0.95639067 0.67805046 0.87308237 0.36730246 0.76724070 #> [343] 0.76308446 0.67159885 0.50018220 0.69308108 0.96597033 0.82440072 #> [349] 0.44594054 0.44200188 0.28217155 0.74160052 0.67877341 0.82753141 #> [355] 0.34050098 0.20773398 0.52168498 0.76543479 0.66250758 0.11163857 #> [361] 0.78770536 0.40700473 0.50642877 0.22645171 0.54996770 0.58405763 #> [367] 0.73143461 0.67698476 0.89709486 0.07211512 0.16560265 0.59135236 #> [373] 0.84715622 0.39329816 0.59712999 0.84574301 0.52852884 0.10950680 #> [379] 0.68928523 0.83583065 0.96267568 0.26875937 0.82331425 0.80010259 #> [385] 0.42609950 0.99370347 0.12510830 0.17620726 0.90599961 0.35846821 #> [391] 0.87087392 0.38253208 0.15518221 0.83010437 0.24498906 0.20919032 #> [397] 0.54398704 0.17454325 0.90970325 0.50429138 0.57291326 0.03930246 #> [403] 0.27977453 0.57983715 0.99539251 0.44626910 0.81285410 0.52225037 #> [409] 0.56244302 0.78269866 0.51588277 0.88630710 0.34489736 0.28360833 #> [415] 0.70004500 0.49319065 0.63873747 0.91760964 0.49185949 0.06923182 #> [421] 0.39134499 0.62943905 0.86434319 0.57412436 0.57486288 0.30167221 #> [427] 0.51040669 0.58423942 0.62370342 0.82155541 0.96903105 0.37018160 #> [433] 0.98488393 0.43020028 0.97724171 0.35430485 0.78094389 0.58917127 #> [439] 0.87331731 0.05266966 0.94310514 0.83491833 0.45924452 0.15831434 #> [445] 0.81738435 0.67312257 0.70677118 0.47690363 0.68711132 0.78094588 #> [451] 0.66231511 0.37950727 0.57860525 0.88931788 0.56685570 0.53076408 #> [457] 0.84632388 0.80441322 0.09921472 0.86561636 0.56788839 0.70316259 #> [463] 0.19900512 0.11676741 0.97915487 0.51024281 0.42317122 0.18754187 #> [469] 0.95753091 0.08630787 0.52187200 0.50415047 0.05527398 0.41464870 #> [475] 0.79968457 0.32376191 0.67808067 0.75335315 0.39447345 0.37101977 #> [481] 0.35528411 0.35625559 0.43395737 0.24517720 0.94167569 0.88352631 #> [487] 0.79997372 0.45063681 0.61669849 0.18558934 0.50084821 0.19452418 #> [493] 0.55112162 0.37830067 0.39206786 0.69573838 0.79396146 0.79309236 #> [499] 0.66192523 0.71543715 #>  #> $xp #> NULL #>  #> $p_c #>   [1]  1.000576525  0.793550144  0.244736637  0.500148640  0.215338108 #>   [6]  0.104294272  0.712546611  0.843301936  0.709498144  0.911351661 #>  [11]  0.492369766  0.796036851  0.190338292  0.515888837  0.402594815 #>  [16]  0.751877241  0.563779259  0.948040400  1.017739403  0.991352144 #>  [21]  0.253611418  0.629740224  0.676034301  0.800639711  0.486636192 #>  [26]  0.026315777  0.768291209  0.602987493  0.962534213  0.191506473 #>  [31]  1.024566209 -0.022653942  0.389825440  0.902251543  0.518027345 #>  [36]  0.385675211  0.427184313  0.561140301  0.161939625  0.502713776 #>  [41]  0.432512718  0.944409899  0.160987756  0.171394154  0.787848603 #>  [46]  0.868218688  0.568167617  0.510135283  0.920523409  0.376234042 #>  [51]  0.343407835  0.124546293  0.751150640  0.742956162  0.352064329 #>  [56]  0.335514177  0.323535622  0.822495182  0.096864580  0.487478099 #>  [61]  0.345506845  0.729070240  0.606016042  0.138129200 -0.049542404 #>  [66]  0.545555778  0.255955668  0.473171879  0.752829637  0.622482207 #>  [71]  0.586306954  0.649056592  0.955788550  0.560496792  0.088607853 #>  [76]  0.765671483  0.871150107  0.110010921  0.620170455 -0.014972182 #>  [81]  0.667167999  0.651700892  0.376740626  0.154999820  0.754787998 #>  [86]  0.945575203  0.974040281  0.187407447  0.334595089  0.258140561 #>  [91]  0.189993898  0.822954792  0.773059656  0.865770109  0.580344168 #>  [96]  0.681811263  0.197346365  0.389015532  0.743500364  0.249826516 #> [101]  0.773907359  0.742284167  0.581367518  0.407343014  0.066808917 #> [106]  0.328922057  0.669144268  0.912753228  0.369276387  0.611447979 #> [111]  0.606529546  0.594339758  0.493775320  0.877645669  0.489941827 #> [116]  0.476947955  0.436187638  0.517452283  0.262698446  0.762253656 #> [121]  0.457911189  0.114870666  0.996472614  0.070019121  0.683370815 #> [126]  0.920839709  0.543745041  0.197167666  0.687177465  0.251276698 #> [131]  0.487010093  0.626178093  0.427761914  0.057162465  0.291741483 #> [136]  0.228083608  0.593646766  0.887197421  0.800743938  0.750857636 #> [141]  0.872258818  0.803567989  0.457674100  0.685162396  0.253552937 #> [146]  0.707790525  0.955193282  0.416023338  0.383798723  0.243919990 #> [151]  0.662110880  0.606323155  0.903408559  0.204230272  0.921810585 #> [156]  0.227606402  0.564581022  0.922311468  0.106266823  0.859879277 #> [161]  0.028976051  0.831659516  1.023701458  0.481359449  0.315294096 #> [166]  0.684562050  0.775829042  0.424987810  0.961450101  0.145110102 #> [171]  0.353704742  0.049323722  0.719864912  0.363530932  0.349055578 #> [176]  0.600778944  0.813711195  0.101041847  0.055175811  0.842681927 #> [181]  0.653293310  0.690554002  0.443288142  0.371459734  0.981733718 #> [186]  0.259033908  0.841333014  0.521659093  0.170019276  0.184354002 #> [191]  0.684348174  0.986703046  0.698290555  0.913734970  0.599793123 #> [196]  0.174466444  0.276584297  0.683321063  0.868042788  0.694663197 #> [201]  0.110727793  0.592504039  0.130178267  0.849426778  0.933118444 #> [206]  0.539851085  0.545110540  0.519435724 -0.046311880  0.873742165 #> [211]  0.027904604  0.778767246  0.743998289  0.585710267 -0.007309579 #> [216]  0.605365130  0.620402747  0.527410004  0.921203255  0.694584119 #> [221]  0.950609072 -0.012848738  0.942284981  0.272725957  0.753490884 #> [226]  0.915489502  0.554399766  0.560995392  0.990861060  0.755688544 #> [231]  0.637811712  0.994126866  0.512573800  0.561123799  0.630460201 #> [236]  0.402643057  0.448104273  0.200787024  0.591817238  0.307798756 #> [241]  0.257859055  0.477013756  0.319231529  0.207125268  0.529799024 #> [246]  0.885205049  0.589987257  0.629079965  0.679269943  0.403201963 #> [251]  0.825460120  0.121872673  0.189912876  0.646781044  0.138729511 #> [256]  0.253144914  0.179211279  0.534884019  0.528480571  0.656323311 #> [261]  0.478388389  1.017484469  0.379797083  0.527149224  0.598826046 #> [266] -0.011832515  0.777983538  0.672022720  0.385991001  0.487869675 #> [271]  0.262395223  0.624014628  0.771916877  0.852786430  0.757054502 #> [276]  0.101964414  0.785706570  0.820710215  0.521604671  0.156082232 #> [281]  0.898862970  1.000129215  0.026317264  0.525116319  0.564974689 #> [286]  0.695621971  0.143161164  0.762628938  0.659577801  0.323016401 #> [291]  0.777702814  0.705476065  0.391588938  0.463508394  0.713828702 #> [296]  0.681708794  0.748798382  0.356803861  0.968305412  0.660145838 #> [301]  0.337189531  0.574491664  0.609111534  0.795272936  0.749432594 #> [306]  0.606655609  0.896257526  1.004255010  0.039288633  0.617605275 #> [311]  0.029394619  0.883386181  0.906855055  0.859875793  0.778275255 #> [316]  0.576051668  0.361782526  0.129166760  0.761261439  0.651814846 #> [321]  0.444232716  0.285180487  0.992438156  0.855400231  0.294872299 #> [326]  0.836942099  0.028117457 -0.075632012  0.574057955  0.418296149 #> [331]  0.762450414  0.578949652  0.565225611  0.668484090  0.886833943 #> [336]  0.618632070  0.608573632  0.975422919  0.655898515  0.873749881 #> [341]  0.338639189  0.749722102  0.744922718  0.649871680  0.499233682 #> [346]  0.669727093  0.987287955  0.816048604  0.437438946  0.432610970 #> [351]  0.233777765  0.720059840  0.656573872  0.819722452  0.305026392 #> [356]  0.141946404  0.520175391  0.747636743  0.641583857  0.022224807 #> [361]  0.773366409  0.389868076  0.505454269  0.165168205  0.545236968 #> [366]  0.573970890  0.708256730  0.654902981  0.902713732 -0.026631243 #> [371]  0.089443858  0.580065509  0.842850990  0.372315041  0.584928897 #> [376]  0.841181008  0.526521589  0.019577461  0.666349415  0.829475310 #> [381]  0.983202780  0.217338629  0.814773635  0.787728092  0.413650936 #> [386]  1.021750866  0.038964383  0.102675741  0.913532917  0.327401631 #> [391]  0.871106765  0.358333417  0.076440986  0.822741809  0.188079701 #> [396]  0.143755991  0.540102853  0.100599966  0.918039524  0.503337627 #> [401]  0.564751934 -0.066820037  0.230843074  0.570491787  1.023854756 #> [406]  0.437860205  0.802554610  0.520699665  0.556034281  0.767577058 #> [411]  0.514669214  0.889664696  0.310460771  0.235536819  0.675859448 #> [416]  0.492037398  0.620407127  0.927694055  0.490667255 -0.030178108 #> [421]  0.369753899  0.612464046  0.863290668  0.565759801  0.566374396 #> [426]  0.257597681  0.509393575  0.574120743  0.607506469  0.812718465 #> [431]  0.991083070  0.342334619  1.010773628  0.418499817  1.001275216 #> [436]  0.322160277  0.765548119  0.578230388  0.874031051 -0.050490891 #> [441]  0.959013046  0.828401025  0.454300621  0.080349005  0.807844685 #> [446]  0.651295080  0.682129738  0.474970283  0.664414991  0.765550421 #> [451]  0.641406757  0.354425413  0.569476293  0.893299358  0.559709656 #> [456]  0.528484860  0.841867418  0.792734057  0.006818093  0.864814420 #> [461]  0.560569793  0.678586980  0.131089803  0.028594047  1.003651207 #> [466]  0.509231283  0.410050813  0.116809861  0.976834357 -0.009141578 #> [471]  0.520348805  0.503198090 -0.047302392  0.399510201  0.787242632 #> [476]  0.284528204  0.655926737  0.733674885  0.373856158  0.343410417 #> [481]  0.323383370  0.324596733  0.422942308  0.188311828  0.957250286 #> [486]  0.886307664  0.787578431  0.443460196  0.601520287  0.114376035 #> [491]  0.499919186  0.125509762  0.546227554  0.352855387  0.370701774 #> [496]  0.672091653  0.780609095  0.779602318  0.641048019  0.690712669 #>  #> $metrics #>       Eavg        E50        E90       Emax        ECI  #> 0.02555958 0.01753799 0.06836613 0.10770130 0.12877808  #>  #> $p_c_plot #> NULL #>  #> $p_c_plot_se #> NULL #>  #> $smooth_args #> $smooth_args$smooth #> [1] \"lowess\" #>  #>  #> attr(,\"class\") #> [1] \"lowess_cal\""},{"path":"https://stephenrho.github.io/pmcalibration/reference/plot.pmcalibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a calibration curve — plot.pmcalibration","title":"Plot a calibration curve — plot.pmcalibration","text":"Plot pmcalibration object. binary outcomes, also plot distribution predicted risks outcome. Alternatively can use get_curve() get data required plot calibration curve.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/plot.pmcalibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a calibration curve — plot.pmcalibration","text":"","code":"# S3 method for class 'pmcalibration' plot(   x,   conf_level = 0.95,   riskdist = TRUE,   linecol = \"black\",   fillcol = \"grey\",   ideallty = 2,   idealcol = \"red\",   ... )"},{"path":"https://stephenrho.github.io/pmcalibration/reference/plot.pmcalibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a calibration curve — plot.pmcalibration","text":"x pmcalibration calibration curve conf_level width confidence interval (0.95 gives 95% CI). Ignored call pmcalibration request confidence intervals riskdist add risk distribution plot calibration curve (TRUE) (FALSE) linecol color calibration curve line fillcol color confidence interval ideallty line type ideal unit slope line idealcol color ideal unit slope line ... args plot() (currently lims labs can specified)","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/plot.pmcalibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a calibration curve — plot.pmcalibration","text":"return value, called side effects","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/plot.pmcalibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a calibration curve — plot.pmcalibration","text":"","code":"library(pmcalibration) # simulate some data with a binary outcome n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2) head(dat) #>           x1         x2 y         LP #> 1 -0.9802799  0.0734722 0 -0.4212124 #> 2 -1.4877218 -1.3790974 1 -1.9564765 #> 3  0.1761391  0.3903213 1  1.0802105 #> 4  0.8570410 -0.1267395 1  1.2085773 #> 5  0.0808151 -1.5949875 0 -1.0399522 #> 6 -0.4012543 -1.4866294 1 -1.2685804 # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  # fit calibration curve cal <- pmcalibration(y = dat$y, p = p, smooth = \"gam\", k = 20, ci = \"pw\", plot = FALSE)  plot(cal, xlab = \"Predicted Risk of Outcome\") # customize plot"},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pmcalibration: Calibration Curves for Clinical Prediction Models — pmcalibration-package","title":"pmcalibration: Calibration Curves for Clinical Prediction Models — pmcalibration-package","text":"Fit calibrations curves clinical prediction models calculate several associated metrics (Eavg, E50, E90, Emax). Ideally predicted probabilities prediction model align observed probabilities. Calibration curves relate predicted probabilities (transformation thereof) observed outcomes via flexible non-linear smoothing function. 'pmcalibration' allows users choose several smoothers (regression splines, generalized additive models/GAMs, lowess, loess). binary time--event outcomes supported. See Van Calster et al. (2016) doi:10.1016/j.jclinepi.2015.12.005 ; Austin Steyerberg (2019) doi:10.1002/sim.8281 ; Austin et al. (2020) doi:10.1002/sim.8570 .","code":""},{"path":[]},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pmcalibration: Calibration Curves for Clinical Prediction Models — pmcalibration-package","text":"Maintainer: Stephen Rhodes steverho89@gmail.com [copyright holder]","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a calibration curve — pmcalibration","title":"Create a calibration curve — pmcalibration","text":"Assess calibration clinical prediction models (agreement predicted observed probabilities) via different smooths. Binary time--event outcomes supported.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a calibration curve — pmcalibration","text":"","code":"pmcalibration(   y,   p,   smooth = c(\"gam\", \"none\", \"ns\", \"bs\", \"rcs\", \"lowess\", \"loess\"),   time = NULL,   ci = c(\"sim\", \"boot\", \"pw\", \"none\"),   n = 1000,   transf = NULL,   eval = 100,   plot = TRUE,   ... )"},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a calibration curve — pmcalibration","text":"y binary right-censored time--event outcome. Latter must object created via survival::Surv. p predicted probabilities clinical prediction model. time--event object time must specified p predicted probabilities outcome happening time units time follow-. smooth smooth use. Available options: 'gam' (default) = generalized additive model via mgcv::gam mgcv::s. Optional arguments bs, k, fx, method (see ?mgcv::gam  ?mgcv::s) 'rcs' = restricted cubic spline using rms::rcs. Optional arguments smooth nk (number knots; defaults 5) knots (knot positions; set Hmisc::rcs.eval specified) 'ns' = natural spline using splines::ns. Optional arguments df (default = 6), knots, Boundary.knots (see ?splines::ns) 'bs' = B-spline using splines::bs. Optional arguments df (default = 6), knots, Boundary.knots (see ?splines::bs) 'lowess' = uses lowess(x, y, iter = 0) based rms::calibrate. binary outcomes. 'loess' = uses loess defaults. binary outcomes. 'none' = logistic Cox regression single predictor variable (binary outcome performs logistic calibration transf = \"logit\"). See logistic_cal 'rcs', 'ns', 'bs', 'none' fit via glm survival::coxph 'gam' fit via mgcv::gam family = Binomial(link=\"logit\") binary outcome mgcv::cox.ph y time--event. time follow time predicted probabilities correspond ? used y Surv object ci kind confidence intervals compute? 'sim' = simulation based inference. Note currently available binary outcomes. n samples taken multivariate normal distribution mean vector = coef(mod) variance covariance = vcov(model). 'boot' = bootstrap resampling n replicates. y p sampled replacement calibration curve reestimated. knots specified knots used resample (otherwise calculated using resampled p transformation thereof) 'pw' = pointwise confidence intervals calculated via standard errors produced relevant predict methods. plotting curves; selected, CIs produced metrics (available smooth = 'lowess') Calibration metrics calculated using simulation boot sample. options percentile confidence intervals returned. n number simulations bootstrap resamples transf transformation applied p prior fitting calibration curve. Valid options 'logit', 'cloglog', 'none', function (must retain order p). unspecified defaults 'logit' binary outcomes 'cloglog' (complementary log-log) time--event outcomes. eval number points (equally spaced min(p) max(p)) evaluate plotting (0 NULL = plotting). Can vector probabilities. plot plot produced? Default = TRUE. Plot created default settings. See plot.pmcalibration. ... additional arguments particular smooths. ci = 'boot' user able run samples parallel (using parallel package) specifying cores argument","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a calibration curve — pmcalibration","text":"pmcalibration object containing calibration metrics values plotting","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a calibration curve — pmcalibration","text":"Austin P. C., Steyerberg E. W. (2019) Integrated Calibration Index (ICI) related metrics quantifying calibration logistic regression models. Statistics Medicine. 38, pp. 1–15. https://doi.org/10.1002/sim.8281 Van Calster, B., Nieboer, D., Vergouwe, Y., De Cock, B., Pencina M., Steyerberg E.W. (2016). calibration hierarchy risk models defined: utopia empirical data. Journal Clinical Epidemiology, 74, pp. 167-176. https://doi.org/10.1016/j.jclinepi.2015.12.005 Austin, P. C., Harrell Jr, F. E., & van Klaveren, D. (2020). Graphical calibration curves integrated calibration index (ICI) survival models. Statistics Medicine, 39(21), 2714-2742. https://doi.org/10.1002/sim.8570","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/pmcalibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a calibration curve — pmcalibration","text":"","code":"# binary outcome ------------------------------------- library(pmcalibration) # simulate some data n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2) head(dat) #>            x1          x2 y         LP #> 1 -0.79656573  0.78782032 1 0.36574445 #> 2  0.99246366  2.17238436 1 4.09605053 #> 3 -0.32348141  2.49976601 1 2.51455903 #> 4  0.04091126 -0.43830184 1 0.09902312 #> 5 -0.08776347  0.49726921 1 0.90077732 #> 6 -0.21569343  0.09228747 0 0.37261288 # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  # fit calibration curve cal <- pmcalibration(y = dat$y, p = p, smooth = \"gam\", k = 20, ci = \"pw\")   summary(cal) #> Calibration metrics based on a calibration curve estimated for a binary outcome via a generalized additive model (see ?mgcv::s) using logit transformed predicted probabilities. #>  #>      Estimate #> Eavg    0.021 #> E50     0.015 #> E90     0.044 #> Emax    0.046 #> ECI     0.065  plot(cal)  # time to event outcome ------------------------------------- library(pmcalibration) if (requireNamespace(\"survival\", quietly = TRUE)){ library(survival)  data('transplant', package=\"survival\") transplant <- na.omit(transplant) transplant = subset(transplant, futime > 0) transplant$ltx <- as.numeric(transplant$event == \"ltx\")  # get predictions from coxph model at time = 100 # note that as we are fitting and evaluating the model on the same data cph <- coxph(Surv(futime, ltx) ~ age + sex + abo + year, data = transplant)  time <- 100 newd <- transplant; newd$futime <- time; newd$ltx <- 1 p <- 1 - exp(-predict(cph, type = \"expected\", newdata=newd)) y <- with(transplant, Surv(futime, ltx))  cal <- pmcalibration(y = y, p = p, smooth = \"rcs\", nk=5, ci = \"pw\", time = time)  summary(cal)  plot(cal)  }"},{"path":"https://stephenrho.github.io/pmcalibration/reference/predict_lowess.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predictions from loewss fit — predict_lowess","title":"Get predictions from loewss fit — predict_lowess","text":"Adapted rms:::calibrate.default Uses approx rule = 2 x range initial lowess fit returns min max (see ?approx)","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/predict_lowess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predictions from loewss fit — predict_lowess","text":"","code":"predict_lowess(fit, x)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/predict_lowess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predictions from loewss fit — predict_lowess","text":"fit list produced lowess x values produce predictions ","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/predict_lowess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predictions from loewss fit — predict_lowess","text":"predicted values","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a logistic_cal object — print.logistic_cal","title":"Print a logistic_cal object — print.logistic_cal","text":"Print logistic_cal object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a logistic_cal object — print.logistic_cal","text":"","code":"# S3 method for class 'logistic_cal' print(x, digits = 2, conf_level = 0.95, ...)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a logistic_cal object — print.logistic_cal","text":"x logistic_cal object digits number digits print conf_level width confidence interval (0.95 gives 95% CI) ... optional arguments passed print","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a logistic_cal object — print.logistic_cal","text":"prints summary","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_calsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a logistic_cal summary — print.logistic_calsummary","title":"Print a logistic_cal summary — print.logistic_calsummary","text":"Print logistic_cal summary","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_calsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a logistic_cal summary — print.logistic_calsummary","text":"","code":"# S3 method for class 'logistic_calsummary' print(x, digits = 2, ...)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_calsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a logistic_cal summary — print.logistic_calsummary","text":"x logistic_calsummary object digits number digits print ... ignored","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.logistic_calsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a logistic_cal summary — print.logistic_calsummary","text":"prints summary","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibration.html","id":null,"dir":"Reference","previous_headings":"","what":"print a pmcalibration object — print.pmcalibration","title":"print a pmcalibration object — print.pmcalibration","text":"print pmcalibration object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print a pmcalibration object — print.pmcalibration","text":"","code":"# S3 method for class 'pmcalibration' print(x, digits = 2, conf_level = 0.95, ...)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print a pmcalibration object — print.pmcalibration","text":"x pmcalibration object digits number digits print conf_level width confidence interval (0.95 gives 95% CI) ... optional arguments passed print","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print a pmcalibration object — print.pmcalibration","text":"prints summary","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibrationsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary of pmcalibration object — print.pmcalibrationsummary","title":"Print summary of pmcalibration object — print.pmcalibrationsummary","text":"Print summary pmcalibration object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibrationsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary of pmcalibration object — print.pmcalibrationsummary","text":"","code":"# S3 method for class 'pmcalibrationsummary' print(x, digits = 2, ...)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibrationsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary of pmcalibration object — print.pmcalibrationsummary","text":"x pmcalibrationsummary object digits number digits print ... ignored","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/print.pmcalibrationsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print summary of pmcalibration object — print.pmcalibrationsummary","text":"invisible(x) - prints summary","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/reg_spline_X.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a design matrix for regression spline — reg_spline_X","title":"Make a design matrix for regression spline — reg_spline_X","text":"Make design matrix regression spline","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/reg_spline_X.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a design matrix for regression spline — reg_spline_X","text":"","code":"reg_spline_X(x, xp, smooth, ...)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/reg_spline_X.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a design matrix for regression spline — reg_spline_X","text":"x values predictor xp values predictor plotting calibration curve smooth spline use (rms::rcs, splines::ns, splines::bs currently supported via 'rcs', 'ns', 'bs'). smooth = 'none' results x predictor (.e., spline) ... additional arguments specific splines ('nk' 'knots' 'rcs', 'df' 'knots' 'ns' 'bs')","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/reg_spline_X.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a design matrix for regression spline — reg_spline_X","text":"list containing X design matrix data Xp design matrix plotting","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/reg_spline_X.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a design matrix for regression spline — reg_spline_X","text":"","code":"x <- rnorm(100) xp <- seq(min(x), max(x), length.out=50) reg_spline_X(x = x, xp = xp, smooth=\"rcs\", nk=6) #> $X #>              V1           V2           V3           V4           V5 #> 1   -0.26817764 2.786483e-01 1.269038e-02 0.000000e+00 0.000000e+00 #> 2   -0.20868646 3.161660e-01 1.784929e-02 1.141717e-06 0.000000e+00 #> 3    0.16617454 6.321578e-01 8.421913e-02 6.585834e-03 2.882288e-05 #> 4   -1.00887460 2.793852e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 5   -0.34298872 2.358418e-01 7.754095e-03 0.000000e+00 0.000000e+00 #> 6   -0.38396887 2.143707e-01 5.695113e-03 0.000000e+00 0.000000e+00 #> 7   -0.23043200 3.020854e-01 1.582713e-02 6.276454e-12 0.000000e+00 #> 8   -0.19909174 3.225154e-01 1.879369e-02 3.362771e-06 0.000000e+00 #> 9   -1.73386243 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #> 10   1.08290292 2.132981e+00 6.475838e-01 2.283640e-01 9.134178e-02 #> 11   1.04785755 2.056552e+00 6.143625e-01 2.126048e-01 8.332205e-02 #> 12   1.38593140 2.822749e+00 9.529882e-01 3.763536e-01 1.683958e-01 #> 13  -1.64822635 3.830254e-09 0.000000e+00 0.000000e+00 0.000000e+00 #> 14   2.70704774 5.896506e+00 2.326267e+00 1.048552e+00 5.220884e-01 #> 15   0.40284210 9.126245e-01 1.664437e-01 2.678102e-02 2.887784e-03 #> 16  -1.04922946 2.299906e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 17  -0.20082470 3.213624e-01 1.862071e-02 2.841349e-06 0.000000e+00 #> 18  -0.71039247 8.774486e-02 1.463178e-05 0.000000e+00 0.000000e+00 #> 19  -0.76095933 7.434784e-02 1.985070e-10 0.000000e+00 0.000000e+00 #> 20  -1.08154382 1.949236e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 21  -0.50527539 1.585270e-01 1.785004e-03 0.000000e+00 0.000000e+00 #> 22   0.79843067 1.547759e+00 4.000076e-01 1.147133e-01 3.562791e-02 #> 23  -0.32431790 2.460817e-01 8.836993e-03 0.000000e+00 0.000000e+00 #> 24   0.71895266 1.402052e+00 3.420135e-01 9.018016e-02 2.480929e-02 #> 25   0.73575435 1.432077e+00 3.537851e-01 9.505123e-02 2.688927e-02 #> 26  -0.14844672 3.574426e-01 2.433430e-02 5.883691e-05 0.000000e+00 #> 27  -0.33826436 2.384054e-01 8.019222e-03 0.000000e+00 0.000000e+00 #> 28  -1.14687221 1.352899e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 29   0.09940033 5.650183e-01 6.732217e-02 3.790272e-03 0.000000e+00 #> 30  -1.42492220 1.224986e-03 0.000000e+00 0.000000e+00 0.000000e+00 #> 31  -0.73879483 8.003818e-02 1.348640e-06 0.000000e+00 0.000000e+00 #> 32   0.11351031 5.787883e-01 7.068415e-02 4.297187e-03 1.945991e-07 #> 33  -1.89219794 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #> 34   0.44432241 9.690289e-01 1.848625e-01 3.239214e-02 4.250650e-03 #> 35   0.77749485 1.508488e+00 3.841726e-01 1.078902e-01 3.254100e-02 #> 36  -1.71450237 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #> 37   0.74966574 1.457258e+00 3.637333e-01 9.921433e-02 2.869667e-02 #> 38   2.26652038 4.871548e+00 1.868339e+00 8.244024e-01 4.041464e-01 #> 39  -1.27219576 5.745785e-03 0.000000e+00 0.000000e+00 0.000000e+00 #> 40   0.68230458 1.338025e+00 3.172491e-01 8.013869e-02 2.065040e-02 #> 41  -0.04886114 4.332993e-01 3.820556e-02 6.341429e-04 0.000000e+00 #> 42   0.96800589 1.886388e+00 5.411678e-01 1.783129e-01 6.611140e-02 #> 43   0.56060091 1.139428e+00 2.436277e-01 5.217654e-02 1.020279e-02 #> 44  -0.13581586 3.665295e-01 2.586782e-02 9.026361e-05 0.000000e+00 #> 45   0.34579177 8.386854e-01 1.431699e-01 2.017924e-02 1.539491e-03 #> 46  -0.23833433 2.970740e-01 1.513196e-02 0.000000e+00 0.000000e+00 #> 47  -0.26025727 2.834619e-01 1.331059e-02 0.000000e+00 0.000000e+00 #> 48   1.72848247 3.619716e+00 1.309049e+00 5.506375e-01 2.600979e-01 #> 49  -0.49175377 1.642035e-01 2.081930e-03 0.000000e+00 0.000000e+00 #> 50  -1.61206667 6.473879e-06 0.000000e+00 0.000000e+00 0.000000e+00 #> 51   0.42059335 9.364865e-01 1.741684e-01 2.909536e-02 3.428272e-03 #> 52  -0.27211044 2.762785e-01 1.238970e-02 0.000000e+00 0.000000e+00 #> 53   1.38681782 2.824809e+00 9.539085e-01 3.768039e-01 1.686326e-01 #> 54   0.69496293 1.359915e+00 3.256627e-01 8.351791e-02 2.202960e-02 #> 55  -0.07927130 4.090993e-01 3.352467e-02 3.663768e-04 0.000000e+00 #> 56   0.01119744 4.838597e-01 4.869090e-02 1.492117e-03 0.000000e+00 #> 57   0.82709130 1.602497e+00 4.222987e-01 1.244503e-01 4.011437e-02 #> 58   0.94353578 1.835479e+00 5.195149e-01 1.683063e-01 6.116742e-02 #> 59  -1.25337814 6.643972e-03 0.000000e+00 0.000000e+00 0.000000e+00 #> 60   0.67000705 1.316985e+00 3.092154e-01 7.694430e-02 1.936684e-02 #> 61  -0.48063975 1.689695e-01 2.349300e-03 0.000000e+00 0.000000e+00 #> 62  -0.50672840 1.579249e-01 1.754890e-03 0.000000e+00 0.000000e+00 #> 63   0.77760081 1.508685e+00 3.842517e-01 1.079241e-01 3.255621e-02 #> 64  -0.21032649 3.150891e-01 1.769110e-02 9.062908e-07 0.000000e+00 #> 65   0.10147841 5.670324e-01 6.781047e-02 3.862279e-03 1.482253e-12 #> 66   0.02585225 4.967666e-01 5.151157e-02 1.779913e-03 0.000000e+00 #> 67  -0.03022089 4.485945e-01 4.127957e-02 8.496748e-04 0.000000e+00 #> 68   0.80677001 1.563571e+00 4.064216e-01 1.175000e-01 3.690274e-02 #> 69   0.75545722 1.467826e+00 3.679283e-01 1.009820e-01 2.947182e-02 #> 70  -1.39897153 1.695846e-03 0.000000e+00 0.000000e+00 0.000000e+00 #> 71   1.16106424 2.306661e+00 7.236989e-01 2.648178e-01 1.100870e-01 #> 72  -0.94099725 3.775889e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 73  -1.79040486 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #> 74  -0.76633107 7.301060e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 75   0.89108079 1.728537e+00 4.744716e-01 1.477428e-01 5.115257e-02 #> 76  -0.83461813 5.738391e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 77  -0.71828490 8.555584e-02 8.911209e-06 0.000000e+00 0.000000e+00 #> 78  -1.15692793 1.273629e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 79   0.75744116 1.471458e+00 3.693725e-01 1.015922e-01 2.974040e-02 #> 80   1.51723972 3.128226e+00 1.089463e+00 4.431527e-01 2.035421e-01 #> 81   0.95297019 1.855033e+00 5.278169e-01 1.721344e-01 6.305391e-02 #> 82   0.32352231 8.109440e-01 1.347096e-01 1.793035e-02 1.156062e-03 #> 83  -2.05403025 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #> 84   0.50583273 1.056876e+00 2.146023e-01 4.207668e-02 6.971279e-03 #> 85  -1.08736138 1.890160e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 86   1.42621519 2.916443e+00 9.948426e-01 3.968376e-01 1.791722e-01 #> 87  -0.03828729 4.419322e-01 3.992985e-02 7.512423e-04 0.000000e+00 #> 88   0.25134365 7.252457e-01 1.095895e-01 1.179883e-02 3.559990e-04 #> 89  -0.23138488 3.014781e-01 1.574220e-02 0.000000e+00 0.000000e+00 #> 90   0.67121182 1.319037e+00 3.099963e-01 7.725343e-02 1.949016e-02 #> 91  -0.88540092 4.733381e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 92  -1.14053154 1.404536e-02 0.000000e+00 0.000000e+00 0.000000e+00 #> 93   0.10106911 5.666353e-01 6.771411e-02 3.848025e-03 0.000000e+00 #> 94  -0.13105050 3.699975e-01 2.646271e-02 1.045386e-04 0.000000e+00 #> 95  -0.21014823 3.152061e-01 1.770825e-02 9.301435e-07 0.000000e+00 #> 96   0.18565297 6.526987e-01 8.963222e-02 7.603564e-03 6.331744e-05 #> 97  -0.07411109 4.131406e-01 3.429037e-02 4.050901e-04 0.000000e+00 #> 98  -1.29758621 4.667546e-03 0.000000e+00 0.000000e+00 0.000000e+00 #> 99   2.46620478 5.336146e+00 2.075911e+00 9.260060e-01 4.576077e-01 #> 100 -0.49793278 1.615929e-01 1.942463e-03 0.000000e+00 0.000000e+00 #>  #> $Xp #>             V1           V2           V3           V4           V5 #> 1  -2.05403025 0.000000e+00 0.0000000000 0.000000e+00 0.000000e+00 #> 2  -1.95686539 0.000000e+00 0.0000000000 0.000000e+00 0.000000e+00 #> 3  -1.85970053 0.000000e+00 0.0000000000 0.000000e+00 0.000000e+00 #> 4  -1.76253568 0.000000e+00 0.0000000000 0.000000e+00 0.000000e+00 #> 5  -1.66537082 0.000000e+00 0.0000000000 0.000000e+00 0.000000e+00 #> 6  -1.56820596 6.091412e-05 0.0000000000 0.000000e+00 0.000000e+00 #> 7  -1.47104111 6.189749e-04 0.0000000000 0.000000e+00 0.000000e+00 #> 8  -1.37387625 2.253236e-03 0.0000000000 0.000000e+00 0.000000e+00 #> 9  -1.27671139 5.543028e-03 0.0000000000 0.000000e+00 0.000000e+00 #> 10 -1.17954654 1.106768e-02 0.0000000000 0.000000e+00 0.000000e+00 #> 11 -1.08238168 1.940653e-02 0.0000000000 0.000000e+00 0.000000e+00 #> 12 -0.98521682 3.113891e-02 0.0000000000 0.000000e+00 0.000000e+00 #> 13 -0.88805196 4.684414e-02 0.0000000000 0.000000e+00 0.000000e+00 #> 14 -0.79088711 6.710157e-02 0.0000000000 0.000000e+00 0.000000e+00 #> 15 -0.69372225 9.249051e-02 0.0000337908 0.000000e+00 0.000000e+00 #> 16 -0.59655739 1.235903e-01 0.0004783258 0.000000e+00 0.000000e+00 #> 17 -0.49939254 1.609803e-01 0.0019104505 0.000000e+00 0.000000e+00 #> 18 -0.40222768 2.052398e-01 0.0049094965 0.000000e+00 0.000000e+00 #> 19 -0.30506282 2.569481e-01 0.0100547953 0.000000e+00 0.000000e+00 #> 20 -0.20789797 3.166847e-01 0.0179256786 1.268119e-06 0.000000e+00 #> 21 -0.11073311 3.850287e-01 0.0291014780 1.822906e-04 0.000000e+00 #> 22 -0.01356825 4.625596e-01 0.0441615251 1.079330e-03 0.000000e+00 #> 23  0.08359661 5.498566e-01 0.0636851517 3.271718e-03 0.000000e+00 #> 24  0.18076146 6.474992e-01 0.0882516892 7.338786e-03 5.293608e-05 #> 25  0.27792632 7.560666e-01 0.1184404693 1.385987e-02 5.806037e-04 #> 26  0.37509118 8.761382e-01 0.1548308236 2.341429e-02 2.161757e-03 #> 27  0.47225603 1.008293e+00 0.1980020838 3.658139e-02 5.375727e-03 #> 28  0.56942089 1.153111e+00 0.2485335814 5.394049e-02 1.080185e-02 #> 29  0.66658575 1.311171e+00 0.3070046482 7.607094e-02 1.901944e-02 #> 30  0.76375060 1.483046e+00 0.3739895285 1.035482e-01 3.060477e-02 #> 31  0.86091546 1.668484e+00 0.4494775315 1.365045e-01 4.577944e-02 #> 32  0.95808032 1.865663e+00 0.5323380327 1.742237e-01 6.408609e-02 #> 33  1.05524518 2.072581e+00 0.6213139528 2.158936e-01 8.499069e-02 #> 34  1.15241003 2.287235e+00 0.7151482129 2.607020e-01 1.079592e-01 #> 35  1.24957489 2.507624e+00 0.8125837338 3.078370e-01 1.324576e-01 #> 36  1.34673975 2.731746e+00 0.9123634364 3.564863e-01 1.579519e-01 #> 37  1.44390460 2.957600e+00 1.0132307596 4.058383e-01 1.839082e-01 #> 38  1.54106946 3.183670e+00 1.1142335815 4.552778e-01 2.099220e-01 #> 39  1.63823432 3.409739e+00 1.2152364035 5.047173e-01 2.359359e-01 #> 40  1.73539917 3.635809e+00 1.3162392254 5.541568e-01 2.619497e-01 #> 41  1.83256403 3.861879e+00 1.4172420473 6.035963e-01 2.879636e-01 #> 42  1.92972889 4.087948e+00 1.5182448692 6.530358e-01 3.139775e-01 #> 43  2.02689374 4.314018e+00 1.6192476911 7.024753e-01 3.399913e-01 #> 44  2.12405860 4.540088e+00 1.7202505131 7.519149e-01 3.660052e-01 #> 45  2.22122346 4.766157e+00 1.8212533350 8.013544e-01 3.920190e-01 #> 46  2.31838832 4.992227e+00 1.9222561569 8.507939e-01 4.180329e-01 #> 47  2.41555317 5.218297e+00 2.0232589788 9.002334e-01 4.440468e-01 #> 48  2.51271803 5.444366e+00 2.1242618008 9.496729e-01 4.700606e-01 #> 49  2.60988289 5.670436e+00 2.2252646227 9.991124e-01 4.960745e-01 #> 50  2.70704774 5.896506e+00 2.3262674446 1.048552e+00 5.220884e-01 #>  #> $smooth_args #> $smooth_args$smooth #> [1] \"rcs\" #>  #> $smooth_args$nk #> [1] 6 #>  #> $smooth_args$knots #> NULL #>  #> $smooth_args$knots_used #> [1] -1.6515402 -0.7621948 -0.2308227  0.1012369  0.7389540  1.4307664 #>  #>"},{"path":"https://stephenrho.github.io/pmcalibration/reference/riskdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a plot of predicted risks by outcome — riskdist","title":"Make a plot of predicted risks by outcome — riskdist","text":"Make plot predicted risks outcome","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/riskdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a plot of predicted risks by outcome — riskdist","text":"","code":"riskdist(   y,   p,   ypos = 0,   labels = c(0, 1),   nbins = 101,   add = TRUE,   maxh = 0.15 )"},{"path":"https://stephenrho.github.io/pmcalibration/reference/riskdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a plot of predicted risks by outcome — riskdist","text":"y vector binary outcome p vector predicted risks ypos center y axis labels labels outcomes 0 1, respectively. Default \"0\" \"1\" nbins Default 101 add TRUE (default) added existing plot. FALSE new plot made maxh maximum height bar (bin largest number observations). Default = .15","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/riskdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a plot of predicted risks by outcome — riskdist","text":"return value, called side effects","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/run_boots.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to run bootstrap resamples using parallel — run_boots","title":"Wrapper to run bootstrap resamples using parallel — run_boots","text":"Wrapper run bootstrap resamples using parallel","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/run_boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to run bootstrap resamples using parallel — run_boots","text":"","code":"run_boots(cal, R = 1000, cores = 1)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/run_boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to run bootstrap resamples using parallel — run_boots","text":"cal object created one _cal functions R number resamples (default = 1000) cores number cores (parallel)","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/run_boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to run bootstrap resamples using parallel — run_boots","text":"list created one boot. functions","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/sim_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a binary outcome with either a quadratic relationship or interaction — sim_dat","title":"Simulate a binary outcome with either a quadratic relationship or interaction — sim_dat","text":"Function simulating data either single 'predictor' variable quadratic relationship logit(p) two predictors interact (see references examples).","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/sim_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a binary outcome with either a quadratic relationship or interaction — sim_dat","text":"","code":"sim_dat(N, a1, a2 = NULL, a3 = NULL)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/sim_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a binary outcome with either a quadratic relationship or interaction — sim_dat","text":"N number observations simulate a1 value intercept term (logits). must provided along either a2 a3. a2 value quadratic coefficient. specified linear predictor simulated follows: LP <- a1 + x1 + a2*x1^2 x1 sampled standard normal distribution. a3 value interaction coefficient. specified linear predictor simulated follows: LP <- a1 + x1 + x2 + x1*x2*a3 x1 x2 sampled independent standard normal distributions.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/sim_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a binary outcome with either a quadratic relationship or interaction — sim_dat","text":"simulated data set N rows. Can split 'development' 'validation' sets.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/sim_dat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate a binary outcome with either a quadratic relationship or interaction — sim_dat","text":"Austin, P. C., & Steyerberg, E. W. (2019). Integrated Calibration Index (ICI) related metrics quantifying calibration logistic regression models. Statistics medicine, 38(21), 4051-4065. Rhodes, S. (2022, November 4). Using restricted cubic splines assess calibration clinical prediction models: Logit transform predicted probabilities first. https://doi.org/10.31219/osf.io/4n86q","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/sim_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a binary outcome with either a quadratic relationship or interaction — sim_dat","text":"","code":"library(pmcalibration) # simulate some data with a binary outcome n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2)  head(dat) # LP = linear predictor #>           x1         x2 y         LP #> 1 -0.5381156  1.4852597 1  1.2872958 #> 2  0.9606686  0.6594172 1  2.2467820 #> 3  0.9887032 -1.7521091 0 -0.6098691 #> 4  0.2356989 -0.1821829 1  0.5449279 #> 5 -1.4456681  0.3269426 0 -0.7132556 #> 6 -0.3154586  0.3461028 1  0.5088080"},{"path":"https://stephenrho.github.io/pmcalibration/reference/simb.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation based inference with a calibration curve object — simb","title":"Simulation based inference with a calibration curve object — simb","text":"Simulation based inference calibration curve object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/simb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation based inference with a calibration curve object — simb","text":"","code":"simb(cal, R)  # S3 method for class 'glm_cal' simb(cal, R = 1000)  # S3 method for class 'gam_cal' simb(cal, R = 1000)  # S3 method for class 'lowess_cal' simb(cal, R)  # S3 method for class 'loess_cal' simb(cal, R)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/simb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation based inference with a calibration curve object — simb","text":"cal object created using one cal functions R number simulated replicates","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/simb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation based inference with a calibration curve object — simb","text":"simulated calibration metrics values plotting","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.logistic_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a logistic_cal object — summary.logistic_cal","title":"Summarize a logistic_cal object — summary.logistic_cal","text":"Summarize logistic_cal object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.logistic_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a logistic_cal object — summary.logistic_cal","text":"","code":"# S3 method for class 'logistic_cal' summary(object, conf_level = 0.95, ...)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.logistic_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a logistic_cal object — summary.logistic_cal","text":"object logistic_cal object conf_level width confidence interval (0.95 gives 95% CI) ... ignored","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.logistic_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a logistic_cal object — summary.logistic_cal","text":"estimates conf_level*100 confidence intervals calibration intercept calibration slope. former estimated glm (family = binomial(\"logit\")) linear predictor (logit(p)) included offset. Results three likelihood ratio tests described Miller et al. (2013) (see details).","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.logistic_cal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize a logistic_cal object — summary.logistic_cal","text":"likelihood ratio tests proposed Miller et al. test following: first assesses weak calibration overall testing null hypothesis intercept () slope (b) equal 0 1, respectively. second assesses calibration large tests intercept 0 slope fixed 1. third test assesses calibration slope correcting calibration large (estimating new intercept term). Note p-values calibration intercept calibration slope estimates typically agree p-values second third likelihood ratio tests always match perfectly former based z-statistics latter based log likelihood differences (chi-squared statistics).","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.logistic_cal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarize a logistic_cal object — summary.logistic_cal","text":"Miller, M. E., Langefeld, C. D., Tierney, W. M., Hui, S. L., & McDonald, C. J. (1993). Validation probabilistic predictions. Medical Decision Making, 13(1), 49-57.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.pmcalibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a pmcalibration object — summary.pmcalibration","title":"Summarize a pmcalibration object — summary.pmcalibration","text":"Summarize pmcalibration object","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.pmcalibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a pmcalibration object — summary.pmcalibration","text":"","code":"# S3 method for class 'pmcalibration' summary(object, conf_level = 0.95, ...)"},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.pmcalibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a pmcalibration object — summary.pmcalibration","text":"object object created pmcalibration conf_level width confidence interval (0.95 gives 95% CI). Ignored call pmcalibration request confidence intervals ... ignored","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.pmcalibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a pmcalibration object — summary.pmcalibration","text":"prints summary calibration metrics. Returns list two tables: metrics plot","code":""},{"path":"https://stephenrho.github.io/pmcalibration/reference/summary.pmcalibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a pmcalibration object — summary.pmcalibration","text":"","code":"library(pmcalibration) # simulate some data with a binary outcome n <- 500 dat <- sim_dat(N = n, a1 = .5, a3 = .2) head(dat) #>            x1          x2 y          LP #> 1  0.38019967 -0.84698687 0 -0.03119203 #> 2 -1.51760209 -0.98065777 0 -1.70061020 #> 3 -0.09620778 -0.64314055 0 -0.22697330 #> 4  0.70967500 -0.41240988 1  0.73872972 #> 5 -0.78327597  0.01902665 0 -0.26722994 #> 6  0.82607637  2.33121484 1  4.04244350 # predictions p <- with(dat, invlogit(.5 + x1 + x2 + x1*x2*.1))  # fit calibration curve cal <- pmcalibration(y = dat$y, p = p, smooth = \"gam\", k = 20, ci = \"pw\")   summary(cal) #> Calibration metrics based on a calibration curve estimated for a binary outcome via a generalized additive model (see ?mgcv::s) using logit transformed predicted probabilities. #>  #>      Estimate #> Eavg    0.036 #> E50     0.032 #> E90     0.061 #> Emax    0.190 #> ECI     0.212"},{"path":"https://stephenrho.github.io/pmcalibration/news/index.html","id":"pmcalibration-020","dir":"Changelog","previous_headings":"","what":"pmcalibration 0.2.0","title":"pmcalibration 0.2.0","text":"Several minor changes well bigger changes default plotting function functions used assessing ‘weak’ calibration (logistic_cal) Fixed bug smooth = \"none\" Predictions (p) <= 0 >= 1 now excluded produce warning. pmcalibration output now includes p_c slot containing value calibration curve observation. Changed pmcalibration default smooth \"gam\" instead \"none\". Improved plot function show risk distribution (binary outcomes); Added likelihood ratio tests logistic_cal functions test overall ‘weak’ calibration. Added plot argument pmcalibration produces plot default (without make separate call); Moved vignette material readme (internal validation material developed pminternal package, hopefully cran soon). get_cc renamed get_curve.","code":""},{"path":"https://stephenrho.github.io/pmcalibration/news/index.html","id":"pmcalibration-010","dir":"Changelog","previous_headings":"","what":"pmcalibration 0.1.0","title":"pmcalibration 0.1.0","text":"CRAN release: 2023-09-06 Initial CRAN submission.","code":""}]
